{"version":3,"sources":["webpack:///./client/lib/quill/blots/subscript.js","webpack:///./client/actions/link_sets.js","webpack:///./shared/delta/convert_quotes.js","webpack:///./client/lib/quill/blots/autolink.js","webpack:///./shared/delta/group_items_match.js","webpack:///./client/actions/streams.js","webpack:///./client/lib/quill/modules/line_ids.js","webpack:///./shared/has_minimal_layout.js","webpack:///./shared/delta/get_all_offsets.js","webpack:///./client/lib/quill/blots/object.js","webpack:///./shared/delta/group_is_complete.js","webpack:///./client/lib/quill/modules/debounced_text_change.js","webpack:///./client/lib/quill/attributors/boolean_data_attributor.js","webpack:///./client/lib/quill/blots/image.js","webpack:///./client/lib/quill/modules/autolink_tooltip.js","webpack:///./client/initializers/editor/reload_tab.js","webpack:///./client/lib/quill/blots/bold.js","webpack:///./client/lib/quill/blots/bullet.js","webpack:///./client/lib/quill/blots/strike.js","webpack:///./client/initializers/defaults/doc/contributors.js","webpack:///./client/lib/quill/blots/oembed.js","webpack:///./client/lib/quill/blots/ratingcard.js","webpack:///./client/lib/quill/modules/soft_breaks.js","webpack:///./client/lib/quill/blots/pullquote.js","webpack:///./client/lib/quill/blots/toh_tools.js","webpack:///./client/lib/quill/modules/clipboard.js","webpack:///./client/initializers/defaults/doc/comments.js","webpack:///./shared/delta/allowlist_formats.js","webpack:///./client/lib/quill/modules/toolbar.js","webpack:///./shared/query_regex.js","webpack:///./client/lib/get_query_params.js","webpack:///./client/lib/remove_incomplete_groups.js","webpack:///./client/lib/quill/blots/fifthheader.js","webpack:///./client/lib/quill/blots/endmark.js","webpack:///./shared/delta/parse_groups.js","webpack:///./client/lib/quill/blots/ins.js","webpack:///./client/lib/quill/blots/br.js","webpack:///./client/lib/quill/blots/thirdheader.js","webpack:///./client/lib/quill/blots/secondheader.js","webpack:///./client/initializers/editor/quill.js","webpack:///./shared/delta/get_op.js","webpack:///./client/lib/remove_invalid_formats.js","webpack:///./client/lib/quill/blots/video.js","webpack:///./client/lib/quill/blots/credits.js","webpack:///./client/lib/quill/blots/grouping.js","webpack:///./client/lib/is_draft.js","webpack:///./client/lib/quill/blots/hr.js","webpack:///./client/lib/quill/blots/doc.js","webpack:///./client/lib/quill/blots/blockquote.js","webpack:///./shared/chunk_by.js","webpack:///./client/lib/quill/blots/superscript.js","webpack:///./client/initializers/editor/unsaved_warning.js","webpack:///./client/lib/quill/blots/author.js","webpack:///./client/initializers/editor/community_changed_notice.js","webpack:///./client/lib/quill/modules/link_tooltip.js","webpack:///./client/lib/quill/blots/list.js","webpack:///./client/initializers/editor/doc/package_stories.js","webpack:///./client/lib/quill/modules/object_behavior.js","webpack:///./client/initializers/defaults/doc/slug_is_evergreen_default.js","webpack:///./client/actions/contributors.js","webpack:///./client/actions/groups.js","webpack:///./client/lib/quill/modules/placeholder.js","webpack:///./client/lib/quill/modules/inline_mode.js","webpack:///./client/lib/set_line_defaults.js","webpack:///./client/lib/quill/blots/fourthheader.js","webpack:///./client/lib/quill/blots/ad_placement.js","webpack:///./client/lib/quill/blots/actionbox.js","webpack:///./client/lib/group_by_first_char.js","webpack:///./client/lib/comma_join.js","webpack:///./client/lib/quill/modules/history.js","webpack:///./client/initializers/defaults/doc/custom_fields.js","webpack:///./client/lib/quill/blots/readmore.js","webpack:///./client/initializers/defaults/doc/link_sets.js","webpack:///./client/lib/quill/blots/mark.js","webpack:///./shared/errors/community_mismatch.js","webpack:///./client/lib/isolate_objects.js","webpack:///./client/initializers/editor/autosave.js","webpack:///./client/lib/quill/modules/double_spaces.js","webpack:///./client/lib/quill/blots/list_item.js","webpack:///./client/initializers/defaults/doc/groups.js","webpack:///./client/lib/quill/blots/italic.js","webpack:///./client/lib/quill/blots/del.js","webpack:///./client/lib/quill/blots/newsletter.js","webpack:///./client/lib/quill/blots/leadgraf.js","webpack:///./client/lib/quill/modules/multi_cursor.js","webpack:///./client/lib/quill/blots/pym.js","webpack:///./client/lib/quill/blots/position.js","webpack:///./client/middleware/load_doc.js","webpack:///./client/lib/quill/blots/toh_project_details.js","webpack:///./client/initializers/defaults/doc/lead_art.js","webpack:///./client/lib/quill/blots/html.js","webpack:///./client/initializers/editor/user_count_warning.js","webpack:///./client/initializers/editor/doc/entry_layout.js","webpack:///./client/lib/quill/blots/link.js","webpack:///./client/initializers/defaults/doc/autotweet.js","webpack:///./client/lib/quill/blots/dropcap.js","webpack:///./client/lib/microtask_debounce.js","webpack:///./client/lib/state_match_observer.js","webpack:///./client/lib/quill/blots/small.js","webpack:///./client/initializers/editor/doc/customstories.js","webpack:///./client/lib/quill/blots/id.js","webpack:///./client/lib/quill/blots/firstheader.js","webpack:///./client/initializers/defaults/doc/structured_tags.js","webpack:///./client/initializers/editor/doc/stream_members.js"],"names":["Inline","Quill","import","Subscript","blotName","tagName","register","loadLinkSets","then","linkSets","groupByFirstChar","request","require","query","per_page","community_id","app","state","get","opts","cache","response","_embedded","link_set","Delta","PRECEDES_OPEN_QUOTE","PRECEDES_OPEN_DOUBLE_QUOTE","concat","PRECEDES_OPEN_SINGLE_QUOTE","module","exports","delta","newDelta","opIndex","op","ops","entries","insert","push","prevOpLastChar","prevOp","length","converted","charIndex","char","split","prevChar","includes","attributes","PROTOCOLS","Autolink","value","node","super","create","dataset","autolinkId","id","autolinkHref","url","URL","protocol","err","sanitize","href","disabled","autolinkDisabled","domNode","hasAttribute","optimize","context","next","this","prev","isEqual","formats","moveChildren","remove","order","splice","indexOf","className","GROUPED_SUBDOCS","group","every","item","hasOwnProperty","some","type","doc","async","streamDocId","memberDocId","streams","p","li","oi","autosave","localUpdate","docActions","getDoc","head","contents","updateDoc","q","schema_name","archived","trashed","docs","searchDocs","memberIds","Set","map","has","text","isStream","isLinkPost","INVALID_STREAM_MEMBERSHIP","formatStreamMember","streamIds","stream","join","ids","doc_id","title","streamMembers","slice","orderBy","property","set","totalMembers","showDocMessage","newStreamMembers","filter","memberDoc","streamDocIndex","findIndex","ld","story_type_blocklist","results","page","pagination","stream_id","moment","tokenizer","commaJoin","urlForEntry","isPublished","queryRegex","messageActions","toPlaintext","sentenceCase","getEventDateTime","regex","highlightKeywords","sentences","draft","body","keywordSentence","find","sentence","test","byline","contributors","contributor","fullOrUserName","status","hidden","toLowerCase","date","getStatusDate","metadata","additionalText","additional_text","replace","match","action","streamDoc","streamUrl","entry_id","link","message","uuid","showMessage","time","publish_history","updated_at","format","config","dateFormat","ID_CHARS","LineIds","constructor","quill","ignoreChange","on","oldContents","source","insertIds","getContents","usedIds","retain","offset","makeId","add","chop","updateContents","i","charAt","Math","floor","random","layout","isValid","reduce","foundOps","Parchment","ObjectEmbed","Embed","object","JSON","stringify","frameId","v4","allowFullscreen","src","num","win","window","top","parent","numParents","parse","expectedLength","parseInt","grouping","DebouncedTextChange","reset","emitNow","emitter","emit","emitLater","compose","BooleanDataAttributor","Attributor","Attribute","name","options","canAdd","attrName","Image","ObjectBlot","preserveHeight","AutolinkTooltip","LinkTooltip","range","selection","savedRange","linkRange","autolink","Object","assign","formatText","onSelectionChange","scroll","descendant","AutolinkBlot","index","hide","preview","textContent","show","promptReload","startTimer","addEventListener","resetTimer","setTimeout","sockets","inactivePeriod","clearTimeout","Bold","replaceWith","Bullet","List","Strike","docUserId","userId","contributorActions","addContributor","Oembed","Ratingcard","SoftBreaks","delete","preLineFormats","findLineFormats","postLineFormats","br","formatLine","Pullquote","TohTools","QuillClipboard","Clipboard","convert","html","el","child","children","firstChild","parentNode","insertBefore","removeChild","stripGoogleDocsWrapper","container","Array","from","isEmpty","stripEmptyTags","innerHTML","childNodes","commentsClosed","clone","pick","Toolbar","document","querySelector","HTMLElement","update","getRange","console","error","getFormat","controls","querySelectorAll","button","classList","c","toggle","RegExp","querystring","location","search","parseGroups","result","groupIsComplete","groupItemsMatch","line","getOp","allItemsMatch","Block","FifthHeader","Endmark","scope","Scope","BLOCK","chunkBy","lines","chunk","Ins","Br","ThirdHeader","SecondHeader","FORMATS","properties","allowlistContexts","contexts","attrs","keys","memo","key","objectWasLast","Video","Credits","Grouping","Hr","USES_FIXED_HEIGHT","Doc","Blockquote","collection","predicate","chunks","Superscript","event","preventDefault","returnValue","UNSAVED_WARNING","Author","getQueryParams","communityChanged","docLabel","COMMUNITY_CHANGED","DEFAULTS","maxLength","horizontalPadding","verticalPadding","root","addContainer","textbox","warning","save","cancel","stopPropagation","edit","args","Promise","resolve","setSelection","position","getBounds","select","contains","removeAttribute","setWarning","normalize","LinkBlot","reference","left","width","offsetWidth","bottom","scrollTop","style","containerBounds","offsetParent","getBoundingClientRect","rootBounds","right","shift","documentElement","clientHeight","height","reposition","focus","INVALID_LINK_MESSAGE","getSelection","getText","Container","tail","statics","childBlot","refBlot","ListItem","after","target","defaultChild","appendChild","BLOCK_BLOT","allowedChildren","toc","loadPackageStories","coverComponents","setCoverStoryLayoutOptions","difference","getPackageStories","PACKAGE_LEAD_STORY_LAYOUT_KEYS","PACKAGE_STORY_LAYOUT_KEYS","uuids","oldStoryIds","currentStoryIds","removedStoryIds","addedStoryIds","all","setAndInitDoc","docId","teardownDoc","component","story","od","ObjectBehavior","bindAll","selectedIframes","preventEdit","onTextChange","onClick","destroy","removeEventListener","fixDelta","buildFixDelta","isolateObjects","removeInvalidFormats","removeIncompleteGroups","setLineDefaults","fixFunc","currentContents","activeElement","rangeCount","getRangeAt","collapsed","selectIframes","selector","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","nodeRange","createRange","selectNode","startsBefore","compareBoundaryPoints","Range","START_TO_START","endsAfter","END_TO_END","findInRange","e","isContentEditable","setStartBefore","setEndAfter","removeAllRanges","addRange","iframes","selectedFrameIds","frameIds","iframe","contentWindow","postMessage","payload","origin","entrySlugIsEvergreenDefault","contributorId","updateAutotweet","chorus_id","isPackage","owner","fullName","contributorIds","searchUsers","graphqlRequest","SearchContributors","variables","communityId","user","userActions","currentUserHandle","newUserHandle","getTwitterUsername","allGroups","savedGroups","getAllParents","parent_entry_group_id","g","auto_add_subgroup_entries","groupToAdd","groupFromData","formatGroup","loadGroups","topLevelGroups","alphabetizedGroups","values","topLevelGroup","getAllChildren","nestedGroupsList","groupId","primaryGroupId","primaryGroupPath","savedGroupsPath","newPrimaryGroup","current","sortBy","getPath","ENTRY_GROUP_ATTRIBUTES","includePlacementSlots","groupData","hubPageData","hub_page_id","placement_slots","childrenOf","childrenOfParent","depth","data","unpinnedByDefault","placement_slot","Placeholder","onFocus","onBlur","placeholder","showPlaceholder","hasFocus","setContents","display","autosize","matchSize","whitelist","toInlineHtml","editor","editorStyle","getComputedStyle","borderWidth","borderTopWidth","borderBottomWidth","minHeight","scrollHeight","off","InlineMode","tabbing","setTabbing","unsetTabbing","getLength","keyboard","bindings","shiftKey","handler","lastOp","teardown","currentOp","currentAttr","previousInsert","isOrphaned","hr","requiresDefaultPosition","intersection","REQUIRES_DEFAULT_POSITION","FourthHeader","AdPlacement","Actionbox","groupBy","letter","toUpperCase","ALPHABET","array","str","QuillHistory","History","_undoOnBackspace","pop","unshift","undo","change","dest","stack","lastRecorded","sources","USER","deleteLength","changeIndex","endsWith","attr","endsWithNewlineChange","getLastChangeIndex","recordSelection","undoIndex","redoIndex","redo","transform","transformPosition","undoOnBackspace","paths","path","Readmore","linkSetId","docStatus","defaultLinkSet","l","isCommunityPostAuthor","default","Mark","CommunityMismatchError","Error","call","captureStackTrace","entryId","inherits","prototype","beginningOfLine","lineOp","dirty","inLine","inFlight","sentIds","quillContentPaths","reconnectingIds","initializingIds","docsById","contentApiSocket","remoteUpdate","messages","RELOAD_REQUIRED","forceRefresh","stateMatchObserver","stopAll","updateDocFlag","showError","REALTIME_ERROR","once","onReconnect","DoubleSpaces","ignore","before","undefined","isolate","unwrap","initGroupsForType","forEachRight","uniq","groupActions","isDraft","groups","groupsPath","primaryGroupIdPath","groupsInState","groupsInStateIds","hasDupes","groupFromApi","resolveOnLocalUpdate","sanitizeGroupData","docIsDraft","defaultGroup","slug","setInitialSiteGroupData","Italic","Del","Newsletter","Leadgraf","timeout","MultiCursor","cursors","_applyDelta","clearCursors","removeCursor","moveCursor","cursor","elem","timer","_updateCursor","setCursor","color","_buildCursor","shiftCursors","max","createElement","cursorName","backgroundColor","bounds","flag","offsetHeight","Pym","Position","ctx","pathname","currentDoc","initAutosave","setDoc","trashedAt","threshold","subtract","render","NotFound","haltIfTrashed","entry","entryActions","getEntryById","checkCommunityContexts","communityActions","loadCommunity","initDoc","initQuill","initUnsavedWarning","initReloadMessage","initUserCountWarning","initCommunityChangedNotice","setAutotweets","setContributors","setLeadArt","initEntryLayout","initComments","initSlugIsEvergreenDefault","initCustomFields","setGroups","setDefaultLinkSet","setStructuredTags","initStreamMembers","initPackageStories","initCustomstories","initContents","catch","sentryActions","handleError","TohProjectDetails","mediaType","main_media_type","mainImage","main_image","cardImage","internal_image","Html","messageUsers","hasMessagedUsers","TOO_MANY_EDITORS","entryLayout","invalids","getAllOffsets","FEATURE_ONLY","deltas","t","o","removeInvalidPositions","mainGallery","hasMinimalLayout","BLANK","Link","sanitizedValue","hasLink","setAttribute","getAttribute","autotweets","userHandle","community","tweet","defaultTweet","handle","twitterScreenName","selected","twitterSendDefault","image","tweetWithImageByDefault","toRichText","Dropcap","fn","scheduled","apply","stop","interval","setInterval","checkState","fire","autosaveError","isDirty","getDocCursor","diff","reportError","observers","errorKey","stateObserverInterval","stateKey","clearInterval","hash","intervalKey","timeoutKey","Small","addPage","statusLabel","statusMessage","statusPending","pollForBuildStatus","getCustomstoryStatus","delay","getBuildStatus","nextInterval","Id","FirstHeader","autotag_league_id","autoTagging","leagueId","autotag_team_id","teamId","tagType","autotagTagTypes","structured_tags","memberAdded","memberRemoved","setStreamMembers"],"mappings":"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","file":"8.ec381af2eb7361d315eb.0.js","sourcesContent":["import Quill from 'quill';\n\nconst Inline = Quill.import('blots/inline');\n\nclass Subscript extends Inline {}\n\nSubscript.blotName = 'subscript';\nSubscript.tagName = 'SUB';\n\nQuill.register('formats/subscript', Subscript);\n\nexport default Subscript;\n","var request = require('../lib/request');\nvar groupByFirstChar = require('../lib/group_by_first_char');\n\nexport function loadLinkSets() {\n  return request('/api/chorus/link_sets', {\n    query: {\n      per_page: 10000,\n      community_id: app.state.get('doc', 'community_id')\n    },\n    opts: { cache: true }\n  }).then(function(response) {\n    return response._embedded.link_set;\n  });\n}\n\nexport function loadAlphabetizedLinkSets() {\n  return loadLinkSets().then(linkSets => groupByFirstChar(linkSets));\n}\n","const Delta = require('rich-text').Delta;\n\nconst PRECEDES_OPEN_QUOTE = ['', ' ', '\\n', '{', '[', '(', '<'];\nconst PRECEDES_OPEN_DOUBLE_QUOTE = PRECEDES_OPEN_QUOTE.concat(['‘']);\nconst PRECEDES_OPEN_SINGLE_QUOTE = PRECEDES_OPEN_QUOTE.concat(['“']);\n\n// Returns a new delta where all \"dumb quotes\" have been converted into \"smart quotes\".\n// Whether to convert to an open or closed quote depends on the preceeding char\n// (open quotes are only used following certain characters, including whitespace)\nmodule.exports = function convertQuotes(delta) {\n  let newDelta = new Delta();\n\n  for (let [opIndex, op] of delta.ops.entries()) {\n    // Don't convert non-strings\n    if (typeof op.insert !== 'string') {\n      newDelta.push(op);\n      continue;\n    }\n\n    // Store the last character of the previous op for use below\n    let prevOpLastChar = '';\n    if (opIndex > 0) {\n      let prevOp = delta.ops[opIndex - 1];\n      prevOpLastChar = (typeof prevOp.insert === 'string')\n        ? prevOp.insert[prevOp.insert.length - 1]\n        : '';\n    }\n\n    // Examine each string char and replace open/closing single/double quotes with\n    // their smart quote equivalents\n    let converted = '';\n    for (let [charIndex, char] of op.insert.split('').entries()) {\n      // If this is the first char of the current op, use the last char of the\n      // previous op\n      let prevChar = charIndex === 0 ? prevOpLastChar : converted[charIndex - 1];\n      if (char === '\"') {\n        char = PRECEDES_OPEN_DOUBLE_QUOTE.includes(prevChar) ? '“' : '”';\n      } else if (char === '\\'') {\n        char = PRECEDES_OPEN_SINGLE_QUOTE.includes(prevChar) ? '‘' : '’';\n      }\n\n      converted += char;\n    }\n\n    newDelta.insert(converted, op.attributes);\n  }\n\n  return newDelta;\n};\n","import Quill from 'quill';\nimport { isEqual } from 'lodash';\n\nconst Inline = Quill.import('blots/inline');\nconst PROTOCOLS = ['http:', 'https:', 'mailto:', 'tel:'];\n\nfunction sanitize(url) {\n  try {\n    return PROTOCOLS.includes(new URL(url).protocol) ? url : 'about:blank';\n  } catch (err) {\n    return 'about:blank';\n  }\n}\n\nclass Autolink extends Inline {\n  static create(value) {\n    let node = super.create(value);\n    node.dataset.autolinkId = value.id;\n    node.dataset.autolinkHref = sanitize(value.href);\n    if (value.disabled) {\n      node.dataset.autolinkDisabled = '';\n    }\n    return node;\n  }\n\n  static formats(domNode) {\n    return {\n      id: domNode.dataset.autolinkId,\n      href: domNode.dataset.autolinkHref,\n      disabled: domNode.hasAttribute('data-autolink-disabled')\n    };\n  }\n\n  // Override to perform deep equality check on formats to determine if we\n  // should be merged with the next sibling\n  optimize(context) {\n    super.optimize(context);\n    let next = this.next;\n    if (next instanceof Autolink && next.prev === this && isEqual(this.formats(), next.formats())) {\n      next.moveChildren(this);\n      next.remove();\n    }\n  }\n}\n\nInline.order.splice(Inline.order.indexOf('link'), 0, 'autolink');\nAutolink.blotName = 'autolink';\nAutolink.tagName = 'A';\nAutolink.className = 'ql-autolink';\n\nQuill.register('formats/autolink', Autolink);\n\nexport default Autolink;\n","const GROUPED_SUBDOCS = ['scorecard'];\n\n// Checks to determine if all objects in the given group are of the same supported type\nmodule.exports = function groupItemsMatch(group) {\n  return (\n    group.every(item => item.hasOwnProperty('image')) ||\n    GROUPED_SUBDOCS.some(type =>\n      group.every(item => item.hasOwnProperty('doc') && type === item.doc.type)\n    )\n  );\n};\n","const moment = require('moment-timezone');\nconst { orderBy, property } = require('lodash');\nconst tokenizer = require('sbd');\nconst commaJoin = require('../lib/comma_join');\nconst urlForEntry = require('../lib/url_for_entry');\nconst isPublished = require('../lib/is_published');\nconst queryRegex = require('../../shared/query_regex');\nconst messageActions = require('./messages');\nconst docActions = require('./docs');\nconst autosave = require('./autosave');\nconst { toPlaintext } = require('convert-rich-text');\nconst sentenceCase = require('../../shared/sentence_case');\nconst getEventDateTime = require('../../shared/get_event_datetime');\nconst isStream = require('../../shared/is_stream');\nconst isLinkPost = require('../../shared/is_link_post');\nconst { INVALID_STREAM_MEMBERSHIP } = require('../config/messages');\n\n/**\n * Search for streams in Content API; filter out members that are\n * already present in state.\n * @return {Object} results An array of stream hashes with data for UI\n */\nexport async function searchStreams(q, streams) {\n  let query = {\n    q: q + ' type:stream',\n    community_id: app.state.get(['community', 'id']),\n    schema_name: 'story',\n    per_page: 5,\n    archived: false,\n    trashed: false\n  };\n\n  let { docs } = await docActions.searchDocs(query);\n  let streamIds = new Set(streams.map(stream => stream.doc_id));\n\n  // filter out streams that already exist in app state\n  docs = docs.filter(doc => !streamIds.has(doc.id));\n\n  let results = docs.map(doc => {\n    return {\n      text: doc.title,\n      value: {\n        doc_id: doc.id,\n        title: doc.title\n      }\n    };\n  });\n\n  if (results.length === 0) {\n    return [{ value: null, text: 'No streams found' }];\n  }\n\n  return results;\n}\n\n/**\n * Search for members in Content API; filter out members that are\n * already present in state or are of type Stream or LinkPost.\n * @return {Object} results An array of member hashes containing formatted data\n *                  for UI.\n */\nexport async function searchMembers(q) {\n  let query = {\n    q,\n    community_id: app.state.get(['community', 'id']),\n    schema_name: 'story',\n    order: 'date',\n    story_type_blocklist: ['stream', 'link'],\n    archived: false,\n    trashed: false\n  };\n\n  let { docs } = await docActions.searchDocs(query);\n  let memberIds = new Set(app.state.get(['stream', 'docs']).map(doc => doc.id));\n\n  // exact match is found, but it already exists in stream\n  if (docs.length === 1 && memberIds.has(docs[0].id)) {\n    return [{ value: null, text: 'Story already in stream' }];\n  }\n\n  // filter out members that already exist in app state\n  docs = docs.filter(doc => !memberIds.has(doc.id));\n\n  let results = docs.map(doc => {\n    return formatStreamMember(doc, q);\n  });\n\n  if (results.length === 0) {\n    return [{ value: null, text: 'No results found' }];\n  }\n\n  return results;\n}\n\n/**\n * Searches for a member by its URL; returns matched doc if found or invalid\n * message if search result returned a doc of type Stream or LinkPost.\n * @param {String} url A URL used to query for docs\n *                NOTE: `http[s]://` protocol will be removed as public_url is\n *                not stored with protocols in the content-api ES index\n * @return {Object} results An array member hashes containing of formatted data\n *                  for UI.\n */\nexport async function getMemberByUrl(url) {\n  const query = {\n    q: url,\n    community_id: app.state.get(['community', 'id']),\n    schema_name: 'story',\n    archived: false,\n    trashed: false\n  };\n  const { docs } = await docActions.searchDocs(query);\n  const memberIds = new Set(app.state.get(['stream', 'docs']).map(doc => doc.id));\n  const doc = docs[0];\n\n  // exact match is found, but it already exists in stream\n  if (doc && memberIds.has(doc.id)) {\n    return [{ value: null, text: 'Story already in stream' }];\n  } else if (!doc) {\n    return [{ value: null, text: 'No results found' }];\n  } else if (isStream(doc.head.contents) || isLinkPost(doc.head.contents)) {\n    return [{ value: null, text: INVALID_STREAM_MEMBERSHIP }];\n  } else {\n    return [formatStreamMember(doc)];\n  }\n}\n\n/**\n * Gets a list of stream docs on a member; returns simplified hash of stream\n * details for use in autocomplete add/remove UI\n * @return {Promise} promise of an streams array containing hashes of stream\n *                   data including the streams ID and formatted title\n */\nexport async function getStreamsForMember() {\n  let streams = app.state.get(['doc', 'head', 'contents', 'streams']);\n\n  if(!streams || streams.length === 0) { return []; }\n\n  let streamIds = streams.map(stream => stream.id).join(',');\n  const { docs } = await docActions.searchDocs({ ids: streamIds });\n\n  return docs.map(doc => {\n    return {\n      doc_id: doc.id,\n      title: doc.title\n    };\n  });\n}\n\n/**\n * Stores the visible set of stream members in app state memory, making sure\n * to preserve reverse-chron order when inserting and deleting members.\n */\nexport async function setStreamMembers(page = 1) {\n  if (app.state.get(['docLabel']) !== 'stream') { return; }\n\n  const { docs, pagination } = await docActions.searchDocs({\n    schema_name: 'story',\n    stream_id: app.state.get(['doc', 'id']),\n    order: 'date',\n    page,\n  });\n\n  app.state.set(['stream', 'docs'], docs);\n  app.state.set(['stream', 'pagination'], pagination);\n}\n\n/**\n * Adds stream ID to a member\n * @param {Number} streamDocId A valid doc ID for a stream\n * @param {Number} memberDocId A valid doc ID for a member adding streamId\n * @return {Promise} promise returned of member doc update action\n */\nexport async function addStreamMember(streamDocId, memberDocId) {\n  // If called from a member\n  if (app.state.get(['doc', 'id']) === memberDocId) {\n    let streams = app.state.get(['doc', 'head', 'contents', 'streams']);\n    let delta = [];\n\n    if (streams) {\n      delta.push({ p: ['streams', streams.length], li: { id: streamDocId } });\n    } else {\n      delta.push({ p: ['streams'], oi: [{ id: streamDocId }] });\n    }\n\n    autosave.localUpdate(memberDocId, delta);\n  } else { // If called from a stream\n    const doc = await docActions.getDoc(memberDocId);\n    let streams = doc.head.contents.streams;\n    let delta = [];\n\n    if (streams) {\n      delta.push({ p: ['streams', streams.length], li: { id: streamDocId } });\n    } else {\n      delta.push({ p: ['streams'], oi: [{ id: streamDocId }] });\n    }\n\n    // Because docs being added to streams are not kept in app state, we will\n    // need to use the API to update the doc\n    docActions.updateDoc(memberDocId, { delta });\n  }\n}\n\n/**\n * Removes stream ID from a member\n * @param {Number} streamDocId A valid doc ID for a stream\n * @param {Number} memberDocId A valid doc ID for a member removing streamId\n * @return {Promise} A promise returned of member doc update action\n */\nexport async function removeStreamMember(streamDocId, memberDocId) {\n  // If called from a member\n  if (app.state.get(['doc', 'id']) === memberDocId) {\n    let streams = app.state.get(['doc', 'head', 'contents', 'streams']);\n\n    if (streams) {\n      let streamDocIndex = streams.findIndex(stream => stream.id === streamDocId);\n\n      if (streamDocIndex !== -1) {\n        autosave.localUpdate(memberDocId, [{\n          p: ['streams', streamDocIndex],\n          ld: { id: streamDocId }\n        }]);\n      }\n    }\n  } else { // If called from a stream\n    const doc = await docActions.getDoc(memberDocId);\n    let streams = doc.head.contents.streams;\n\n    if (streams) {\n      let streamDocIndex = streams.findIndex(stream => stream.id === streamDocId);\n\n      if (streamDocIndex !== -1) {\n        // Because docs being added to streams are not kept in app state, we will\n        // need to use the API to update the doc\n        docActions.updateDoc(\n          memberDocId,\n          {\n            delta: [{ p: ['streams', streamDocIndex], ld: { id: streamDocId } }]\n          }\n        );\n      }\n    }\n\n  }\n}\n\n/**\n * Callback method for added stream to a member event attached to the listener\n * in client/initializers/editor/doc/stream_members.js. Displays message if\n * stream and member are both published.\n * @param {Object} doc JSON doc of member added to stream\n */\nexport function memberAdded(doc) {\n  // clone the value to bust two-way binding\n  let streamMembers = app.state.get(['stream', 'docs']).slice();\n  streamMembers.push(doc);\n  // to match the streams API, sort by updated at date descending, title ascending (for tiebreakers)\n  streamMembers = orderBy(streamMembers, [property('doc.updated_at'), property('doc.title')], ['desc', 'asc']);\n  app.state.set(['stream', 'docs'], streamMembers);\n\n  // Reflect updated total for paginated streams\n  const totalMembers = app.state.get(['stream', 'pagination', 'total']) || 0;\n  app.state.set(['stream', 'pagination', 'total'], totalMembers + 1);\n\n  showDocMessage('added', doc);\n}\n\n/**\n * Callback method for removed stream from a member event attached to the\n * listener in client/initializers/editor/doc/stream_members.js\n * @param {Object} doc JSON doc of member removed from stream\n */\nexport function memberRemoved(doc) {\n  // clone the value to bust two-way binding\n  let streamMembers = app.state.get(['stream', 'docs']).slice();\n  let newStreamMembers = streamMembers.filter(memberDoc => memberDoc.id !== doc.id);\n\n  app.state.set(['stream', 'docs'], newStreamMembers);\n\n  // Reflect updated total for paginated streams\n  const totalMembers = app.state.get(['stream', 'pagination', 'total']) || 0;\n  totalMembers > 0 && app.state.set(['stream', 'pagination', 'total'], totalMembers - 1);\n\n  showDocMessage('removed', doc);\n}\n\n/**\n * Formats stream member results; highlights any matched text from the query\n * @param {Object} doc JSON doc of member result from search\n * @param {String} query query string from search\n * @return {Object} A hash of formatted member results\n */\nfunction formatStreamMember(doc, q = '') {\n  // case-insensitive regex for search terms\n  let regex = queryRegex(q);\n\n  // 1. Title: highlight search terms\n  let title = q === '' ? doc.title : highlightKeywords(doc.title, regex);\n  title = `<span class='p-story__result__title'>${title}</span>`;\n\n  // 2. Body: sanitize html and find the first sentence with highlighted search terms,\n  // otherwise include first sentence\n  let sentences = tokenizer.sentences(toPlaintext(doc.head.contents.draft.body), { sanitize: true });\n  let keywordSentence = sentences.find(sentence => regex.test(sentence));\n  let body = keywordSentence ? highlightKeywords(keywordSentence, regex) : sentences[0];\n  if (body) {\n    body = `<p class='p-story__result__dek'>${body}</p>`;\n  }\n\n  // 3. Metadata: format byline, current status and modified date\n  let byline = commaJoin(doc.contributors.map(contributor => `<span class='p-story__result__byline'>${contributor.fullOrUserName}</span>`));\n  let status = doc.head.contents.hidden ? 'Hidden' : sentenceCase(doc.status.toLowerCase());\n  let date = getStatusDate(doc);\n  let metadata = `\n    <span class='p-story__result__status ${status.toLowerCase()}'>${status}</span>\n    ${isPublished(doc.status) ? `by ${byline}` : ''}\n    ${status === 'Draft' ? 'modified on' : 'on'}\n    <span class='p-story__result__date'>${date}</span>\n  `;\n  let additionalText = body ? body + metadata : metadata;\n\n  return {\n    text: title,\n    additional_text: additionalText,\n    value: {\n      doc_id: doc.id\n    }\n  };\n}\n\n/**\n * Takes a string of text and RegEx query and returns HTML string with matched\n * text wrapped in a tag to highlight it.\n * @param {String} text A string of text to be highlighted\n * @param {RegExp} regex A regex pattern for matching submitted text\n * @return {String} A HTML string containing formatted text with highlight markup\n */\nfunction highlightKeywords(text, regex) {\n  return text.replace(regex, (match) => {\n    return `<span class='p-story__result__highlight'>${match}</span>`;\n  });\n}\n\n/**\n * Display a flash message for when a published member is linked to a published\n * stream.\n * @param {String} action A string for doc event. Only ['added', 'removed']\n * @param {Object} doc A JSON doc of member\n */\nfunction showDocMessage(action, doc) {\n  let streamDoc = app.state.get('doc');\n\n  // display message only if stream and member are both published\n  if (isPublished(streamDoc.status) && isPublished(doc.status)) {\n    let streamUrl = urlForEntry(streamDoc.entry_id);\n    let docUrl = `/compose/${doc.uuid}`;\n    let link = (url, text) => {\n      return `<a href=\"${url}\" target=\"_blank\" rel=\"nofollow noopener\">${text}</a>`;\n    };\n    let message = `A story was ${action}. ${link(docUrl, 'Edit story')} ${link(streamUrl, 'View stream')}.`;\n\n    messageActions.showMessage({ type: 'positive', message });\n  }\n}\n\n/**\n * Gets status date for a doc. If the doc is published|updated, it will return\n * historical publish date otherwise it returns updated_at dates.\n * @param {Object} doc JSON doc to get formatted status date from\n * @return {String} formatted display date for doc\n */\nfunction getStatusDate(doc) {\n  let time = isPublished(doc.status)\n    ? getEventDateTime(doc.head.contents.publish_history, ['published', 'published_via_schedule', 'backdated'])\n    : doc.updated_at;\n\n  return moment(time).format(app.config.dateFormat);\n}\n","import Quill from 'quill';\nimport { Delta } from 'rich-text';\n\nconst ID_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst ID_LENGTH = 6;\n\nclass LineIds {\n  constructor(quill) {\n    this.quill = quill;\n    this.ignoreChange = false;\n\n    // auto-add ids on every change\n    this.quill.on('debounced-text-change', (delta, oldContents, source) => {\n      if (!this.ignoreChange && source === 'user') {\n        this.insertIds();\n      }\n    });\n  }\n\n  insertIds() {\n    const contents = this.quill.getContents();\n    const delta = new Delta();\n    const usedIds = new Set();\n\n    for (let op of contents.ops) {\n      if (typeof op.insert !== 'string') {\n        delta.retain(1);\n      } else {\n        let insert = op.insert;\n        let offset = insert.indexOf('\\n');\n        while (offset >= 0) {\n          delta.retain(offset);\n\n          if (op.attributes != null && op.attributes.id != null && !usedIds.has(op.attributes.id)) {\n            usedIds.add(op.attributes.id);\n            delta.retain(1);\n          } else {\n            delta.retain(1, { id: this.makeId(usedIds) });\n          }\n\n          insert = insert.slice(offset + 1);\n          offset = insert.indexOf('\\n');\n        }\n        delta.retain(insert.length);\n      }\n    }\n\n    if (delta.chop().length() > 0) {\n      this.ignoreChange = true;\n      this.quill.updateContents(delta, 'user');\n      this.ignoreChange = false;\n    }\n  }\n\n  // Make an id of `ID_LENGTH` random characters, ensuring it is not a member\n  // of the `usedIds` set. Adds the id to the `usedIds` set before returning.\n  makeId(usedIds) {\n    let id;\n    do {\n      id = '';\n      // eslint-disable-next-line no-restricted-syntax\n      for (let i = 0; i < ID_LENGTH; i++) {\n        id += ID_CHARS.charAt(Math.floor(Math.random() * ID_CHARS.length));\n      }\n    } while (usedIds.has(id));\n    usedIds.add(id);\n    return id;\n  }\n}\n\nQuill.register('modules/line-ids', LineIds);\n\nexport default LineIds;\n","module.exports = function hasMinimalLayout(layout) {\n  return layout && layout !== 'unison_standard';\n};\n","var Delta = require('rich-text').Delta;\n\nmodule.exports = function getAllOps(delta, isValid) {\n  var offset = 0;\n  return delta.ops.reduce((foundOps, op) => {\n    if (op.hasOwnProperty('attributes') && isValid(op)) {\n      foundOps.push(offset);\n    }\n    offset += new Delta([op]).length();\n    return foundOps;\n  }, []);\n};\n","import uuid from 'uuid';\nimport Quill from 'quill';\n\nconst Parchment = Quill.import('parchment');\n\nfunction numParents() {\n  let num = 0;\n  let win = window;\n  while (window && win !== window.top) {\n    num += 1;\n    win = win.parent;\n  }\n  return num;\n}\n\nclass ObjectEmbed extends Parchment.Embed {\n  static create(value) {\n    let node = super.create(value);\n    node.dataset.object = JSON.stringify({ [this.blotName]: value });\n    node.dataset.frameId = uuid.v4();\n    node.allowFullscreen = true;\n    node.src = `/object-v2.html?parents=${numParents()}`;\n    return node;\n  }\n\n  static value(domNode) {\n    try {\n      if (domNode.dataset.object) {\n        return JSON.parse(domNode.dataset.object)[this.blotName];\n      }\n    } catch (err) {\n      return undefined;\n    }\n  }\n\n  static get className() {\n    return `${this.blotName}-object`;\n  }\n}\n\nObjectEmbed.blotName = 'abstract';\nObjectEmbed.tagName = 'iframe';\n\nexport default ObjectEmbed;\n","// A group is deemed incomplete if its size doesn't match the expected size.\nmodule.exports = function groupIsComplete(group) {\n  if (group.length === 0) {\n    return false;\n  }\n  var expectedLength = parseInt(group[0].grouping.charAt(0), 10);\n  return group.length === expectedLength;\n};\n","import Quill from 'quill';\nimport microtaskDebounce from '../../microtask_debounce';\n\nclass DebouncedTextChange {\n  constructor(quill) {\n    const reset = () => {\n      this.delta = null;\n      this.oldContents = null;\n      this.source = null;\n    };\n\n    const emitNow = () => {\n      if (this.delta && this.oldContents && this.source) {\n        quill.emitter.emit('debounced-text-change', this.delta, this.oldContents, this.source);\n      }\n      reset();\n    };\n\n    const emitLater = microtaskDebounce(emitNow);\n\n    quill.on('text-change', (delta, oldContents, source) => {\n      if (this.source && source !== this.source) {\n        emitNow();\n      }\n      if (!this.oldContents) {\n        this.oldContents = oldContents;\n      }\n      if (this.delta) {\n        this.delta = this.delta.compose(delta);\n      } else {\n        this.delta = delta;\n      }\n      this.source = source;\n      emitLater();\n    });\n  }\n}\n\nQuill.register('modules/debounced-text-change', DebouncedTextChange);\n\nexport default DebouncedTextChange;\n","import Quill from 'quill';\n\nconst Parchment = Quill.import('parchment');\n\nexport default class BooleanDataAttributor extends Parchment.Attributor.Attribute {\n  constructor(name, options) {\n    super(name, `data-${name}`, options);\n  }\n\n  canAdd(node, value) {\n    return value === true && super.canAdd(node, value);\n  }\n\n  add(node, value) {\n    if (this.canAdd(node, value)) {\n      node.dataset[this.attrName] = '';\n      return true;\n    }\n    return false;\n  }\n\n  value(node) {\n    return node.dataset[this.attrName] === '';\n  }\n\n  remove(node) {\n    delete node.dataset[this.attrName];\n  }\n}\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Image extends ObjectBlot {\n  static create(value) {\n    let node = super.create(value);\n    node.dataset.preserveHeight = '';\n    return node;\n  }\n}\n\nImage.blotName = 'image';\n\nQuill.register('formats/image', Image);\n\nexport default Image;\n","import Quill from 'quill';\nimport LinkTooltip from './link_tooltip';\nimport AutolinkBlot from '../blots/autolink';\n\nclass AutolinkTooltip extends LinkTooltip {\n  // Override to set href or the disabled attribute of the autolink format,\n  // depending on the truthiness of the argument.\n  format(href) {\n    let range = this.quill.selection.savedRange;\n    if (range.length === 0 && this.linkRange) {\n      range = this.linkRange;\n    }\n    let op = this.quill.getContents(range).ops[0];\n    if (!op || !op.attributes || !op.attributes.autolink) {\n      return;\n    }\n    let value = Object.assign({}, op.attributes.autolink);\n    if (href) {\n      value.href = href;\n    } else {\n      value.disabled = true;\n    }\n    this.quill.formatText(range, 'autolink', value, 'user');\n  }\n\n  // Override for 3 reasons:\n  // - Look for AutolinkBlot instead of LinkBlot\n  // - Use `value.href` instead of `value` for the preview link\n  // - Do not show the tooltip if the autolink is disabled\n  onSelectionChange(range) {\n    if (range == null) return;\n    let [link, offset] = this.quill.scroll.descendant(AutolinkBlot, range.index);\n    if (link != null && offset + range.length <= link.length()) {\n      let value = AutolinkBlot.formats(link.domNode);\n      if (value.disabled) {\n        this.hide();\n      } else {\n        this.preview.textContent = value.href;\n        this.preview.href = value.href;\n        this.linkRange = { index: range.index - offset, length: link.length() };\n        this.show();\n      }\n    } else {\n      this.hide();\n    }\n  }\n}\n\nQuill.register('modules/autolink-tooltip', AutolinkTooltip);\n\nexport default AutolinkTooltip;\n","let promptReload = null;\n\nexport default function initReloadTab() {\n  promptReload = startTimer();\n\n  // Various events that indicate activity has happened / tab isn't stale\n  window.addEventListener('keypress', resetTimer, false);\n  window.addEventListener('click', resetTimer, false);\n  app.on('autosave.local-update', resetTimer);\n  app.on('autosave.remote-update', resetTimer);\n}\n\nfunction startTimer() {\n  // When a tab becomes stale, trigger a socket disconnect\n  return setTimeout(() => {\n    app.emit('socket.disconnect', 'stale-tab');\n  }, app.config.sockets.inactivePeriod);\n}\n\nfunction resetTimer() {\n  clearTimeout(promptReload);\n  promptReload = startTimer();\n}\n","import Quill from 'quill';\n\nconst Inline = Quill.import('blots/inline');\n\nclass Bold extends Inline {\n  // Use a simple boolean, despite tagName being an array,\n  // which by default causes this to return: { bold: 'STRONG' }\n  static formats() {\n    return true;\n  }\n\n  // Ensure that the <strong> tag is used, not <b>\n  optimize(context) {\n    super.optimize(context);\n    if (this.domNode.tagName !== 'STRONG') {\n      this.replaceWith('bold');\n    }\n  }\n}\n\nBold.blotName = 'bold';\n\n// Support parsing both <strong> and <b> from pasted HTML\nBold.tagName = ['STRONG', 'B'];\n\nQuill.register('formats/bold', Bold);\n\nexport default Bold;\n","import Quill from 'quill';\nimport List from './list';\n\nclass Bullet extends List {}\n\nBullet.blotName = 'bullet';\nBullet.tagName = 'UL';\n\nQuill.register('formats/bullet', Bullet);\n\nexport default Bullet;\n","import Quill from 'quill';\n\nconst Inline = Quill.import('blots/inline');\n\nclass Strike extends Inline {\n  // Use a simple boolean, despite tagName being an array,\n  // which by default causes this to return: { strike: 'S' }\n  static formats() {\n    return true;\n  }\n\n  // Ensure that the <s> tag is used, not <strike>\n  optimize(context) {\n    super.optimize(context);\n    if (this.domNode.tagName !== 'S') {\n      this.replaceWith('strike');\n    }\n  }\n}\n\nStrike.blotName = 'strike';\n\n// Support parsing both <s> and <strike> from pasted HTML\nStrike.tagName = ['S', 'STRIKE'];\n\nQuill.register('formats/strike', Strike);\n\nexport default Strike;\n","var contributorActions = require('../../../actions/contributors');\n\nexport default function initContributors() {\n  var contributors = app.state.get(['doc', 'head', 'contents', 'draft', 'contributors']);\n\n  // If there are no contributors, save the doc owner as the contributor\n  if (contributors.length === 0) {\n    var docUserId = app.state.get(['doc', 'user_id']);\n    var userId = docUserId === -1 ? app.state.get(['user', 'id']) : docUserId;\n    return contributorActions.addContributor(userId, 0, -1);\n  }\n}\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Oembed extends ObjectBlot {}\n\nOembed.blotName = 'oembed';\n\nQuill.register('formats/oembed', Oembed);\n\nexport default Oembed;\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Ratingcard extends ObjectBlot {}\n\nRatingcard.blotName = 'ratingcard';\n\nQuill.register('formats/ratingcard', Ratingcard);\n\nexport default Ratingcard;\n","// Normally, when lines are merged due to a deletion, the line from before the\n// deletion controls the resulting formatting of the merged line.\n//\n// When it comes to the \"br\" format, we want to use the opposite heuristic:\n// it's the line from after the deletion that should control the resulting\n// formatting of the merged line.\n//\n// TODO: remove soft break preceeding a header or block quote\n\nimport Quill from 'quill';\n\nclass SoftBreaks {\n  constructor(quill) {\n    quill.on('debounced-text-change', (delta, oldContents, source) => {\n      // Short circuit, if nothing was deleted, there's nothing to do\n      if (source !== 'user' || !delta.ops.some(op => op.delete)) {\n        return;\n      }\n\n      let index = 0;\n\n      for (let op of delta.ops) {\n        if (!op.delete) {\n          index += op.retain || 0;\n          continue;\n        }\n\n        let deletedContents = oldContents.slice(index, index + op.delete);\n\n        // If the deleted contents did not contain a newline, there's nothing to do\n        if (!deletedContents.ops.some((op) => /\\n/.test(op.insert))) {\n          continue;\n        }\n\n        let preLineFormats = findLineFormats(oldContents, index);\n        let postLineFormats = findLineFormats(oldContents, index + op.delete);\n\n        // If the \"br\" formats from before and after the deletion don't match,\n        // then ensure that the value of the \"br\" format from after the deletion\n        // is the one that is used.\n        if (preLineFormats.br !== postLineFormats.br) {\n          quill.formatLine(index, 1, { br: postLineFormats.br }, 'user');\n        }\n      }\n    });\n  }\n}\n\nfunction findLineFormats(contents, index) {\n  for (let op of contents.slice(index).ops) {\n    if (typeof op.insert === 'string' && op.insert.includes('\\n')) {\n      return op.attributes || {};\n    }\n  }\n  return {};\n}\n\nQuill.register('modules/soft-breaks', SoftBreaks);\n\nexport default SoftBreaks;\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Pullquote extends ObjectBlot {}\n\nPullquote.blotName = 'pullquote';\n\nQuill.register('formats/pullquote', Pullquote);\n\nexport default Pullquote;\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass TohTools extends ObjectBlot {}\n\nTohTools.blotName = 'toh_tools';\n\nQuill.register('formats/toh_tools', TohTools);\n\nexport default TohTools;\n","import Quill from 'quill';\nimport convertQuotes from '../../../../shared/delta/convert_quotes';\n\nconst QuillClipboard = Quill.import('modules/clipboard');\n\nclass Clipboard extends QuillClipboard {\n  convert(html) {\n    if (html) return super.convert(html);\n    stripGoogleDocsWrapper(this.container);\n    stripEmptyTags(this.container);\n    convertEmDashes(this.container);\n    const delta = super.convert();\n    return convertQuotes(delta);\n  }\n}\n\n// remove google docs wrapper tag, it confuses quill to have <span> wrap <p>\nfunction stripGoogleDocsWrapper(el) {\n  for (let child of el.children) {\n    if (/^docs-internal-guid/.test(child.id)) {\n      // Unwrap all children of firstChild\n      while (child.firstChild) {\n        child.parentNode.insertBefore(child.firstChild, child);\n      }\n      child.parentNode.removeChild(child);\n    }\n  }\n}\n\n// remove top-level empty tags that will cause unwanted empty paragraphs\nfunction stripEmptyTags(el) {\n  const children = Array.from(el.children);\n  // eslint-disable-next-line no-restricted-syntax\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (isEmpty(child)) {\n      el.removeChild(child);\n      // Treat two consecutive blank lines as intentional\n      // by skipping past the 2nd one\n      i++;\n    }\n  }\n}\n\n// convert double dashes to em dashes\nfunction convertEmDashes(el) {\n  // the regex is a little more complicated than just '--' because we\n  // only want to replace scenarios where two dashes are surrounded by non-dashes.\n  // - group 1: match the start of a line or any non-dash character\n  // - two dashes\n  // - group 2: match the end of a line or any non-dash character\n  el.innerHTML = el.innerHTML.replace(/(^|[^-—])--($|[^-—])/gm, '$1—$2');\n}\n\n// return true if el has no children, or only a <br> tag\n// iframes are allowed to be empty\nfunction isEmpty(el) {\n  if (el.tagName === 'IFRAME') {\n    return false;\n  } else if (el.childNodes.length === 0) {\n    return true;\n  } else if (el.childNodes.length === 1 && el.firstChild.tagName === 'BR') {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nQuill.register('modules/clipboard', Clipboard, true);\n\nexport default Clipboard;\n","const autosave = require('../../../actions/autosave');\n\nexport default function() {\n  const commentsClosed = app.state.get(['doc', 'head', 'contents', 'comments_closed']);\n\n  if (app.state.get(['docLabel']) === 'custom story' && commentsClosed !== true) {\n    autosave.localUpdate(app.state.get(['doc', 'id']), [{\n      p: ['comments_closed'],\n      oi: true\n    }], -1);\n  } else if (commentsClosed == null) {\n    autosave.localUpdate(app.state.get(['doc', 'id']), [{\n      p: ['comments_closed'],\n      oi: app.state.get(['community', 'commentsClosedDefault'])\n    }], -1);\n  }\n}\n","var clone = require('lodash').clone;\nvar pick = require('lodash').pick;\n\nmodule.exports = function allowlistFormats(delta, formats) {\n  var ops = delta.ops.map(function(op) {\n    op = clone(op);\n    if (op.attributes) {\n      op.attributes = pick(op.attributes, formats);\n    }\n    return op;\n  });\n\n  return { ops: ops };\n};\n","import Quill from 'quill';\n\nclass Toolbar {\n  constructor(quill, options) {\n    this.quill = quill;\n    if (typeof options.container === 'string') {\n      this.container = document.querySelector(options.container);\n    } else {\n      this.container = options.container;\n    }\n    if (!(this.container instanceof HTMLElement)) {\n      console.error('Container required for toolbar', options);\n      return;\n    }\n    this.quill.on('editor-change', (type, range) => {\n      if (type === 'selection-change') {\n        this.update(range);\n      }\n    });\n    this.quill.on('scroll-optimize', () => {\n      let [range] = this.quill.selection.getRange();\n      this.update(range);\n    });\n  }\n\n  update(range) {\n    let formats = range == null ? {} : this.quill.getFormat(range);\n    let controls = this.container.querySelectorAll('button');\n    for (let button of controls) {\n      let format = Array.from(button.classList).find(c => c.indexOf('ql-') === 0);\n      if (!format) continue;\n      format = format.slice('ql-'.length);\n\n      if (range == null) {\n        button.classList.remove('ql-active');\n      } else {\n        button.classList.toggle('ql-active', formats[format] != null);\n      }\n    }\n  }\n}\n\nQuill.register('modules/toolbar', Toolbar);\n\nexport default Toolbar;\n","// stolen from https://www.npmjs.com/package/keyword-highlighter\nmodule.exports = function queryRegex(q) {\n  var regex = q.split(' ');\n  regex = regex.filter((char) => {\n    return char !== '';\n  });\n  regex = regex.join('|');\n  regex = regex.replace(/[-[\\]{}()*+?.,\\\\^$]/g, '\\\\$&');\n  return new RegExp(regex, 'gi');\n};\n","var querystring = require('querystring');\n\nexport default function getQueryParams() {\n  return querystring.parse(window.location.search.replace('?', ''));\n}\n","var { Delta } = require('rich-text');\nvar parseGroups = require('../../shared/delta/parse_groups');\nvar getOp = require('../../shared/delta/get_op');\nvar groupIsComplete = require('../../shared/delta/group_is_complete');\nvar groupItemsMatch = require('../../shared/delta/group_items_match');\n\nexport default function removeIncompleteGroups(delta) {\n  // Chunk up the lines into contiguous groups of the same value\n  var result = parseGroups(delta).reduce((result, group) => {\n    // If the group is incomplete or one of the lines does not contain an image,\n    // remove grouping from each line\n    if (!groupIsComplete(group) || !allItemsMatch(delta, group)) {\n      for (let line of group) {\n        result = result.compose(removeGrouping(line.offset));\n      }\n    }\n\n    return result;\n  }, new Delta());\n\n  return result.chop();\n}\n\nfunction allItemsMatch(delta, group) {\n  return groupItemsMatch(group.map(line => getOp(delta, line.offset - 1).insert));\n}\n\nfunction removeGrouping(offset) {\n  return new Delta().retain(offset).retain(1, { grouping: null });\n}\n","import Quill from 'quill';\n\nconst Block = Quill.import('blots/block');\n\nclass FifthHeader extends Block {}\n\nFifthHeader.blotName = 'fifthheader';\nFifthHeader.tagName = 'H5';\n\nQuill.register('formats/fifthheader', FifthHeader);\n\nexport default FifthHeader;\n","import Quill from 'quill';\nimport BooleanDataAttributor from '../attributors/boolean_data_attributor';\n\nconst Parchment = Quill.import('parchment');\nconst Endmark = new BooleanDataAttributor('endmark', {\n  scope: Parchment.Scope.BLOCK\n});\n\nQuill.register('formats/endmark', Endmark);\n\nexport default Endmark;\n","var chunkBy = require('../chunk_by');\nvar groupIsComplete = require('./group_is_complete');\n\n// Loop through the provided delta and return an array of { offset, grouping }\n// line objects, grouped together into sub-arrays of adjacent lines with the\n// same grouping value.\n//\n// e.g.\n// [\n//   [{ id: '123', offset: 5, grouping: '3-up' }],\n//   [{ id: 'abc', offset: 7, grouping: '2-up' }, { id: 'def', offset: 9, grouping: '2-up' }],\n//   [{ id: 'xyz', offset: 23, grouping: '2-up' }]\n// ]\n//\n// The item is isolated to its own subgroup, since the next item has a different 'grouping' value\n// The last item is also isolated, because it is non-adjacent (i.e. diff from previous offset != 2)\nmodule.exports = function parseGroups(delta) {\n  var offset = 0;\n  var lines = [];\n\n  // Find each line with a 'grouping' attribute, and add it to the lines array\n  for (let op of delta.ops) {\n    if (op.attributes && op.attributes.grouping) {\n      lines.push({\n        id: op.attributes.id,\n        offset: offset,\n        grouping: op.attributes.grouping\n      });\n    }\n    offset += (typeof op.insert === 'string') ? op.insert.length : 1;\n  }\n\n  // Chunk up the lines into groups of consecutive lines with the same grouping\n  // value, with the corresponding max length (2-up => max length 2).\n  return chunkBy(lines, (chunk, next) => {\n    var prev = chunk[chunk.length - 1];\n    return (\n      next.grouping === prev.grouping &&\n      next.offset - prev.offset === 2 &&\n      !groupIsComplete(chunk)\n    );\n  });\n};\n","import Quill from 'quill';\n\nconst Inline = Quill.import('blots/inline');\n\nclass Ins extends Inline {}\n\nIns.blotName = 'ins';\nIns.tagName = 'INS';\n\nQuill.register('formats/ins', Ins);\n\nexport default Ins;\n","import Quill from 'quill';\nimport BooleanDataAttributor from '../attributors/boolean_data_attributor';\n\nconst Parchment = Quill.import('parchment');\nconst Br = new BooleanDataAttributor('br', {\n  scope: Parchment.Scope.BLOCK\n});\n\nQuill.register('formats/br', Br);\n\nexport default Br;\n","import Quill from 'quill';\n\nconst Block = Quill.import('blots/block');\n\nclass ThirdHeader extends Block {}\n\nThirdHeader.blotName = 'thirdheader';\nThirdHeader.tagName = 'H3';\n\nQuill.register('formats/thirdheader', ThirdHeader);\n\nexport default ThirdHeader;\n","import Quill from 'quill';\n\nconst Block = Quill.import('blots/block');\n\nclass SecondHeader extends Block {}\n\nSecondHeader.blotName = 'secondheader';\nSecondHeader.tagName = 'H2';\n\nQuill.register('formats/secondheader', SecondHeader);\n\nexport default SecondHeader;\n","// Blots\nimport '../../lib/quill/blots/actionbox';\nimport '../../lib/quill/blots/ad_placement';\nimport '../../lib/quill/blots/author';\nimport '../../lib/quill/blots/blockquote';\nimport '../../lib/quill/blots/bold';\nimport '../../lib/quill/blots/br';\nimport '../../lib/quill/blots/bullet';\nimport '../../lib/quill/blots/credits';\nimport '../../lib/quill/blots/del';\nimport '../../lib/quill/blots/doc';\nimport '../../lib/quill/blots/dropcap';\nimport '../../lib/quill/blots/endmark';\nimport '../../lib/quill/blots/fifthheader';\nimport '../../lib/quill/blots/firstheader';\nimport '../../lib/quill/blots/fourthheader';\nimport '../../lib/quill/blots/grouping';\nimport '../../lib/quill/blots/hr';\nimport '../../lib/quill/blots/html';\nimport '../../lib/quill/blots/id';\nimport '../../lib/quill/blots/image';\nimport '../../lib/quill/blots/ins';\nimport '../../lib/quill/blots/italic';\nimport '../../lib/quill/blots/leadgraf';\nimport '../../lib/quill/blots/link';\n// Autolink must be imported after Link so that Parchment.query(<a>) returns the Link blot\nimport '../../lib/quill/blots/autolink';\nimport '../../lib/quill/blots/list';\nimport '../../lib/quill/blots/list_item';\nimport '../../lib/quill/blots/mark';\nimport '../../lib/quill/blots/newsletter';\nimport '../../lib/quill/blots/oembed';\nimport '../../lib/quill/blots/position';\nimport '../../lib/quill/blots/pullquote';\nimport '../../lib/quill/blots/pym';\nimport '../../lib/quill/blots/ratingcard';\nimport '../../lib/quill/blots/readmore';\nimport '../../lib/quill/blots/secondheader';\nimport '../../lib/quill/blots/small';\nimport '../../lib/quill/blots/strike';\nimport '../../lib/quill/blots/subscript';\nimport '../../lib/quill/blots/superscript';\nimport '../../lib/quill/blots/thirdheader';\nimport '../../lib/quill/blots/toh_project_details';\nimport '../../lib/quill/blots/toh_tools';\nimport '../../lib/quill/blots/video';\n\n// Modules\nimport '../../lib/quill/modules/autolink_tooltip';\nimport '../../lib/quill/modules/clipboard';\nimport '../../lib/quill/modules/debounced_text_change';\nimport '../../lib/quill/modules/double_spaces';\nimport '../../lib/quill/modules/history';\nimport '../../lib/quill/modules/inline_mode';\nimport '../../lib/quill/modules/line_ids';\nimport '../../lib/quill/modules/link_tooltip';\nimport '../../lib/quill/modules/multi_cursor';\nimport '../../lib/quill/modules/object_behavior';\nimport '../../lib/quill/modules/placeholder';\nimport '../../lib/quill/modules/soft_breaks';\nimport '../../lib/quill/modules/toolbar';\n\nexport default function initQuill() {}\n","var Delta = require('rich-text').Delta;\n\nmodule.exports = function getOp(delta, offset) {\n  return new Delta(delta).slice(offset).ops[0];\n};\n","var { Delta } = require('rich-text');\nvar FORMATS = require('../../config/schema/rich-text.json').attributes.properties;\n\nmodule.exports = function(contents) {\n  var delta = new Delta();\n  var objectWasLast = false;\n\n  for (let op of contents.ops) {\n    if (typeof op.insert !== 'string') {\n      delta.retain(1, allowlistContexts(op, ['object', 'any']));\n      objectWasLast = true;\n    } else if (/^\\n+$/.test(op.insert)) {\n      delta.retain(1, allowlistContexts(op, [objectWasLast ? 'object-line' : 'text-line', 'any-line', 'any']));\n      objectWasLast = false;\n    } else {\n      delta.retain(op.insert.length, allowlistContexts(op, ['text', 'any']));\n      objectWasLast = false;\n    }\n  }\n  return delta;\n};\n\nfunction allowlistContexts(op, contexts) {\n  var attrs = op.attributes || {};\n  return Object.keys(attrs).reduce((memo, key) => {\n    var format = FORMATS[key];\n    if (!format || !contexts.includes(format.context)) {\n      memo[key] = null;\n    }\n    return memo;\n  }, {});\n}\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Video extends ObjectBlot {\n  static create(value) {\n    let node = super.create(value);\n    node.dataset.preserveHeight = '';\n    return node;\n  }\n}\n\nVideo.blotName = 'video';\n\nQuill.register('formats/video', Video);\n\nexport default Video;\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Credits extends ObjectBlot {}\nCredits.blotName = 'credits';\n\nQuill.register('formats/credits', Credits);\n\nexport default Credits;\n","import Quill from 'quill';\n\nconst Parchment = Quill.import('parchment');\nconst Grouping = new Parchment.Attributor.Attribute('grouping', 'data-grouping', {\n  scope: Parchment.Scope.BLOCK\n});\n\nQuill.register('formats/grouping', Grouping);\n\nexport default Grouping;\n","export default function isDraft(status) {\n  return ['DRAFT', 'SUBMITTED', 'APPROVED'].includes(status);\n}\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Hr extends ObjectBlot {\n  static create(value) {\n    let node = super.create(value);\n    node.dataset.preserveHeight = '';\n    return node;\n  }\n}\n\nHr.blotName = 'hr';\n\nQuill.register('formats/hr', Hr);\n\nexport default Hr;\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nconst USES_FIXED_HEIGHT = [\n  'gallery',\n  'imageslider',\n  'ratingcard'\n];\n\nclass Doc extends ObjectBlot {\n  static create(value) {\n    let node = super.create(value);\n    node.classList.add(`${value.type}-object`);\n    if (USES_FIXED_HEIGHT.includes(value.type)) {\n      node.dataset.preserveHeight = '';\n    }\n    return node;\n  }\n}\n\nDoc.blotName = 'doc';\n\nQuill.register('formats/doc', Doc);\n\nexport default Doc;\n","import Quill from 'quill';\n\nconst Block = Quill.import('blots/block');\n\nclass Blockquote extends Block {}\nBlockquote.blotName = 'blockquote';\nBlockquote.tagName = 'BLOCKQUOTE';\n\nQuill.register('formats/blockquote', Blockquote);\n\nexport default Blockquote;\n","// Returns an array-of-arrays, where each sub-array is a run of elements from\n// the collection for which the callback function returns true.\n//\n// @param collection: An array.\n// @param predicate:\n//    A function called with the current chunk, and the next element of the\n//    collection. Return a boolean indicating if the item should be added to the\n//    current chunk (true), or should become the first element of a new chunk (false).\nmodule.exports = function chunkBy(collection, predicate) {\n  if (collection.length < 2) {\n    return [collection];\n  }\n  var chunks = [];\n  var chunk = [collection[0]];\n  for (let next of collection.slice(1)) {\n    if (predicate(chunk, next)) {\n      chunk.push(next);\n    } else {\n      chunks.push(chunk);\n      chunk = [next];\n    }\n  }\n  // Push hanging values\n  chunks.push(chunk);\n  return chunks;\n};\n","import Quill from 'quill';\n\nconst Inline = Quill.import('blots/inline');\n\nclass Superscript extends Inline {}\n\nSuperscript.blotName = 'superscript';\nSuperscript.tagName = 'SUP';\n\nQuill.register('formats/superscript', Superscript);\n\nexport default Superscript;\n","var { UNSAVED_WARNING } = require('../../config/messages');\n\nexport default function unsavedWarning() {\n  window.addEventListener('beforeunload', (event) => {\n    if (app.state.get('appWorking')) {\n      event.preventDefault();\n      event.returnValue = UNSAVED_WARNING;\n      return UNSAVED_WARNING;\n    }\n  });\n}\n","import Quill from 'quill';\n\nconst Parchment = Quill.import('parchment');\nconst Author = new Parchment.Attributor.Attribute('author', 'data-author');\n\nQuill.register('formats/author', Author);\n\nexport default Author;\n","const { COMMUNITY_CHANGED } = require('../../config/messages');\nconst messageActions = require('../../actions/messages');\nconst getQueryParams = require('../../lib/get_query_params');\n\nexport default function initCommunityChangedNotice() {\n  const params = getQueryParams();\n  if (params.communityChanged) {\n    const docLabel = app.state.get(['docLabel']);\n\n    messageActions.showMessage({\n      type: 'positive',\n      message: COMMUNITY_CHANGED.replace('{docLabel}', docLabel)\n    });\n  }\n}\n","import Quill from 'quill';\nimport LinkBlot from '../blots/link';\nimport isValidUrl from '../../is_valid_url';\nimport { INVALID_LINK_MESSAGE } from '../../../config/messages';\n\nconst TEMPLATE = `\n  <div class=\"ql-link-tooltip__wrapper\">\n    <a class=\"url\" target=\"_blank\" rel=\"external\"></a>\n    <input type=\"text\" class=\"input\">\n    <a class=\"change\">Change</a>\n    <a class=\"remove\">Remove</a>\n    <a class=\"done\">Done</a>\n  </div>\n  <div class=\"ql-link-tooltip__warning\"></div>\n`;\n\nconst DEFAULTS = {\n  maxLength: 50,\n  horizontalPadding: 5,\n  verticalPadding: 5\n};\n\nclass LinkTooltip {\n  constructor(quill, options) {\n    this.quill = quill;\n    this.options = Object.assign({}, DEFAULTS, options);\n    this.root = quill.addContainer('ql-link-tooltip');\n    this.root.innerHTML = TEMPLATE;\n    this.textbox = this.root.querySelector('input');\n    this.preview = this.root.querySelector('a.url');\n    this.warning = this.root.querySelector('.ql-link-tooltip__warning');\n\n    // Save or cancel, on certain keypresses\n    this.textbox.addEventListener('keydown', (event) => {\n      if (event.key === 'Enter') {\n        this.save();\n        event.preventDefault();\n      } else if (event.key === 'Escape') {\n        this.cancel();\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    });\n\n    // Clicking the change button toggles on edit mode\n    this.root.querySelector('a.change').addEventListener('click', (event) => {\n      this.edit(this.preview.textContent);\n      event.preventDefault();\n    });\n\n    // Clicking the done button saves the link\n    this.root.querySelector('a.done').addEventListener('click', (event) => {\n      this.save();\n      event.preventDefault();\n    });\n\n    // Clicking the remove button removes the link from the saved range\n    this.root.querySelector('a.remove').addEventListener('click', (event) => {\n      this.toggle(false);\n      event.preventDefault();\n    });\n\n    this.quill.on('selection-change', (...args) => {\n      // Ensure that quill.scrollingContainer has had it's scrollTop restored\n      // by quill.focus() before positioning\n      Promise.resolve().then(() => this.onSelectionChange(...args));\n    });\n\n    this.hide();\n  }\n\n  cancel() {\n    this.quill.setSelection(this.quill.selection.savedRange, 'user');\n  }\n\n  edit(url) {\n    this.root.classList.remove('hidden');\n    this.root.classList.add('editing');\n    this.textbox.value = url;\n    this.position(this.quill.getBounds(this.quill.selection.savedRange));\n    this.textbox.select();\n  }\n\n  format(value) {\n    let range = this.quill.selection.savedRange;\n    if (range.length === 0 && this.linkRange) {\n      range = this.linkRange;\n    }\n    this.quill.formatText(range, 'link', value, 'user');\n  }\n\n  hide() {\n    if (!this.root.classList.contains('hidden')) {\n      this.root.removeAttribute('style');\n      this.root.classList.add('hidden');\n      this.setWarning(null);\n    }\n  }\n\n  normalize(url) {\n    if (!/^(https?:\\/\\/|mailto:)/.test(url)) {\n      url = `http://${url}`;\n    }\n    return url;\n  }\n\n  // Show the link tooltip whenever the selection changes to a range that\n  // is encompassed by a single link/autolink blot\n  onSelectionChange(range) {\n    if (range == null) return;\n    let [link, offset] = this.quill.scroll.descendant(LinkBlot, range.index);\n    if (link != null && offset + range.length <= link.length()) {\n      let value = LinkBlot.formats(link.domNode);\n      this.preview.textContent = value;\n      this.preview.href = value;\n      this.linkRange = { index: range.index - offset, length: link.length() };\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  position(reference) {\n    // do nothing if element has not been appended to the DOM\n    if (!document.body.contains(this.root)) {\n      return;\n    }\n    let left = reference.left + reference.width/2 - this.root.offsetWidth/2;\n    // since reference.bottom is relative to quill.container, we need to add in\n    // quill.container.scrollTop in case quill.container is a scroll container,\n    // i.e. aggrandized mode.\n    let top = reference.bottom + this.quill.container.scrollTop + this.options.verticalPadding;\n    this.root.style.left = left + 'px';\n    this.root.style.top = top + 'px';\n    this.root.classList.remove('ql-flip');\n    let containerBounds = this.root.offsetParent.getBoundingClientRect();\n    let rootBounds = this.root.getBoundingClientRect();\n    if (containerBounds.right - rootBounds.right < this.options.horizontalPadding) {\n      let shift = containerBounds.right - rootBounds.right - (2 * this.options.horizontalPadding);\n      this.root.style.left = (left + shift) + 'px';\n    }\n    if (rootBounds.left - containerBounds.left < this.options.horizontalPadding) {\n      let shift = containerBounds.left - rootBounds.left + this.options.horizontalPadding;\n      this.root.style.left = (left + shift) + 'px';\n    }\n    if (rootBounds.bottom > document.documentElement.clientHeight - this.options.verticalPadding) {\n      let shift = reference.height + rootBounds.height + 2 * this.options.verticalPadding;\n      this.root.style.top = (top - shift) + 'px';\n      this.root.classList.add('ql-flip');\n    }\n  }\n\n  reposition() {\n    if (!this.root.classList.contains('hidden')) {\n      this.position(this.quill.getBounds(this.quill.selection.savedRange));\n    }\n  }\n\n  save() {\n    let value = this.textbox.value;\n\n    if (!isValidUrl(value)) {\n      this.setWarning(INVALID_LINK_MESSAGE);\n      return;\n    } else {\n      this.setWarning(null);\n    }\n\n    value = this.normalize(value);\n    this.format(value);\n    this.quill.focus();\n  }\n\n  setWarning(text) {\n    this.warning.textContent = text;\n    this.warning.classList.toggle('is-active', text != null);\n  }\n\n  show() {\n    this.root.classList.remove('editing');\n    this.root.classList.remove('hidden');\n    this.position(this.quill.getBounds(this.linkRange));\n  }\n\n  toggle(value) {\n    if (value) {\n      let range = this.quill.getSelection();\n      if (range == null || range.length === 0) return;\n      let url = this.quill.getText(range);\n      if (/^\\S+@\\S+\\.\\S+$/.test(url) && url.indexOf('mailto:') !== 0) {\n        url = 'mailto:' + url;\n      }\n      this.edit(url);\n    } else {\n      this.format(value);\n      this.quill.focus();\n      this.hide();\n    }\n  }\n}\n\nQuill.register('modules/link-tooltip', LinkTooltip);\n\nexport default LinkTooltip;\n","import Quill from 'quill';\nimport ListItem from './list_item';\n\nconst Parchment = Quill.import('parchment');\nconst Container = Quill.import('blots/container');\n\nclass List extends Container {\n  // Implement the FormatBlot interface\n  static formats(/* domNode */) {\n    return true;\n  }\n\n  // Pass along format command to last child\n  format(name, value) {\n    if (this.children.length > 0) {\n      this.children.tail.format(name, value);\n    }\n  }\n\n  // We're a container that contributes formats\n  formats() {\n    return { [this.statics.blotName]: true };\n  }\n\n  insertBefore(childBlot, refBlot) {\n    if (childBlot instanceof ListItem) {\n      super.insertBefore(childBlot, refBlot);\n    } else {\n      // split the list in order to insert a non-list-item\n      let index = refBlot == null ? this.length() : refBlot.offset(this);\n      let after = this.split(index);\n      after.parent.insertBefore(childBlot, after);\n    }\n  }\n\n  optimize(context) {\n    super.optimize(context);\n    let next = this.next;\n    if (next != null &&\n        next.prev === this &&\n        next.statics.blotName === this.statics.blotName) {\n      // merge adjacent lists\n      next.moveChildren(this);\n      next.remove();\n    }\n  }\n\n  replace(target) {\n    if (target.statics.blotName !== this.statics.blotName) {\n      // Wrap replacement in a ListItem if needed\n      let item = Parchment.create(this.statics.defaultChild);\n      target.moveChildren(item);\n      this.appendChild(item);\n    }\n    super.replace(target);\n  }\n}\n\nList.blotName = 'list';\nList.scope = Parchment.Scope.BLOCK_BLOT;\nList.tagName = 'OL';\nList.defaultChild = 'list-item';\nList.allowedChildren = [ListItem];\n\nQuill.register('formats/list', List);\n\nexport default List;\n","var { difference } = require('lodash');\nvar autosave = require('../../../actions/autosave');\nvar getPackageStories = require('../../../../shared/get_package_stories');\nvar docActions = require('../../../actions/docs');\n\nconst PACKAGE_LEAD_STORY_LAYOUT_KEYS = ['vertical', 'horizontal', 'fullwidth'];\nconst PACKAGE_STORY_LAYOUT_KEYS = ['1col', '2col'];\n\nexport default function initPackageStories() {\n  var toc = app.state.select(['doc', 'head', 'contents', 'draft', 'package_toc']);\n  toc.on('update', () => loadPackageStories(toc.get()));\n\n  var coverComponents = app.state.select(['doc', 'head', 'contents', 'draft', 'package_cover']);\n  coverComponents.on('update', () => setCoverStoryLayoutOptions(coverComponents.get()));\n  setCoverStoryLayoutOptions(coverComponents.get());\n\n  // package stories must be in state before the screen is loaded\n  return loadPackageStories(toc.get());\n}\n\nfunction loadPackageStories(toc) {\n  var oldStoryIds = Object.keys(app.state.get(['packageDocs']));\n  var currentStoryIds = getPackageStories(toc).map(({ uuid }) => uuid);\n  var removedStoryIds = difference(oldStoryIds, currentStoryIds);\n  var addedStoryIds = difference(currentStoryIds, oldStoryIds);\n\n  // Any edit to a TOC section heading will invoke this update handler. So, we\n  // only want to add or remove package stories to state if the TOC stories list\n  // itself has changed.\n  //\n  // NOTE: In an ideal world, we would compare the `currentData` and `previousData`\n  // given to us by Baobab via the `toc.on('update')` handler above, only\n  // invoking this function if the state has changed. But, due to a bug in our\n  // current version of Baobab, `currentData` and `previousData` are always the\n  // same. Thus, we compare manually with help from `_.difference`.\n  if (removedStoryIds.length === 0 && addedStoryIds.length === 0) {\n    return;\n  }\n\n  // Add new stories to state and then teardown stories that have been removed\n  var promise = addedStoryIds.length > 0 ? setPackageStories(addedStoryIds) : Promise.resolve();\n  return promise.then(() => {\n    for (let uuid of removedStoryIds) {\n      var docId = app.state.get(['packageDocs', uuid, 'id']);\n      autosave.teardownDoc(docId);\n    }\n  });\n}\n\nfunction setPackageStories(uuids) {\n  return docActions.searchDocs({\n    uuids: uuids.join(',')\n  }).then(({ docs }) => {\n    // initialize new docs to receive their remote updates\n    return Promise.all(docs.map(doc => {\n      return autosave.setAndInitDoc(doc);\n    }));\n  });\n}\n\nfunction setCoverStoryLayoutOptions(coverComponents) {\n  var docId = app.state.get(['doc', 'id']);\n  for (let [index, component] of coverComponents.entries()) {\n    if (!component.story) {\n      continue;\n    }\n    // if the lead story has a non-lead story layout, reset it to `horizontal`\n    // otherwise, a non-lead story has a lead story layout, reset it to `1col`\n    var layout;\n    if (index === 0 && PACKAGE_STORY_LAYOUT_KEYS.includes(component.story.layout)) {\n      layout = 'horizontal';\n    } else if (index > 0 && PACKAGE_LEAD_STORY_LAYOUT_KEYS.includes(component.story.layout)) {\n      layout = '1col';\n    }\n    if (layout) {\n      autosave.localUpdate(docId, [{\n        p: ['draft', 'package_cover', index, 'story', 'layout'],\n        od: component.story.layout,\n        oi: layout\n      }], -1);\n    }\n  }\n}\n","import Quill from 'quill';\nimport { bindAll, get as getPath } from 'lodash';\nimport { Delta } from 'rich-text';\nimport isolateObjects from '../../isolate_objects';\nimport removeInvalidFormats from '../../remove_invalid_formats';\nimport removeIncompleteGroups from '../../remove_incomplete_groups';\nimport setLineDefaults from '../../set_line_defaults';\nimport iframeReady from '../../iframe_ready';\n\nclass ObjectBehavior {\n  constructor(quill) {\n    bindAll(this, 'onTextChange', 'onSelectionChange', 'onClick');\n    this.quill = quill;\n    this.selectedIframes = [];\n    this.preventEdit = false;\n    quill.on('debounced-text-change', this.onTextChange);\n    quill.on('selection-change', this.onSelectionChange);\n    quill.root.addEventListener('click', this.onClick);\n  }\n\n  destroy() {\n    this.quill.root.removeEventListener('click', this.onClick);\n  }\n\n  onTextChange() {\n    this.onSelectionChange();\n\n    // Prevent recursion\n    if (this.preventEdit) { return; }\n\n    // Compose the various fix deltas\n    var fixDelta = this.buildFixDelta();\n\n    if (fixDelta.length() > 0) {\n      this.preventEdit = true;\n      this.quill.updateContents(fixDelta, 'user');\n      this.preventEdit = false;\n    }\n  }\n\n  buildFixDelta() {\n    var contents = this.quill.getContents();\n    var result = [\n      isolateObjects,\n      removeInvalidFormats,\n      removeIncompleteGroups,\n      setLineDefaults\n    ].reduce((fixDelta, fixFunc) => {\n      var currentContents = contents.compose(fixDelta);\n      return fixDelta.compose(fixFunc(currentContents));\n    }, new Delta());\n\n    return result.chop();\n  }\n\n  // Check if the selection consists of only one object.\n  // If so, call selectIframes(iframesInRange), else call selectIframes([]).\n  onSelectionChange() {\n    // Do not un-select any iframe if we lose focus\n    // We want the iframe to appear selected even when a sidebar editing UI is open\n    if (document.activeElement !== this.quill.root) {\n      return;\n    }\n\n    var selection = document.getSelection();\n    var range = selection.rangeCount > 0 && selection.getRangeAt(0);\n\n    // If there is no selection range, bail\n    if (!range) {\n      return;\n    }\n\n    if (range.collapsed) {\n      // common case, a collapsed selection cannot possibly contain iframes\n      this.selectIframes([]);\n    } else {\n      this.selectIframes(findInRange(range, 'iframe'));\n    }\n  }\n\n  onClick(e) {\n    var enabled = this.quill.root.isContentEditable;\n    if (enabled && e.target && e.target.tagName === 'IFRAME') {\n      var selection = document.getSelection();\n      var range = document.createRange();\n      range.setStartBefore(e.target);\n      range.setEndAfter(e.target);\n      selection.removeAllRanges();\n      selection.addRange(range);\n      this.quill.root.focus();\n    }\n  }\n\n  selectIframes(iframes) {\n    // Deselection\n    var selectedFrameIds = [];\n    var frameIds = iframes.map(iframe => getPath(iframe, ['dataset', 'frameId']));\n\n    for (let iframe of this.selectedIframes) {\n      var frameId = getPath(iframe, ['dataset', 'frameId']);\n      var body = getPath(iframe, ['contentWindow', 'document', 'body']);\n      if (frameIds.includes(frameId)) {\n        selectedFrameIds.push(frameId);\n      } else {\n        // If a selected iframe is removed, the body content within won't exist anymore\n        if (body) {\n          body.classList.remove('is-selected');\n          body.classList.remove('is-active');\n        }\n        app.emit('object.deselected', frameId);\n      }\n    }\n\n    // Selection\n    if (iframes.length > 0) {\n      for (let iframe of iframes) {\n        iframeReady(iframe).then(() => {\n          var frameId = iframe.dataset.frameId;\n          if (!selectedFrameIds.includes(frameId)) {\n            iframe.contentWindow.document.body.classList.add('is-selected');\n            iframe.contentWindow.document.body.classList.toggle('is-active', iframes.length === 1);\n            app.emit('object.selected', frameId);\n            iframe.contentWindow.postMessage({\n              event: 'object.selected',\n              payload: frameId\n            }, window.location.origin);\n          }\n        });\n      }\n    }\n\n    this.selectedIframes = iframes;\n  }\n}\n\nfunction findInRange(range, selector) {\n  var container = range.commonAncestorContainer;\n\n  if (container.nodeType !== Node.ELEMENT_NODE) {\n    return [];\n  }\n\n  var nodeRange = document.createRange();\n  return [...container.querySelectorAll(selector)].filter(node => {\n    nodeRange.selectNode(node);\n    var startsBefore = range.compareBoundaryPoints(Range.START_TO_START, nodeRange) <= 0;\n    var endsAfter = range.compareBoundaryPoints(Range.END_TO_END, nodeRange) >= 0;\n    return startsBefore && endsAfter;\n  });\n}\n\nQuill.register('modules/object-behavior', ObjectBehavior);\n\nexport default ObjectBehavior;\n","var autosave = require('../../../actions/autosave');\n\nexport default function() {\n  const slugIsEvergreen = app.state.get(['doc', 'head', 'contents', 'draft', 'slug_is_evergreen']);\n  if (typeof slugIsEvergreen === 'boolean') {\n    return;\n  }\n\n  const entrySlugIsEvergreenDefault = app.state.get(['community', 'entrySlugIsEvergreenDefault']);\n  if (typeof entrySlugIsEvergreenDefault !== 'boolean') {\n    return;\n  }\n\n  autosave.localUpdate(app.state.get(['doc', 'id']), [{\n    p: ['draft', 'slug_is_evergreen'],\n    oi: entrySlugIsEvergreenDefault\n  }], -1);\n}\n","const { SearchContributors } = require('../graphql/queries/users');\nconst userActions = require('./users');\nconst isPublished = require('../lib/is_published');\nconst graphqlRequest = require('../lib/graphql_request');\nconst autosave = require('./autosave');\nconst isPackage = require('../../shared/is_package');\n\nexport async function getContributors(text) {\n  let contributorIds = app.state.get(['doc', 'head', 'contents', 'draft', 'contributors']).map(c => c.chorus_id);\n\n  let { searchUsers } = await graphqlRequest('/api/tower/graphql', {\n    query: SearchContributors,\n    variables: { text, communityId: app.state.get(['doc', 'community_id']) }\n  });\n  // filter out users who are already saved as contributors\n  return searchUsers.results.filter(user => !contributorIds.includes(user.id));\n}\n\n// the userId argument is used by the contributors initializer\nexport function addContributor(contributorId, index, userId = null) {\n  // If the first user changes, update the story's Twitter data\n  if (index === 0) {\n    updateAutotweet(contributorId);\n  }\n  autosave.localUpdate(app.state.get(['doc', 'id']), [{ p: ['draft', 'contributors', index], li: { chorus_id: contributorId } }], userId);\n}\n\nexport function removeContributor(contributorId, index) {\n  // If the first user changes, update the story's Twitter data to the next user in the array\n  if (index === 0) {\n    updateAutotweet(app.state.get(['doc', 'head', 'contents', 'draft', 'contributors', 1, 'chorus_id']));\n  }\n  autosave.localUpdate(app.state.get(['doc', 'id']), [{ p: ['draft', 'contributors', index], ld: { chorus_id: contributorId } }]);\n}\n\nasync function updateAutotweet(contributorId) {\n  if (isPublished(app.state.get(['doc', 'status']))) {\n    return;\n  }\n\n  let delta = [];\n  const currentUserHandle = app.state.get(['doc', 'head', 'contents', 'draft', 'autotweets', 1, 'handle']) || null;\n  const newUserHandle = contributorId ? await userActions.getTwitterUsername(contributorId) : null;\n\n  if (newUserHandle && newUserHandle !== currentUserHandle) {\n    // If present, update the user twitter handle when the author changes\n    delta.push({\n      p: ['draft', 'autotweets', 1, 'handle'],\n      od: currentUserHandle,\n      oi: newUserHandle\n    });\n  } else if (currentUserHandle) {\n    // If there is no new user, just remove the current handle\n    delta.push({\n      p: ['draft', 'autotweets', 1, 'handle'],\n      od: currentUserHandle\n    });\n  }\n\n  if (delta.length > 0) {\n    autosave.localUpdate(app.state.get(['doc', 'id']), delta, -1);\n  }\n}\n\nexport function contributorsForDoc(doc) {\n  // When we reset the list of docs for the dashboard component after searching or\n  // toggling the archive view, Ractive will invoke this function for every previous\n  // doc with an `undefined` value. Since Ractive doesn't, we should guard against that.\n  if (!doc) {\n    return '';\n  }\n\n  if (isPackage(doc.head.contents)) {\n    return `${app.state.get(['community', 'network', 'name'])} staff`;\n  }\n\n  let contributors = doc.contributors || [];\n  if (contributors.length === 0) {\n    return doc.owner.fullName;\n  }\n\n  // We only want to display the names of the first two contributors. If there are\n  // any extra, display `+N` where N is the number of extra contributors.\n  let head = contributors.slice(0, 2);\n  let tail = contributors.slice(2);\n  let result = head.map(c => c.fullOrUserName).join(', ');\n  if (tail.length > 0) {\n    result = `${result} +${tail.length}`;\n  }\n\n  return result;\n}\n","var { sortBy, pick, get: getPath } = require('lodash');\nvar request = require('../lib/request');\nvar groupByFirstChar = require('../lib/group_by_first_char');\nvar autosave = require('./autosave');\n\nconst ENTRY_GROUP_ATTRIBUTES = [\n  'id',\n  'name',\n  'slug',\n  'parent_entry_group_id',\n  'auto_add_subgroup_entries',\n  'is_disclaimer'\n];\n\nexport function loadGroups(type, communityId) {\n  return request('/api/chorus/' + type + 's', {\n    query: {\n      per_page: 10000,\n      community_id: communityId || app.state.get('doc', 'community_id'),\n    },\n    opts: { cache: true }\n  }).then(response => response._embedded[type].map(group => {\n    return formatGroup(group, { includePlacementSlots: false });\n  }));\n}\n\nexport function loadGroup(type, id, includes) {\n  return request(`/api/chorus/${type}s/${id}`, {\n    query: {\n      community_id: app.state.get(['doc', 'community_id']),\n      includes: includes\n    }\n  }).then(formatGroup);\n}\n\nfunction formatGroup(group, { includePlacementSlots = true } = {}) {\n  var groupData = pick(group, ENTRY_GROUP_ATTRIBUTES);\n  var hubPageData = getPath(group, ['_embedded', 'hub_page']) || {};\n  groupData.hub_page_id = hubPageData.id || null;\n  if (includePlacementSlots) {\n    groupData.placement_slots = hubPageData.placement_slots || [];\n  } else {\n    groupData.placement_slots = null;\n  }\n\n  return groupData;\n}\n\nexport function loadNestedGroups(type) {\n  var result = {};\n  return loadGroups(type).then(allGroups => {\n    if (allGroups.length > 0) {\n      var topLevelGroups = allGroups.filter(group => group.parent_entry_group_id == null);\n      var alphabetizedGroups = groupByFirstChar(topLevelGroups);\n      result = nestedGroupsList(alphabetizedGroups, allGroups);\n    }\n    return result;\n  });\n}\n\n// Turn a single group into an array of group(s), including the initial group +\n// any auto-added parent groups.\nfunction getAllParents(group, allGroups) {\n  if (group.parent_entry_group_id) {\n    var parent = allGroups.find(g => g.id === group.parent_entry_group_id);\n    if (parent && parent.auto_add_subgroup_entries) {\n      return [group].concat(getAllParents(parent, allGroups));\n    }\n  }\n  return [group];\n}\n\nfunction childrenOf(parent, allGroups) {\n  var childrenOfParent = allGroups.filter(group => group.parent_entry_group_id === parent.id);\n  var children = sortBy(childrenOfParent, 'name');\n  parent.children = children;\n  return children;\n}\n\nfunction getAllChildren(parent, allGroups, depth=0) {\n  var children = childrenOf(parent, allGroups);\n  parent.depth = depth;\n\n  if (children.length > 0) {\n    depth++;\n    for (let child of children) {\n      getAllChildren(child, allGroups, depth);\n    }\n  }\n}\n\nfunction nestedGroupsList(alphabetizedGroups, allGroups) {\n  for (let topLevelGroups of Object.values(alphabetizedGroups)) {\n    for (let topLevelGroup of topLevelGroups) {\n      getAllChildren(topLevelGroup, allGroups);\n    }\n  }\n  return alphabetizedGroups;\n}\n\nexport function addGroup(allGroups, group, index, type) {\n  var contents = app.state.get(['doc', 'head', 'contents']);\n  var savedGroups = contents.draft[`${type}s`];\n  var groupsToAdd = getAllParents(group, allGroups);\n\n  // When adding a group, we first get a collection of groups to add that may include\n  // parent groups, if the selected group auto-adds parents. We then iterate through\n  // this list of groups, adding _only_ the groups that don't exist in state already.\n  // This is important, since parent groups auto-added may already exist in state.\n  var delta = groupsToAdd.reduce((ops, groupToAdd) => {\n    if (!savedGroups.find(g => g.id === groupToAdd.id)) {\n      ops.push({\n        p: ['draft', `${type}s`, index],\n        li: groupFromData(groupToAdd)\n      });\n    }\n    return ops;\n  }, []);\n\n  autosave.localUpdate(app.state.get(['doc', 'id']), delta);\n}\n\nexport function removeGroup(groupId, primaryGroupId, index, type) {\n  var primaryGroupPath = ['draft', `primary_${type}_id`];\n  var savedGroupsPath = ['draft', `${type}s`];\n  var savedGroups = app.state.get(['doc', 'head', 'contents', ...savedGroupsPath]);\n  var delta = [];\n\n  // If the group to remove is the primary group, set the next group in state as\n  // the primary group. If no other groups in state, simply remove the primary group id.\n  if (groupId === primaryGroupId) {\n    var newPrimaryGroup = savedGroups.find(g => g.id !== primaryGroupId);\n    if (newPrimaryGroup) {\n      delta.push({ p: primaryGroupPath, od: primaryGroupId, oi: newPrimaryGroup.id });\n    } else {\n      delta.push({ p: primaryGroupPath, od: primaryGroupId });\n    }\n  }\n\n  // Always remove the group from state\n  delta.push({ p: [...savedGroupsPath, index], ld: savedGroups[index] });\n  autosave.localUpdate(app.state.get(['doc', 'id']), delta);\n}\n\nexport function setPrimaryGroup(groupId, type) {\n  var primaryGroupPath = ['draft', `primary_${type}_id`];\n  var current = app.state.get(['doc', 'head', 'contents', ...primaryGroupPath]);\n  var docId = app.state.get(['doc', 'id']);\n  autosave.localUpdate(docId, [{ p: primaryGroupPath, od: current, oi: groupId }]);\n}\n\n// Transforms Chorus group data into a new Anthem schema compliant group for doc.head.contents\nexport function groupFromData(data) {\n  // This config controls whether the default placement should be for the first\n  // unpinned slot. Otherwise, the default is do not place.\n  var unpinnedByDefault = app.state.get(['community', 'placeFirstAvailableDefault']);\n  var group = pick(data, ['id', 'hub_page_id', 'name', 'slug']);\n  group.placement_slot = unpinnedByDefault ? null : -1;\n\n  return group;\n}\n","import Quill from 'quill';\nimport { bindAll, isEqual } from 'lodash';\nimport allowlistFormats from '../../../../shared/delta/allowlist_formats';\nimport { toInlineHtml } from 'convert-rich-text';\n\nclass Placeholder {\n  constructor(quill, options) {\n    bindAll(this, 'onFocus', 'onBlur', 'onTextChange');\n    this.quill = quill;\n    this.quill.on('debounced-text-change', this.onTextChange);\n    this.quill.root.addEventListener('focus', this.onFocus);\n    this.quill.root.addEventListener('blur', this.onBlur);\n    this.container = quill.addContainer('ql-placeholder');\n    this.options = options;\n    this.set(options.placeholder);\n    this.onTextChange();\n  }\n\n  showPlaceholder() {\n    return (this.quill.getText() === '\\n') &&\n      ((document.activeElement !== this.quill.root) || !document.hasFocus());\n  }\n\n  onFocus() {\n    if (this.quill.getText() === '\\n') {\n      this.quill.setContents(this.placeholder, 'user');\n    }\n  }\n\n  onBlur() {\n    if (isEqual(this.quill.getContents().ops, this.placeholder.ops)) {\n      this.quill.setContents([], 'user');\n    }\n    this.onTextChange();\n  }\n\n  // Only show the placeholder when the input is empty and unfocused\n  onTextChange() {\n    this.container.style.display = this.showPlaceholder() ? 'block' : 'none';\n    if (!this.options.autosize) {\n      this.matchSize();\n    }\n  }\n\n  set(delta) {\n    if (delta == null) {\n      delta = { ops: [{ insert: '\\n' }] };\n    } else if (typeof delta === 'string') {\n      delta = { ops: [{ insert: `${delta}\\n` }] };\n    }\n    var formats = Object.keys(this.quill.scroll.whitelist).concat('author');\n    this.placeholder = allowlistFormats(delta, formats);\n    this.container.innerHTML = toInlineHtml(delta, formats);\n    if (!this.options.autosize) {\n      this.matchSize();\n    }\n  }\n\n  matchSize() {\n    var editor = this.quill.root;\n    if (this.showPlaceholder()) {\n      var editorStyle = getComputedStyle(editor);\n      var borderWidth =\n        parseInt(editorStyle.borderTopWidth, 10) +\n        parseInt(editorStyle.borderBottomWidth, 10);\n      editor.style.minHeight = this.container.scrollHeight + borderWidth + 'px';\n    } else {\n      editor.style.minHeight = '';\n    }\n  }\n\n  destroy() {\n    this.quill.off('debounced-text-change', this.onTextChange);\n    this.quill.root.removeEventListener('focus', this.onFocus);\n    this.quill.root.removeEventListener('blur', this.onBlur);\n  }\n}\n\nQuill.register('modules/placeholder', Placeholder);\n\nexport default Placeholder;\n","import Quill from 'quill';\nimport { Delta } from 'rich-text';\nimport { bindAll } from 'lodash';\n\n// Remove default tab and enter key behavior to act more like a text input,\n// and convert newlines into spaces on text-change, except for the trailing newline.\nclass InlineMode {\n  constructor(quill) {\n    bindAll(this, ['setTabbing', 'unsetTabbing']);\n    this.tabbing = false;\n\n    // Listen to know when quill.root was focused via the <Tab> key\n    document.addEventListener('keydown', this.setTabbing);\n    document.addEventListener('keyup', this.unsetTabbing);\n\n    // If quill.root was focused as a result of the <Tab> key, then pre-select\n    // the full contents, mimicking native <input type=\"text\"> behavior.\n    quill.root.addEventListener('focus', () => {\n      if (this.tabbing) {\n        quill.setSelection(0, quill.getLength(), 'user');\n      }\n    });\n\n    // Replace all default <Tab> keybindings with one that moves focus to the\n    // next (or previous) element by delegating to the native behavior.\n    quill.keyboard.bindings['Tab'] = [{ // eslint-disable-line dot-notation\n      key: 'Tab',\n      shiftKey: null,\n      handler() {\n        return true;\n      }\n    }];\n\n    // Replace all default <Enter> keybindings with one that blurs the focus\n    // and prevents any default behavior.\n    quill.keyboard.bindings['Enter'] = [{ // eslint-disable-line dot-notation\n      key: 'Enter',\n      shiftKey: null,\n      handler() {\n        quill.setSelection(null, 'user');\n        return false;\n      }\n    }];\n\n    // Convert newlines to spaces on each change that adds a newline\n    quill.on('debounced-text-change', (delta, oldContents, source) => {\n      if (source !== 'user' || !delta.ops.some(op => /\\n/.test(op.insert))) {\n        return;\n      }\n\n      const fixDelta = new Delta();\n      const contents = quill.getContents();\n      const lastOp = contents.ops[contents.ops.length - 1];\n\n      for (let op of contents.ops) {\n        if (typeof op.insert === 'string') {\n          let insert = op.insert;\n          if (op === lastOp) {\n            // dont count the trailing newline\n            insert = insert.slice(0, -1);\n          }\n          let index = insert.indexOf('\\n');\n          while (index >= 0) {\n            fixDelta.retain(index);\n            fixDelta.insert(' ', op.attributes);\n            fixDelta.delete(1);\n            insert = insert.slice(index + 1);\n            index = insert.indexOf('\\n');\n          }\n          fixDelta.retain(insert.length);\n        } else {\n          fixDelta.retain(1);\n        }\n      }\n\n      if (fixDelta.chop().length() > 0) {\n        quill.updateContents(fixDelta, 'user');\n      }\n    });\n  }\n\n  setTabbing() {\n    this.tabbing = true;\n  }\n\n  unsetTabbing() {\n    this.tabbing = false;\n  }\n\n  teardown() {\n    document.removeEventListener('keydown', this.setTabbing);\n    document.removeEventListener('keyup', this.unsetTabbing);\n  }\n}\n\nQuill.register('modules/inline-mode', InlineMode);\n\nexport default InlineMode;\n","var { intersection } = require('lodash');\nvar { Delta } = require('rich-text');\n\nconst REQUIRES_DEFAULT_POSITION = ['pullquote', 'aside', 'ratingcard'];\n\nexport default function setLineDefaults(delta) {\n  var result = new Delta();\n\n  for (let [i, currentOp] of delta.ops.entries()) {\n    var currentAttr = currentOp.attributes || {};\n    var previousInsert = i > 0 ? delta.ops[i - 1].insert : {};\n\n    // A line is orphaned when it has a layout attribute (i.e. position or grouping)\n    // and the previous op it references either:\n    // A) Isn't a insert: 1 object op\n    // B) Is an hr\n    var isOrphaned = (\n      (currentAttr.hasOwnProperty('position') || currentAttr.hasOwnProperty('grouping')) &&\n      (typeof previousInsert === 'string' || previousInsert.hr)\n    );\n\n    // Checks to see if the object this line references in the previous op requires\n    // the default `position: 'float-right'` attribute.\n    var requiresDefaultPosition = (\n      intersection(Object.keys(previousInsert), REQUIRES_DEFAULT_POSITION).length > 0 ||\n      (previousInsert.doc && REQUIRES_DEFAULT_POSITION.indexOf(previousInsert.doc.type) > -1)\n    );\n\n    if (isOrphaned) {\n      result.retain(1, { position: null, grouping: null });\n    } else if (requiresDefaultPosition && !currentAttr.hasOwnProperty('position')) {\n      result.retain(1, { position: 'float-right' });\n    } else {\n      result.retain(typeof currentOp.insert === 'string' ? currentOp.insert.length : 1);\n    }\n  }\n\n  return result.chop();\n}\n","import Quill from 'quill';\nconst Block = Quill.import('blots/block');\n\nclass FourthHeader extends Block {}\n\nFourthHeader.blotName = 'fourthheader';\nFourthHeader.tagName = 'H4';\n\nQuill.register('formats/fourthheader', FourthHeader);\n\nexport default FourthHeader;\n","import Quill from 'quill';\n\nconst Parchment = Quill.import('parchment');\nconst AdPlacement = new Parchment.Attributor.Attribute('ad_placement', 'data-ad-placement', {\n  scope: Parchment.Scope.BLOCK\n});\n\nQuill.register('formats/ad_placement', AdPlacement);\n\nexport default AdPlacement;\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Actionbox extends ObjectBlot {}\nActionbox.blotName = 'actionbox';\n\nQuill.register('formats/actionbox', Actionbox);\n\nexport default Actionbox;\n","var { groupBy } = require('lodash');\nconst ALPHABET = /[A-Z#]/;\n\nexport default function groupByFirstChar(collection) {\n  return groupBy(collection, item => {\n    var letter = item.name.charAt(0).toUpperCase();\n    return ALPHABET.test(letter) ? letter : '#';\n  });\n}\n","// join an array by:\n//   inserting ',' between each element pair, except the last\n//   inserting ', and' between the last pair\nexport default function commaJoin(array) {\n  let str = '';\n  for (let [i, item] of array.entries()) {\n    if (i > 0 && array.length > 2) {\n      str += ','; // including the oxford comma\n    }\n    str += ' ';\n    if (i > 0 && i === array.length - 1) {\n      str += 'and ';\n    }\n    str += item;\n  }\n  return str;\n}\n","import Quill from 'quill';\n\nconst Parchment = Quill.import('parchment');\nconst QuillHistory = Quill.import('modules/history');\n\nclass History extends QuillHistory {\n  constructor(quill, options) {\n    super(quill, options);\n\n    this._undoOnBackspace = false;\n\n    // Whenever a user-initiated edit or cursor movement happens, reset\n    // _undoOnBackspace back to null\n    quill.on('editor-change', (...args) => {\n      let source = args.pop();\n      if (source === 'user') {\n        this._undoOnBackspace = false;\n      }\n    });\n\n    // On backspace, undo() instead of the default behavior if requested\n    // Use unshift() to ensure that our backspace key binding happens first\n    quill.keyboard.bindings['Backspace'].unshift({ // eslint-disable-line dot-notation\n      key: 'Backspace',\n      collapsed: true,\n      handler: () => {\n        if (this._undoOnBackspace) {\n          this.undo();\n          return false;\n        } else {\n          return true;\n        }\n      }\n    });\n  }\n\n  // Override\n  // Use the manually recorded selection index, if present\n  change(source, dest) {\n    if (this.stack[source].length === 0) return;\n    let delta = this.stack[source].pop();\n    this.stack[dest].push(delta);\n    this.lastRecorded = 0;\n    this.ignoreChange = true;\n    this.quill.updateContents(delta[source], Quill.sources.USER);\n    this.ignoreChange = false;\n    let index = (delta.index) ?\n      delta.index[source] : getLastChangeIndex(delta[source]);\n    this.quill.setSelection(index);\n  }\n\n  // Record selection indexes to set when undoing / redoing the last recorded change\n  // (used to manually manipulate the selection for inline shortcuts)\n  recordSelection(undoIndex, redoIndex = undoIndex) {\n    let delta = this.stack.undo[this.stack.undo.length - 1];\n    if (delta) {\n      delta.index = { undo: undoIndex, redo: redoIndex };\n    }\n  }\n\n  // Override\n  // Ensure that the undoIndex and redoIndex are transformed as well\n  transform(delta) {\n    super.transform(delta);\n    for (let change of this.stack.undo) {\n      if (change.index) {\n        change.index.undo = delta.transformPosition(change.index.undo, true);\n        change.index.redo = delta.transformPosition(change.index.redo, true);\n      }\n    }\n    for (let change of this.stack.redo) {\n      if (change.index) {\n        change.index.undo = delta.transformPosition(change.index.undo, true);\n        change.index.redo = delta.transformPosition(change.index.redo, true);\n      }\n    }\n  }\n\n  undoOnBackspace() {\n    this._undoOnBackspace = true;\n  }\n}\n\n// Override\n// Defer to the precomputed index, if present\nfunction getLastChangeIndex(delta) {\n  // Measure the length minus deletes\n  let deleteLength = delta.reduce(function(length, op) {\n    length += (op.delete || 0);\n    return length;\n  }, 0);\n  let changeIndex = delta.length() - deleteLength;\n  if (endsWithNewlineChange(delta)) {\n    changeIndex -= 1;\n  }\n  return changeIndex;\n}\n\n// Copied here as a dependency of getLastChangeIndex\nfunction endsWithNewlineChange(delta) {\n  let lastOp = delta.ops[delta.ops.length - 1];\n  if (lastOp == null) return false;\n  if (lastOp.insert != null) {\n    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\n');\n  }\n  if (lastOp.attributes != null) {\n    return Object.keys(lastOp.attributes).some(function(attr) {\n      return Parchment.query(attr, Parchment.Scope.BLOCK) != null;\n    });\n  }\n  return false;\n}\n\nQuill.register('modules/history', History, true);\n\nexport default History;\n","var autosave = require('../../../actions/autosave');\n\nexport default function() {\n  const delta = [];\n  const paths = [\n    ['draft', 'custom_field_flags'],\n    ['draft', 'custom_field_texts']\n  ];\n\n  for (const path of paths) {\n    const wrapper = app.state.get(['doc', 'head', 'contents', ...path]);\n    if (typeof wrapper !== 'object') {\n      delta.push({\n        p: path,\n        oi: {}\n      });\n    }\n  }\n\n  if (delta.length > 0) {\n    autosave.localUpdate(app.state.get(['doc', 'id']), delta, -1);\n  }\n}\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Readmore extends ObjectBlot {}\n\nReadmore.blotName = 'readmore';\n\nQuill.register('formats/readmore', Readmore);\n\nexport default Readmore;\n","var autosave = require('../../../actions/autosave');\nvar { loadLinkSets } = require('../../../actions/link_sets');\nvar { isCommunityPostAuthor } = require('../../../lib/authorization');\n\nexport default function() {\n  var linkSetId = app.state.get(['doc', 'head', 'contents', 'draft', 'link_set_id']);\n  var docStatus = app.state.get(['doc', 'status']);\n  var docId = app.state.get(['doc', 'id']);\n\n  loadLinkSets().then(linkSets => {\n    if (!linkSetId && docStatus === 'DRAFT') {\n      var defaultLinkSet;\n      if (isCommunityPostAuthor()) {\n        defaultLinkSet = linkSets.find(l => l.name === 'Community');\n      } else {\n        defaultLinkSet = linkSets.find(l => l.default);\n      }\n\n      if (defaultLinkSet) {\n        autosave.localUpdate(docId, [{ p: ['draft', 'link_set_id'], oi: defaultLinkSet.id }], -1);\n      }\n    } else if (linkSetId && !linkSets.find(l => l.id === linkSetId)) {\n      // if the link set we have saved doesn't exist, delete it\n      autosave.localUpdate(docId, [{ p: ['draft', 'link_set_id'], od: linkSetId, oi: null }], -1);\n    }\n  });\n}\n","import Quill from 'quill';\n\nconst Inline = Quill.import('blots/inline');\n\nclass Mark extends Inline {}\n\nMark.blotName = 'mark';\nMark.tagName = 'MARK';\n\nQuill.register('formats/mark', Mark);\n\nexport default Mark;\n","const util = require('util');\n\nfunction CommunityMismatchError(doc) {\n  Error.call(this);\n  Error.captureStackTrace(this, CommunityMismatchError);\n  this.docId = doc.id;\n  this.entryId = doc.entry_id;\n  this.message = 'Community mismatch between Content API doc and SBN entry';\n}\n\nutil.inherits(CommunityMismatchError, Error);\n\nCommunityMismatchError.prototype.name = 'CommunityMismatchError';\nCommunityMismatchError.prototype.status = 500;\n\nmodule.exports = CommunityMismatchError;\n","const { Delta } = require('rich-text');\n\n// Insert newlines just before or after an object op if not already present\nmodule.exports = function isolateObjects(contents) {\n  let delta = new Delta();\n  let objectWasLast = false;\n  let beginningOfLine = true;\n\n  for (let [i, op] of contents.ops.entries()) {\n    // look ahead for the next op containing a `\\n`\n    const lineOp = contents.ops.slice(i).find(op => /\\n/.test(op.insert));\n\n    if (typeof op.insert === 'string') {\n      // If an object was last, and the first character is not a newline,\n      // add one to isolate the object on the right side.\n      if (objectWasLast && op.insert.charAt(0) !== '\\n') {\n        delta.insert('\\n', lineOp.attributes);\n      }\n      delta.retain(op.insert.length);\n      objectWasLast = false;\n      beginningOfLine = (op.insert.charAt(op.insert.length - 1) === '\\n');\n    } else {\n      // If op.insert isn't a string, we are inserting an object into the doc body.\n      // If this isn't the beginning of a line, insert a newline immediately before\n      // the object to isolate the object on the left side.\n      if (!beginningOfLine) {\n        delta.insert('\\n', lineOp.attributes);\n      }\n      delta.retain(1);\n      objectWasLast = true;\n      beginningOfLine = false;\n    }\n  }\n\n  return delta.chop();\n};\n","var { remoteUpdate, onReconnect, updateDocFlag } = require('../../actions/autosave');\nvar messageActions = require('../../actions/messages');\nvar messages = require('../../config/messages');\nvar stateMatchObserver = require('../../lib/state_match_observer');\n\nexport default function initAutosave() {\n  app.state.set('autosave', {\n    dirty: {},\n    inLine: {},\n    inFlight: {},\n    sentIds: {},\n    quillContentPaths: {},\n    reconnectingIds: {},\n    initializingIds: {},\n    docsById: {}\n  });\n\n  // Receive remote update packets from the server and apply locally\n  app.contentApiSocket.on('autosave.remote-update', remoteUpdate);\n\n  // Receive status changes from the server and apply locally\n  app.contentApiSocket.on('autosave.doc-update', (docId, path, value) => {\n    if (path.includes('schema_version')) {\n      messageActions.showMessage({ type: 'positive', message: messages.RELOAD_REQUIRED, forceRefresh: true });\n      stateMatchObserver.stopAll();\n    }\n    updateDocFlag(docId, path, value);\n  });\n\n  app.on('autosave.error', () => messageActions.showError(messages.REALTIME_ERROR));\n  app.once('autosave.error', err => {\n    // Stop receiving remote updates, they may cause unwanted duplicate\n    // reports of 'missed a sequence' errors\n    app.contentApiSocket.off('autosave.remote-update', remoteUpdate);\n\n    // Store the error in app state to signal read-only mode\n    app.state.set(['autosave', 'error'], err);\n  });\n\n  app.on('reconnect', onReconnect);\n}\n","import Quill from 'quill';\nimport { Delta } from 'rich-text';\n\nclass DoubleSpaces {\n  constructor(quill) {\n    let ignore = false;\n\n    quill.on('debounced-text-change', (delta, oldContents, source) => {\n      if (ignore || source !== 'user') {\n        return;\n      }\n\n      const text = quill.getContents().reduce((text, op) => {\n        return text + (typeof op.insert === 'string' ? op.insert : '!');\n      }, '');\n      const fixDelta = new Delta();\n      let index = 0;\n\n      for (let op of delta.ops) {\n        if (op.delete) {\n          if (op.delete > 1) { // only take action on range deletions\n            const before = text.charAt(index - 1);\n            const after = text.charAt(index);\n            if (before === ' ' && after === ' ') {\n              fixDelta.delete(1);\n              index += 1;\n            }\n          }\n        } else {\n          const length = op.retain || op.insert.length || 1;\n          fixDelta.retain(length);\n          index += length;\n        }\n      }\n\n      if (fixDelta.chop().length() > 0) {\n        ignore = true;\n        quill.updateContents(fixDelta, 'user');\n        ignore = false;\n      }\n    });\n  }\n}\n\nQuill.register('modules/double-spaces', DoubleSpaces);\n\nexport default DoubleSpaces;\n","import Quill from 'quill';\n\nconst Parchment = Quill.import('parchment');\nconst Block = Quill.import('blots/block');\n\nclass ListItem extends Block {\n  static formats(domNode) {\n    // LI does not correspond to a rich-text attribute\n    return domNode.tagName === this.tagName ? undefined : super.formats(domNode);\n  }\n\n  format(name, value) {\n    if ((name === 'bullet' || name === 'list') && !value) {\n      // Replace with a default block when removing the bullet or list format\n      this.replaceWith(Parchment.create(this.statics.scope));\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  remove() {\n    if (this.prev == null && this.next == null) {\n      // Remove the list when removing the last item\n      this.parent.remove();\n    } else {\n      super.remove();\n    }\n  }\n\n  replaceWith(name, value) {\n    this.parent.isolate(this.offset(this.parent), this.length());\n    if (name === this.parent.statics.blotName) {\n      // Change from UL -> OL or vice versa by acting on the parent blot\n      this.parent.replaceWith(name, value);\n    } else {\n      // Unwrap the UL when replacing the LI\n      this.parent.unwrap();\n      return super.replaceWith(name, value);\n    }\n  }\n}\n\nListItem.blotName = 'list-item';\nListItem.tagName = 'LI';\n\nQuill.register('formats/list-item', ListItem);\n\nexport default ListItem;\n","const { forEachRight, uniq } = require('lodash');\nconst autosave = require('../../../actions/autosave');\nconst groupActions = require('../../../actions/groups');\nconst isDraft = require('../../../lib/is_draft');\nconst { isCommunityPostAuthor } = require('../../../lib/authorization');\n\nexport default function initGroups() {\n  initGroupsForType('site_group');\n\n  if (app.state.get(['community', 'network', 'usesSuperGroups'])) {\n    initGroupsForType('super_group');\n  }\n  if (app.state.get(['community', 'network', 'usesCampaignGroups'])) {\n    initGroupsForType('campaign_group');\n  }\n}\n\nasync function initGroupsForType(type) {\n  // Load all groups from sbn\n  const groups = await groupActions.loadGroups(type);\n  await sanitizeGroupData(type, groups);\n  if (type === 'site_group') {\n    // Set site_group data if empty after clearing out old group data\n    setInitialSiteGroupData(groups);\n  }\n}\n\n// Clear groups from state that are no longer available for the given community\n// Denormalize hub_page_id, name, and slug if not present\n// Set a default value for placement_slot based on the community default, if not present\nasync function sanitizeGroupData(type, groups) {\n  const delta = [];\n  const groupsPath = ['draft', `${type}s`];\n  const primaryGroupIdPath = ['draft', `primary_${type}_id`];\n\n  // Primary group\n  const primaryGroupId = app.state.get(['doc', 'head', 'contents', ...primaryGroupIdPath]);\n  if (primaryGroupId && !groups.find(({ id }) => id === primaryGroupId)) {\n    delta.push({ p: primaryGroupIdPath, od: primaryGroupId });\n  }\n\n  // Traverse the groups backwards to delete nonexistent and duplicate groups in place\n  const groupsInState = app.state.get(['doc', 'head', 'contents', ...groupsPath]);\n  const groupsInStateIds = groupsInState.map(g => g.id);\n  const hasDupes = groupsInStateIds.length !== uniq(groupsInStateIds).length;\n  forEachRight(groupsInState, (group, index) => {\n    const groupFromApi = groups.find(({ id }) => id === group.id);\n    // Note that when looking for duplicates, we want our subset to give us everything \"in front\" of the current index.\n    if (\n      !groupFromApi ||\n      (hasDupes && groupsInStateIds.slice(0, index).includes(group.id))\n    ) {\n      delta.push({ p: [...groupsPath, index], ld: group });\n    } else {\n      // Update denormalized data from API if needed\n      for (let key of ['hub_page_id', 'name', 'slug']) {\n        if (group[key] !== groupFromApi[key]) {\n          delta.push({ p: [...groupsPath, index, key], od: group[key], oi: groupFromApi[key] });\n        }\n      }\n      if (!group.hasOwnProperty('placement_slot')) {\n        const unpinnedByDefault = app.state.get(['community', 'placeFirstAvailableDefault']);\n        delta.push({ p: [...groupsPath, index, 'placement_slot'], oi: unpinnedByDefault ? null : -1 });\n      }\n    }\n  });\n\n  if (delta.length > 0) {\n    await autosave.resolveOnLocalUpdate(app.state.get(['doc', 'id']), delta, -1);\n  }\n}\n\nfunction setInitialSiteGroupData(groups) {\n  const docIsDraft = isDraft(app.state.get(['doc', 'status']));\n  const groupsInState = app.state.get(['doc', 'head', 'contents', 'draft', 'site_groups']);\n  let defaultGroup;\n\n  if (isCommunityPostAuthor()) {\n    defaultGroup = groups.find(({ slug }) => slug === 'community');\n  } else {\n    defaultGroup = groups.find(({ slug }) => slug === app.state.get(['community', 'defaultGroupSlug']));\n    if(!defaultGroup) {\n      defaultGroup = groups.find(({ slug }) => slug === 'front-page');\n    }\n  }\n\n  if (defaultGroup && docIsDraft && groupsInState.length === 0) {\n    autosave.localUpdate(app.state.get(['doc', 'id']), [{\n      p: ['draft', 'primary_site_group_id'],\n      oi: defaultGroup.id\n    }, {\n      p: ['draft', 'site_groups', 0],\n      li: groupActions.groupFromData(defaultGroup)\n    }], -1);\n  }\n}\n","import Quill from 'quill';\n\nconst Inline = Quill.import('blots/inline');\n\nclass Italic extends Inline {\n  // Use a simple boolean, despite tagName being an array,\n  // which by default causes this to return: { italic: 'EM' }\n  static formats() {\n    return true;\n  }\n\n  // Ensure that the <em> tag is used, not <i>\n  optimize(context) {\n    super.optimize(context);\n    if (this.domNode.tagName !== 'EM') {\n      this.replaceWith('italic');\n    }\n  }\n}\n\nItalic.blotName = 'italic';\n\n// Support parsing both <em> and <i> from pasted HTML\nItalic.tagName = ['EM', 'I'];\n\nQuill.register('formats/italic', Italic);\n\nexport default Italic;\n","import Quill from 'quill';\n\nconst Inline = Quill.import('blots/inline');\n\nclass Del extends Inline {}\n\nDel.blotName = 'del';\nDel.tagName = 'DEL';\n\nQuill.register('formats/del', Del);\n\nexport default Del;\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Newsletter extends ObjectBlot {}\n\nNewsletter.blotName = 'newsletter';\n\nQuill.register('formats/newsletter', Newsletter);\n\nexport default Newsletter;\n","import Quill from 'quill';\nimport BooleanDataAttributor from '../attributors/boolean_data_attributor';\n\nconst Parchment = Quill.import('parchment');\nconst Leadgraf = new BooleanDataAttributor('leadgraf', {\n  scope: Parchment.Scope.BLOCK\n});\n\nQuill.register('formats/leadgraf', Leadgraf);\n\nexport default Leadgraf;\n","import Quill from 'quill';\n\nconst TEMPLATE = `\n  <span class=\"cursor-flag\">\n    <span class=\"cursor-name\"></span>\n  </span>\n  <span class=\"cursor-caret\"></span>\n`;\n\nconst DEFAULTS = {\n  timeout: 2500\n};\n\nclass MultiCursor {\n  constructor(quill, options) {\n    this.quill = quill;\n    this.options = Object.assign({}, DEFAULTS, options);\n    this.container = quill.addContainer('ql-multi-cursor');\n    this.cursors = {};\n    quill.on('text-change', this._applyDelta, this);\n  }\n\n  clearCursors() {\n    for (let id of Object.keys(this.cursors)) {\n      this.removeCursor(id);\n    }\n    this.cursors = {};\n  }\n\n  moveCursor(id, index) {\n    const cursor = this.cursors[id];\n    if (cursor == null) return;\n    cursor.index = index;\n    cursor.elem.classList.remove('hidden');\n    clearTimeout(cursor.timer);\n    cursor.timer = setTimeout(() => {\n      cursor.elem.classList.add('hidden');\n      cursor.timer = null;\n    }, this.options.timeout);\n    this._updateCursor(cursor);\n    return cursor;\n  }\n\n  removeCursor(id) {\n    const cursor = this.cursors[id];\n    if (cursor) {\n      cursor.elem.parentNode.removeChild(cursor.elem);\n    }\n    delete this.cursors[id];\n  }\n\n  setCursor(id, index, name, color) {\n    if (this.cursors[id] == null) {\n      this.cursors[id] = {\n        id,\n        index,\n        color,\n        elem: this._buildCursor(name, color)\n      };\n    }\n    setTimeout(() => {\n      this.moveCursor(id, index);\n    }, 0);\n    return this.cursors[id];\n  }\n\n  shiftCursors(index, length) {\n    for (let cursor of Object.values(this.cursors)) {\n      if (!cursor || cursor.index <= index) continue;\n      const shift = Math.max(length, index - cursor.index);\n      cursor.index += shift;\n    }\n  }\n\n  update() {\n    for (let cursor of Object.values(this.cursors)) {\n      if (!cursor) continue;\n      this._updateCursor(cursor);\n    }\n  }\n\n  _applyDelta(delta) {\n    let index = 0;\n    for (let op of delta.ops) {\n      let length = 0;\n      if (op.insert) {\n        this.shiftCursors(index, op.insert.length || 1);\n      } else if (op.delete) {\n        this.shiftCursors(index, -1 * op.delete);\n      } else if (op.retain) {\n        this.shiftCursors(index, 0);\n        length = op.retain;\n      }\n      index += length;\n    }\n    this.update();\n  }\n\n  _buildCursor(name, color) {\n    const cursor = document.createElement('span');\n    cursor.classList.add('cursor');\n    cursor.innerHTML = TEMPLATE;\n    const cursorName = cursor.querySelector('.cursor-name');\n    cursorName.textContent = name;\n    const cursorCaret = cursor.querySelector('.cursor-caret');\n    cursorCaret.style.backgroundColor = cursorName.style.backgroundColor = color;\n    this.container.appendChild(cursor);\n    return cursor;\n  }\n\n  _updateCursor(cursor) {\n    const bounds = this.quill.getBounds(cursor.index);\n    if (!bounds) return this.removeCursor(cursor.id);\n    cursor.elem.style.top = (bounds.top + this.quill.container.scrollTop) + 'px';\n    cursor.elem.style.left = bounds.left + 'px';\n    cursor.elem.style.height = bounds.height + 'px';\n    const flag = cursor.elem.querySelector('.cursor-flag');\n    cursor.elem.classList.toggle('top', parseInt(cursor.elem.style.top, 10) <= flag.offsetHeight);\n    cursor.elem.classList.toggle('left', parseInt(cursor.elem.style.left, 10) <= flag.offsetWidth);\n    cursor.elem.classList.toggle('right', this.quill.root.offsetWidth - parseInt(cursor.elem.style.left, 10) <= flag.offsetWidth);\n  }\n}\n\nQuill.register('modules/multi-cursor', MultiCursor);\n\nexport default MultiCursor;\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Pym extends ObjectBlot {}\n\nPym.blotName = 'pym';\n\nQuill.register('formats/pym', Pym);\n\nexport default Pym;\n","import Quill from 'quill';\n\nconst Parchment = Quill.import('parchment');\nconst Position = new Parchment.Attributor.Attribute('position', 'data-position', {\n  scope: Parchment.Scope.BLOCK\n});\n\nQuill.register('formats/position', Position);\n\nexport default Position;\n","var moment = require('moment');\nvar NotFound = require('../components/404.html');\nvar autosave = require('../actions/autosave');\nvar communityActions = require('../actions/communities');\nvar docActions = require('../actions/docs');\nvar entryActions = require('../actions/entry');\nvar CommunityMismatchError = require('../../shared/errors/community_mismatch');\nvar initAutosave = require('../initializers/editor/autosave');\nvar initQuill = require('../initializers/editor/quill');\nvar initUnsavedWarning = require('../initializers/editor/unsaved_warning');\nvar initReloadMessage = require('../initializers/editor/reload_tab');\nvar initUserCountWarning = require('../initializers/editor/user_count_warning');\nvar initCommunityChangedNotice = require('../initializers/editor/community_changed_notice');\nvar initCustomstories = require('../initializers/editor/doc/customstories');\nvar initEntryLayout = require('../initializers/editor/doc/entry_layout');\nvar initPackageStories = require('../initializers/editor/doc/package_stories');\nvar initStreamMembers = require('../initializers/editor/doc/stream_members');\nvar initComments = require('../initializers/defaults/doc/comments');\nvar initSlugIsEvergreenDefault = require('../initializers/defaults/doc/slug_is_evergreen_default');\nvar initCustomFields = require('../initializers/defaults/doc/custom_fields');\nvar setAutotweets = require('../initializers/defaults/doc/autotweet');\nvar setContributors = require('../initializers/defaults/doc/contributors');\nvar setStructuredTags = require('../initializers/defaults/doc/structured_tags');\nvar setLeadArt = require('../initializers/defaults/doc/lead_art');\nvar setGroups = require('../initializers/defaults/doc/groups');\nvar setDefaultLinkSet = require('../initializers/defaults/doc/link_sets');\nvar sentryActions = require('../actions/sentry');\n\nexport default function(ctx, next) {\n  var uuid = ctx.pathname.slice(1).split('/', 2).pop();\n\n  var currentDoc = app.state.get(['doc']);\n  if (currentDoc != null && currentDoc.uuid === uuid) {\n    // Skip initialization if we're already looking at the same doc\n    return next();\n  }\n\n  // Order of operations is important:\n  // 1. Initialize autosave\n  // 2. Load the doc from the server\n  // 3. Set it in state\n  // 4. Load in community + entitlements, using the community ID associated with the doc\n  // 5. Initialize the doc for autosave\n  // 6. Run editor and contents initializers\n  initAutosave();\n  docActions.getDoc(uuid)\n    .then(doc => autosave.setDoc(doc, ['doc']))\n    .then(() => haltIfTrashed(next))\n    .then(() => checkCommunityContexts())\n    .then(() => communityActions.loadCommunity(app.state.get(['doc', 'community_id']), 'Editor'))\n    .then(() => autosave.initDoc(app.state.get(['doc', 'id']), true))\n    .then(() => {\n      initEditor();\n      return initContents();\n    })\n    .then(() => next())\n    .catch(sentryActions.handleError);\n}\n\n// If the doc is marked as trashed over 30 days ago, simply render not found\nfunction haltIfTrashed(next) {\n  var trashedAt = app.state.get(['doc', 'head', 'contents', 'trashed_at']);\n  var threshold = moment().subtract(30, 'days');\n  if (trashedAt && moment(trashedAt) < threshold) {\n    app.render(NotFound);\n    return next();\n  }\n  return Promise.resolve();\n}\n\n// There's a chance that a doc community change action will fail half way thru,\n// leading to a community mismatch b/t the SBN entry and the Content API doc. If\n// that's the case we should throw a fatal error, prompting us to triage manually.\nasync function checkCommunityContexts() {\n  const entry = await entryActions.getEntryById(app.state.get(['doc', 'entry_id']));\n\n  if (entry && entry.community_id && app.state.get(['doc', 'community_id']) !== entry.community_id) {\n    app.render(NotFound);\n    throw new CommunityMismatchError(app.state.get(['doc']));\n  }\n}\n\n// Runs editor-only initializers\nfunction initEditor() {\n  initQuill();\n  initUnsavedWarning();\n  initReloadMessage();\n  initUserCountWarning();\n  initCommunityChangedNotice();\n}\n\nfunction initContents() {\n  setAutotweets();\n  setContributors();\n  setLeadArt();\n  initEntryLayout();\n  initComments();\n  initSlugIsEvergreenDefault();\n  initCustomFields();\n  var docLabel = app.state.get(['docLabel']);\n  if (docLabel !== 'page') {\n    setGroups();\n    setDefaultLinkSet();\n    setStructuredTags();\n  }\n  if (docLabel === 'stream') {\n    initStreamMembers();\n  }\n  if (docLabel === 'package') {\n    return initPackageStories();\n  }\n  if (docLabel === 'custom story') {\n    return initCustomstories();\n  }\n\n  return Promise.resolve();\n}\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass TohProjectDetails extends ObjectBlot {}\n\nTohProjectDetails.blotName = 'toh_project_details';\n\nQuill.register('formats/toh_project_details', TohProjectDetails);\n\nexport default TohProjectDetails;\n","var autosave = require('../../../actions/autosave');\n\nexport default function() {\n  var contents = app.state.get(['doc', 'head', 'contents']);\n  var mediaType = contents.main_media_type;\n  var delta = [];\n\n  if (mediaType) {\n    delta.push({\n      p: ['main_media_type'],\n      od: mediaType\n    });\n  }\n\n  if (mediaType && (mediaType === 'VIDEO' || mediaType === 'NONE')) {\n    var mainImage = contents.main_image;\n    var cardImage = contents.internal_image;\n\n    delta = delta.concat([{\n      p: ['main_image'],\n      od: mainImage\n    }, {\n      p: ['internal_image'],\n      od: cardImage,\n      oi: mainImage\n    }]);\n  }\n\n  if (delta.length > 0) {\n    autosave.localUpdate(app.state.get(['doc', 'id']), delta, -1);\n  }\n}\n","import Quill from 'quill';\nimport ObjectBlot from './object';\n\nclass Html extends ObjectBlot {\n  static create(value) {\n    let node = super.create(value);\n    node.dataset.preserveHeight = '';\n    return node;\n  }\n}\n\nHtml.blotName = 'html';\n\nQuill.register('formats/html', Html);\n\nexport default Html;\n","var messages = require('../../config/messages');\nvar messageActions = require('../../actions/messages');\nvar hasMessagedUsers = false;\n\nexport default function initUserCountWarning() {\n  setTimeout(() => messageUsers(), 100);\n  var users = app.state.select('users');\n  users.on('update', messageUsers);\n}\n\nfunction messageUsers() {\n  if (!hasMessagedUsers && app.state.get('users').length > 10) {\n    hasMessagedUsers = true;\n    messageActions.showMessage({ message: messages.TOO_MANY_EDITORS, type: 'cautionary' });\n  }\n}\n","var { Delta } = require('rich-text');\nvar getAllOffsets = require('../../../../shared/delta/get_all_offsets');\nvar autosave = require('../../../actions/autosave');\nvar hasMinimalLayout = require('../../../../shared/has_minimal_layout');\n\nconst FEATURE_ONLY = /(hang-left|hang-right|full-bleed|wide-block)/;\n\nexport default function initEntryTypeObserver() {\n  var entryLayout = app.state.select(['doc', 'head', 'contents', 'draft', 'entry_layout']);\n  entryLayout.on('update', () => {\n    if (entryLayout.get() === 'unison_standard') {\n      removeInvalidPositions();\n    }\n  });\n\n  // only stories with a standard entry layout can have a lead gallery\n  var mainGallery = app.state.select(['doc', 'head', 'contents', 'draft', 'main_gallery']);\n  mainGallery.on('update', () => {\n    var layout = entryLayout.get();\n    if (mainGallery.get() && hasMinimalLayout(layout)) {\n      autosave.localUpdate(app.state.get(['doc', 'id']), [{ p: ['draft', 'entry_layout'], od: layout, oi: 'unison_standard' }], -1);\n    }\n  });\n}\n\n// Loops through and removes any invalid position attributes\nfunction removeInvalidPositions() {\n  var body = app.state.get(['doc', 'head', 'contents', 'draft', 'body']);\n  var invalids = getAllOffsets(body, op => {\n    return op.attributes.hasOwnProperty('position') && FEATURE_ONLY.test(op.attributes.position);\n  });\n\n  if (invalids.length > 0) {\n    var deltas = invalids.map(offset => {\n      var delta = new Delta().retain(offset).retain(1, { position: null });\n      return { p: ['draft', 'body'], t: 'rich-text', o: delta };\n    });\n\n    autosave.localUpdate(app.state.get(['doc', 'id']), deltas, -1);\n  }\n}\n","import Quill from 'quill';\n\nconst Inline = Quill.import('blots/inline');\nconst PROTOCOLS = ['http:', 'https:', 'mailto:', 'tel:'];\nconst BLANK = 'about:blank';\n\nfunction sanitize(url) {\n  try {\n    return PROTOCOLS.includes(new URL(url).protocol) ? url : BLANK;\n  } catch (err) {\n    return BLANK;\n  }\n}\n\nclass Link extends Inline {\n  static create(value) {\n    const sanitizedValue = sanitize(value);\n    const hasLink = sanitizedValue !== BLANK;\n\n    let node = super.create(sanitizedValue);\n    if (hasLink) {\n      node.setAttribute('href', sanitizedValue);\n      node.setAttribute('target', '_blank');\n    }\n    return node;\n  }\n\n  static formats(domNode) {\n    return domNode.getAttribute('href');\n  }\n\n  format(name, value) {\n    const sanitizedValue = sanitize(value);\n    if (name !== this.statics.blotName || !value || sanitizedValue === BLANK) {\n      return super.format(name, value);\n    }\n    this.domNode.setAttribute('href', sanitizedValue);\n  }\n}\n\nLink.blotName = 'link';\nLink.tagName = 'A';\nLink.className = 'ql-link';\n\nQuill.register('formats/link', Link);\n\nexport default Link;\n","const { get: getPath } = require('lodash');\nconst autosave = require('../../../actions/autosave');\nconst userActions = require('../../../actions/users');\nconst toRichText = require('../../../../shared/to_rich_text');\n\nexport default async function setAutotweets() {\n  let autotweets = app.state.get(['doc', 'head', 'contents', 'draft', 'autotweets']);\n  const userId = app.state.get(['doc', 'head', 'contents', 'draft', 'contributors', 0, 'chorus_id']);\n  const userHandle = userId && !getPath(autotweets, [1, 'handle']) ? await userActions.getTwitterUsername(userId) : null;\n  const community = app.state.get(['community']);\n  let delta = [];\n\n  if (!autotweets) {\n    autotweets = [{}, {}];\n    delta.push({ p: ['draft', 'autotweets'], oi: autotweets });\n  }\n\n  for (let [index, context] of ['community', 'user'].entries()) {\n    let tweet = autotweets[index];\n\n    if (!tweet) {\n      tweet = {};\n      delta.push({ p: ['draft', 'autotweets', index], li: tweet });\n    }\n\n    const defaultTweet = {\n      context,\n      handle: context === 'community' ? community.twitterScreenName : userHandle,\n      selected: community.twitterSendDefault,\n      image: community.tweetWithImageByDefault,\n      body: toRichText('')\n    };\n    for (let [key, value] of Object.entries(defaultTweet)) {\n      if (tweet[key] == null && value != null) {\n        delta.push({ p: ['draft', 'autotweets', index, key], oi: value });\n      }\n    }\n  }\n\n  if (delta.length > 0) {\n    autosave.localUpdate(app.state.get(['doc', 'id']), delta, -1);\n  }\n}\n","import Quill from 'quill';\nimport BooleanDataAttributor from '../attributors/boolean_data_attributor';\n\nconst Parchment = Quill.import('parchment');\nconst Dropcap = new BooleanDataAttributor('dropcap', {\n  scope: Parchment.Scope.BLOCK\n});\n\nQuill.register('formats/dropcap', Dropcap);\n\nexport default Dropcap;\n","export default function microtaskDebounce(fn) {\n  let scheduled = false;\n  return function debounced(...args) {\n    if (!scheduled) {\n      scheduled = true;\n      Promise.resolve().then(() => {\n        try {\n          fn.apply(this, args);\n        } finally {\n          scheduled = false;\n        }\n      });\n    }\n  };\n}\n","var { Delta } = require('rich-text');\nvar hash = require('../../shared/content-hash');\nvar sentryActions = require('../actions/sentry');\nvar autosave = require('../actions/autosave');\n\nvar observers = {};\n\nexport function stop(docId, path) {\n  // Clear any active intervals or timeouts for the current doc on load\n  var intervalKey = stateKey(docId, path);\n  if (observers[intervalKey]) {\n    clearInterval(observers[intervalKey]);\n    observers[intervalKey] = null;\n  }\n  var timeoutKey = errorKey(docId, path);\n  if (observers[timeoutKey]) {\n    clearTimeout(observers[timeoutKey]);\n    observers[timeoutKey] = null;\n  }\n}\n\nexport function stopAll() {\n  for (let key of Object.keys(observers)) {\n    clearInterval(observers[key]);\n    observers[key] = null;\n  }\n}\n\nexport function start(quill, docId, path) {\n  stop(docId, path);\n\n  // Setup the observer interval\n  var interval = setInterval(() => checkState(quill, docId, path), app.config.stateObserverInterval);\n  observers[stateKey(docId, path)] = interval;\n}\n\nfunction checkState(quill, docId, path, fire) {\n  var autosaveError = app.state.get('autosave', 'error');\n\n  // Only compare if not currently in the process of saving to client state &&\n  // not already in an error state\n  if (!autosave.isDirty(docId) && !autosaveError) {\n    // Data in `app.state` untouched by Quill are vanilla Objects; Quill contents\n    // are Deltas. The two cannot be compared via Lodash's isEqual. Using\n    // Object.assign() assures all are vanilla Objects for comparing.\n    var state = autosave.getDocCursor(docId).get(['head', 'contents'].concat(path));\n    var contents = quill.getContents();\n    var diff = new Delta(state).diff(contents);\n\n    // Only fire an event if this is an unresolved, recurring mismatch\n    if (diff.length() > 0) {\n      if (fire) {\n        var error = new Error(`Unexpected state mismatch at path: ${path}`);\n        error.state = state;\n        error.quill = contents;\n        error.diff = diff;\n        app.emit('autosave.error', error);\n        sentryActions.reportError(error, false);\n      } else {\n        var timeout = setTimeout(() => checkState(quill, docId, path, true), 10000);\n        observers[errorKey(docId, path)] = timeout;\n      }\n    }\n  }\n}\n\nfunction stateKey(docId, path) {\n  return hash(docId + path);\n}\n\nfunction errorKey(docId, path) {\n  return hash(docId + path + 'error');\n}\n","import Quill from 'quill';\n\nconst Inline = Quill.import('blots/inline');\n\nclass Small extends Inline {}\n\nSmall.blotName = 'small';\nSmall.tagName = 'SMALL';\n\nQuill.register('formats/small', Small);\n\nexport default Small;\n","const { addPage, getCustomstoryStatus } = require('../../../actions/customstory');\n\nconst SHORT_WAIT = 5000;\nconst LONG_WAIT = 30000;\n\nexport default async function initCustomstories() {\n  const pages = app.state.get(['doc', 'head', 'contents', 'draft', 'customstory_pages']);\n  if (pages.length === 0) {\n    await addPage(0);\n  }\n\n  app.state.set(['customstoryStatus'], {\n    statusLabel: 'Working',\n    statusMessage: '',\n    statusPending: true\n  });\n\n  pollForBuildStatus();\n\n  return Promise.resolve();\n}\n\nasync function delay(interval) {\n  await new Promise(resolve => {\n    setTimeout(resolve, interval);\n  });\n}\n\nasync function pollForBuildStatus(interval = 0) {\n  while (interval > 0) {\n    let recentlySent = app.state.get('customstoryBuildSent');\n    if (recentlySent) {\n      interval = 1000;\n      app.state.set('customstoryBuildSent', false);\n    }\n    await delay(1000);\n    interval -= 1000;\n  }\n  getBuildStatus();\n}\n\nasync function getBuildStatus() {\n  const { statusLabel } = await getCustomstoryStatus();\n\n  let nextInterval = LONG_WAIT;\n  if (['Building', 'Build queued'].includes(statusLabel)) {\n    nextInterval = SHORT_WAIT;\n  }\n\n  pollForBuildStatus(nextInterval);\n}\n","import Quill from 'quill';\n\nconst Parchment = Quill.import('parchment');\nconst Id = new Parchment.Attributor.Attribute('id', 'id', {\n  scope: Parchment.Scope.BLOCK\n});\n\nQuill.register('formats/id', Id);\n\nexport default Id;\n","import Quill from 'quill';\n\nconst Block = Quill.import('blots/block');\n\nclass FirstHeader extends Block {}\n\nFirstHeader.blotName = 'firstheader';\nFirstHeader.tagName = 'H1';\n\nQuill.register('formats/firstheader', FirstHeader);\n\nexport default FirstHeader;\n","var autosave = require('../../../actions/autosave');\n\nexport default function initStructuredTags() {\n  var community = app.state.get(['community']);\n  var delta = [];\n  var contents = app.state.get(['doc', 'head', 'contents']);\n\n  if (!contents.autotag_league_id && community.autoTagging.leagueId) {\n    delta.push({\n      p: ['autotag_league_id'],\n      oi: community.autoTagging.leagueId\n    });\n  }\n\n  if (!contents.autotag_team_id && community.autoTagging.teamId) {\n    delta.push({\n      p: ['autotag_team_id'],\n      oi: community.autoTagging.teamId\n    });\n  }\n\n  // For each tag type, add an empty array for that tag type to state. For new\n  // docs this will add all tag types to the doc. For existing docs, this will\n  // add any missing tag types.\n  for (let tagType of community.autoTagging.autotagTagTypes) {\n    if (!contents.draft.structured_tags.hasOwnProperty(tagType)) {\n      delta.push({\n        p: ['draft', 'structured_tags', tagType],\n        oi: []\n      });\n    }\n  }\n\n  if (delta.length > 0) {\n    autosave.localUpdate(app.state.get(['doc', 'id']), delta, -1);\n  }\n}\n","var { memberAdded, memberRemoved, setStreamMembers } = require('../../../actions/streams');\n\nexport default function initStreamMembers() {\n  // Receive stream updates from the server and apply locally\n  app.contentApiSocket.on('stream.story-added', memberAdded);\n  app.contentApiSocket.on('stream.story-removed', memberRemoved);\n\n  app.once('autosave.error', () => {\n    // Stop receiving remote stream updates if error occurs\n    app.contentApiSocket.off('stream.story-added', memberAdded);\n    app.contentApiSocket.off('stream.story-removed', memberRemoved);\n  });\n\n  setStreamMembers();\n}\n"],"sourceRoot":""}