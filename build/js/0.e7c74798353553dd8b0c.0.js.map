{"version":3,"sources":["webpack:///./client/lib/url_for_entry.js","webpack:///./client/actions/customstory.js","webpack:///./client/actions/lead_art.js","webpack:///./client/actions/oembeds.js","webpack:///./client/actions/overlays.js","webpack:///./client/actions/subdocs.js","webpack:///./client/graphql/queries/customstory.js","webpack:///./client/actions/objects.js","webpack:///./client/actions/videos.js"],"names":["entryId","https","protocol","app","state","get","index","autosave","resolveOnLocalUpdate","p","li","content_items","hed","toRichText","dek","slug","seo_title","seo_description","social_title","social_description","title","contentItem","content_type","image","caption","credit","video","oembed","toPlaintext","body","length","substring","set","graphqlRequest","query","customstoryQueries","createBuild","variables","JSON","stringify","projectUuid","cache","handleError","pageIndex","contentItemIndex","modalActions","closeModal","path","getPath","docId","imageActions","getAndEditImage","videoActions","getAndEditVideo","oembedActions","editOembed","overlayActions","openOverlay","editCustomstoryText","imageType","pushModal","editCustomstoryPage","build","success","BUILD_STATUS_MESSAGES","ok","status","err","queued","building","async","getProject","customstoryStatus","source","contentType","item","contents","content_id","getContentId","imageFromData","metadata","properties","localUpdate","ld","delta","push","concat","od","oi","filter","key","value","pruneMetadata","isEqual","resolveOnClean","oldPage","newPage","oldIndex","newIndex","lm","page","require","sentryActions","none","rebuild","Math","random","toString","slice","replace","toUpperCase","projectSource","response","uuid","builds","statusLabel","lastBuild","lastModified","statusMessage","determineCustomstoryStatus","e","reportError","statusPending","type","imagePath","videoPath","oembedPath","galleryPath","fallbackImagePath","gallery","subdocActions","editDoc","id","leadImagePath","leadImage","hasSearchAndSocial","Promise","resolve","saveImage","then","isGif","promoteInheritedArt","SEO_PATH","SOCIAL_PATH","INTERNAL_PATH","catch","insertImageAtPath","url","label","target","getYoutubeVideoFromUrl","test","includes","getOembed","data","el","document","createElement","innerHTML","blockquotes","Array","from","getElementsByTagName","iframes","supportedEmbed","blockquote","SUPPORTED_EMBED_CLASSES","getAttribute","links","embeds","all","map","link","oembedType","getOembedType","href","find","embed","SUPPORTED_EMBEDS","iframe","embedLink","split","lineId","customstoryActions","insertContentItem","oldOembed","getDocCursor","leadArtActions","replaceAdditionalArtWithMain","objectActions","insertObject","selectOembed","pick","request","messages","OEMBED_DATA","editObject","getModal","tail","params","options","opts","result","html","errorMessage","OEMBED_SUPPORT_ERROR","provider_name","OEMBED_YOUTUBE_SUPPORT_ERROR","toLowerCase","OEMBED_PDF_SUPPORT_ERROR","reject","Error","Object","keys","default_options","message","OEMBED_GENERIC_ERROR","current","setTimeout","querySelector","classList","add","schemaName","defaults","docActions","createDoc","startCase","subdoc","getEntryParams","schema_name","method","community_id","layout","subdocId","oldSubdoc","editorActions","doc","selectSubdoc","getSubdocIds","head","teardownDoc","unsetDocAlias","refreshDocIframes","SUBDOC_MODALS","initDoc","subdocInState","docInState","setDoc","getDoc","setAndInitDoc","editSubdoc","openModal","parse","src","localVideo","videoFromData","editVideo","assign","match","getYoutubeIdFromUrl","youtube_id","findIndex","cleanHTML","playerType","autoplay","mask_text","oldVideo","lastPathItem","results_per_page","results_type","has_assets","withHeaders","payload","results","parsePagination","perPage","total","parseInt","results_count","selectVideo","ALLOWLISTED_PLAYER_TYPES","title_short","playerTypes","getPlayerTypes","assets","video_assets","default_players","defaultPlayers","defaultPlayer","formatPlayerType","reduce","asset","player","unshift"],"mappings":"sJAAe,SAAqBA,GAAwB,IAAfC,EAAe,wDAC1D,MAAMC,EAAWD,EAAQ,QAAU,OACnC,MAAQ,GAAEC,OAAcC,IAAIC,MAAMC,IAAI,CAAC,YAAa,UAAW,sBAAsBL,K,iJCqBhF,SAAiBM,GACtB,OAAOC,EAASC,qBAAqBL,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,CAAC,CAClEI,EAAG,CAAC,QAAS,oBAAqBH,GAClCI,GAAI,CACFC,cAAe,GACfC,IAAKC,EAAW,YAChBC,IAAKD,EAAW,IAChBE,KAAMF,EAAW,IACjBG,UAAWH,EAAW,IACtBI,gBAAiBJ,EAAW,IAC5BK,aAAcL,EAAW,IACzBM,mBAAoBN,EAAW,S,2BAgB9B,WAAoD,IACrDO,EADmCC,EAAkB,uDAAJ,GAErD,OAAQA,EAAYC,cACpB,IAAK,QACHF,EAAQC,EAAYE,MAAMC,SAAWH,EAAYE,MAAME,QAAU,GACjE,MACF,IAAK,QACHL,EAAQC,EAAYK,MAAMN,OAAS,GACnC,MACF,IAAK,SACHA,EAAQC,EAAYM,OAAOP,OAAS,GACpC,MACF,IAAK,OACHA,EAAQQ,EAAYP,EAAYQ,OAAS,GAEzCT,EAAQA,EAAMU,OAAS,GAAKV,EAAMW,UAAU,EAAG,IAAM,MAAQX,EAG/D,OAAOA,GAAS,Y,cAgIX,WAEL,OADAjB,IAAIC,MAAM4B,IAAI,wBAAwB,GAC/BC,EAAe,2BAA4B,CAChDC,MAAOC,EAAmBC,YAC1BC,UAAWC,KAAKC,UAAU,CAAEC,YAAarC,IAAIC,MAAMC,IAAI,CAAC,MAAO,YAC9D,CAAEoC,OAAO,EAAOC,aAAa,K,kBAjD3B,SAAyBC,EAAWC,GAKzCC,EAAaC,aAEb,MAAMC,EAAO,CAAC,QAAS,oBAAqBJ,EAAW,gBAAiBC,GAClEvB,EAAc2B,EAAQ7C,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,aAAc0C,GAClEE,EAAQ9C,IAAIC,MAAMC,IAAI,CAAC,MAAO,OACpC,OAAQgB,EAAYC,cACpB,IAAK,QACH4B,EAAaC,gBAAgB9B,EAAYE,MAAO,oBAAqB,CAAE0B,QAAOF,SAC9E,MACF,IAAK,QACHK,EAAaC,gBAAgBhC,EAAYK,MAAO,SAAU,CAAEuB,QAAOF,SACnE,MACF,IAAK,SACHO,EAAcC,WAAWlC,EAAYM,OAAQ,SAAU,CAAEsB,QAAOF,SAChE,MACF,IAAK,OACHS,EAAeC,YAAY,CAAEC,oBAAqB,CAAET,QAAOF,Y,WA/HxD,SAAkBA,EAAMY,GAC7Bd,EAAae,UAAU,CAAEC,oBAAqB,CAAEd,OAAMY,gB,0BA+NjD,SAAiCG,GACtC,GAAIA,EAAMC,QACR,OAAOC,EAAsBC,GAE/B,OAAQH,EAAMI,QACd,IAAK,SACH,OAAOF,EAAsBG,IAC/B,IAAK,SACH,OAAOH,EAAsBI,OAC/B,QACE,OAAOJ,EAAsBK,W,uBA3C1BC,iBAEL,aAD4BC,KACPC,mB,kCAPhBF,iBAEL,aAD4BC,KACPE,Q,oBAjKhB,SAA2B1B,EAAM2B,GAAwB,IAAXC,EAAW,uDAAJ,GACtDC,EAAWzE,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,aAEzCgB,EAAc2B,EAAQ4B,EAAU7B,GAC/B1B,IACHA,EAAc,CACZwD,WAAYC,IACZxD,aAAcoD,IAIlB,OAAQA,GACR,IAAK,QACHrD,EAAYE,MAAQ2B,EAAa6B,cAAcJ,GAC/C,MACF,IAAK,QACHtD,EAAYK,MAAQiD,EACpB,MACF,IAAK,SACHtD,EAAYM,OAASgD,EACrB,MACF,IAAK,OAEHtD,EAAYQ,KAAOR,EAAYQ,MAAQhB,EAAW,IAElDQ,EAAY2D,SAAW,CAAEC,WAAY,IAGvC1E,EAAS2E,YAAY/E,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,CAAC,CAClDI,EAAGsC,EACHoC,GAAInC,EAAQ4B,EAAU7B,GACtBrC,GAAIW,M,4BAaDiD,eAAyCvB,EAAM3B,EAAO4D,GAC3D,MAAM/B,EAAQ9C,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAC9BgB,EAAc2B,EAAQ7C,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,aAAc0C,IAAS,GAEjF,IAAIqC,EAAQ,GACRhE,IAAUC,EAAYD,OACxBgE,EAAMC,KAAK,CAAE5E,EAAGsC,EAAKuC,OAAO,SAAUC,GAAIlE,EAAYD,MAAOoE,GAAIpE,IAEnE4D,EAYF,SAAuBA,GACjBA,EAASC,aACXD,EAASC,WAAaD,EAASC,WAAWQ,OAAO,QAAC,IAAEC,EAAF,MAAOC,GAAR,SAAoBD,GAAOC,KAE9E,OAAOX,EAhBIY,CAAcZ,GACpBa,EAAQb,EAAU3D,EAAY2D,WACjCI,EAAMC,KAAK,CAAE5E,EAAGsC,EAAKuC,OAAO,YAAaC,GAAIlE,EAAY2D,SAAUQ,GAAIR,IAGrEI,EAAMtD,OAAS,UAEXvB,EAASuF,eAAe7C,GAC9B1C,EAAS2E,YAAYjC,EAAOmC,K,kBA6CzB,SAAyBW,EAASC,EAASC,EAAUC,GAE1D,GAAIH,IAAYC,EACdzF,EAAS2E,YAAY/E,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,CAAC,CAClDI,EAAG,CAAC,QAAS,oBAAqBuF,EAAS,gBAAiBC,GAC5DE,GAAID,SAGD,CAEL,MAAMvB,EAAOxE,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,WAAY,QAAS,oBAAqB0F,EAAS,gBAAiBE,IAC/G1F,EAAS2E,YAAY/E,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,CACjD,CAAEI,EAAG,CAAC,QAAS,oBAAqBsF,EAAS,gBAAiBE,GAAWd,GAAIR,GAC7E,CAAElE,EAAG,CAAC,QAAS,oBAAqBuF,EAAS,gBAAiBE,GAAWxF,GAAIiE,O,oBA/C5E,SAA2BhC,EAAWC,GAC3C,MAAMvB,EAAclB,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,WAAY,QAAS,oBAAqBsC,EAAW,gBAAiBC,IACxHrC,EAAS2E,YAAY/E,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,CAAC,CAClDI,EAAG,CAAC,QAAS,oBAAqBkC,EAAW,gBAAiBC,GAC9DuC,GAAI9D,M,aA7GD,SAAoBf,EAAO8F,GAChC7F,EAAS2E,YAAY/E,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,CAAC,CAClDI,EAAG,CAAC,QAAS,oBAAqBH,GAClC6E,GAAIiB,MA1CR,MAAQ/F,IAAK2C,EAAP,QAAgB6C,GAAYQ,EAAQ,QACpCzE,EAAcyE,EAAQ,QAAqBzE,YAC3CrB,EAAW8F,EAAQ,QACnBxF,EAAawF,EAAQ,QACrBnD,EAAemD,EAAQ,QACvBjD,EAAeiD,EAAQ,QACvB/C,EAAgB+C,EAAQ,QACxBxD,EAAewD,EAAQ,QACvB7C,EAAiB6C,EAAQ,QACzBC,EAAgBD,EAAQ,QACxBpE,EAAiBoE,EAAQ,QACzBlE,EAAqBkE,EAAQ,QAEtBrC,EAAwB,CACnCuC,KAAM,WACNC,QAAS,iBACTrC,IAAK,cACLC,OAAQ,eACRC,SAAU,WACVJ,GAAI,YAyFN,SAASa,IAMP,OAAO2B,KAAKC,SAASC,SAAS,IAAIC,MAAM,GAAGC,QAAQ,qBAAsB,MAAMD,MAAM,EAAG,GAAGE,cA0FtFxC,eAAeC,IACpB,IAAIwC,EAAevC,EACnB,IACErE,IAAIC,MAAM4B,IAAI,CAAC,oBAAqB,kBAAkB,GACtD,MAAMgF,QAAiB/E,EAAe,2BAA4B,CAChEC,MAAOC,EAAmB4E,cAC1B1E,UAAWC,KAAKC,UAAU,CAAE0E,KAAM9G,IAAIC,MAAMC,IAAI,CAAC,MAAO,YACvD,CAAEoC,OAAO,EAAOC,aAAa,IAChCvC,IAAIC,MAAM4B,IAAI,CAAC,oBAAqB,kBAAkB,GACtD+E,EAAgBC,EAASD,cACzBvC,QA4BJF,eAA0CyC,GAExC,IAAKA,GAAiD,IAAhCA,EAAcG,OAAOpF,OACzC,MAAO,CAAEqF,YAAanD,EAAsBuC,MAI9C,MAAMa,EAAYL,EAAcG,OAAO,GAGvC,GAAIE,EAAUrD,QAAS,CAErB,OADgBqD,EAAUC,aACZlH,IAAIC,MAAMC,IAAI,CAAC,MAAO,eAC3B,CAAE8G,YAAanD,EAAsBwC,SAEvC,CAAEW,YAAanD,EAAsBC,IAG9C,OAAQmD,EAAUlD,QAClB,IAAK,SACH,MAAO,CAAEiD,YAAanD,EAAsBG,IAAKmD,cAAeF,EAAUE,eAC5E,IAAK,SACH,MAAO,CAAEH,YAAanD,EAAsBI,QAC9C,QACE,MAAO,CAAE+C,YAAanD,EAAsBK,WApDlBkD,CAA2BR,GACrD,MAAMS,GACNlB,EAAcmB,YAAYD,GAAG,GAC7BhD,EAAoB,CAClB2C,YAAa,kCACbG,cAAe,GACfI,eAAe,GASnB,OALAvH,IAAIC,MAAM4B,IAAI,CAAC,qBAAsBwC,GACjCuC,GACF5G,IAAIC,MAAM4B,IAAI,CAAC,qBAAsB+E,EAAcG,QAG9C,CAAEzC,OAAQsC,EAAevC,kBAAmBA,G,4HC5J9C,SAAqBmD,EAAMC,EAAWC,EAAWC,EAAYC,EAAaC,GAC/E,IAAI/E,EAAQ9C,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAC9BuE,EAAWzE,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,aAEzCkB,EAAQyB,EAAQ4B,EAAUgD,IAAc5E,EAAQ4B,EAAUoD,GAC1DtG,EAAQsB,EAAQ4B,EAAUiD,GAC1BlG,EAASqB,EAAQ4B,EAAUkD,GAC3BG,EAAUjF,EAAQ4B,EAAUmD,GAE5BrG,EACF0B,EAAaC,gBAAgB3B,EAAO,SAAU,CAAEuB,QAAOF,KAAM8E,IACpDlG,EACT2B,EAAcC,WAAW5B,EAAQ,SAAU,CAAEsB,QAAOF,KAAM+E,IACjDG,EACTC,EAAcC,QAAQF,EAAQG,GAAI,SAAU,CAAEnF,QAAOF,KAAMgF,IAClDxG,GAET2B,EAAaC,gBAAgB5B,EAAQ,SAAQoG,OAAW,CAAE1E,QAAOF,KAAM6E,K,gBA7EpE,SAAuBA,EAAWC,EAAWC,EAAYC,GAC9D,IAAI9E,EAAQ9C,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAC9BuE,EAAWzE,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,aAEzCkB,EAAQyB,EAAQ4B,EAAUgD,GAC1BlG,EAAQsB,EAAQ4B,EAAUiD,GAC1BlG,EAASqB,EAAQ4B,EAAUkD,GAC3BG,EAAUjF,EAAQ4B,EAAUmD,GAE5BxG,GACFhB,EAAS2E,YAAYjC,EAAO,CAAC,CAAExC,EAAGmH,EAAWrC,GAAIhE,KAE/CG,GACFnB,EAAS2E,YAAYjC,EAAO,CAAC,CAAExC,EAAGoH,EAAWtC,GAAI7D,KAE/CC,GACFpB,EAAS2E,YAAYjC,EAAO,CAAC,CAAExC,EAAGqH,EAAYvC,GAAI5D,KAEhDsG,GACF1H,EAAS2E,YAAYjC,EAAO,CAAC,CAAExC,EAAGsH,EAAaxC,GAAI0C,M,+BAehD,WACL,IAAIhF,EAAQ9C,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAC9BuE,EAAWzE,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,aACzCgI,EAAgB,CAAC,QAAS,cAC1BC,EAAYtF,EAAQ4B,EAAUyD,GAC9BE,EAAqD,SAAhCpI,IAAIC,MAAMC,IAAI,CAAC,aAGxC,IAAKiI,EACH,OAAOE,QAAQC,UAGjB,OAAOvF,EAAawF,UAAUJ,GAAWK,KAAKpH,IAExCgH,IAAuBK,EAAMN,KAC/BO,EAAoBtH,EAAOuH,GAC3BD,EAAoBtH,EAAOwH,IAE7BF,EAAoBtH,EAAOyH,GAE3BzI,EAAS2E,YAAYjC,EAAO,CAAC,CAAExC,EAAG4H,EAAe9C,GAAI+C,OACpDW,MAAM9E,IACPmC,EAAcmB,YAAYtD,MArE9B,IAAM9D,IAAK2C,GAAYqD,EAAQ,QAC3BjD,EAAeiD,EAAQ,QACvBnD,EAAemD,EAAQ,QACvB6B,EAAgB7B,EAAQ,QACxB/C,EAAgB+C,EAAQ,QACxBC,EAAgBD,EAAQ,QACxB9F,EAAW8F,EAAQ,QACnBuC,EAAQvC,EAAQ,QAEpB,MAAMyC,EAAW,CAAC,QAAS,aACrBC,EAAc,CAAC,QAAS,gBACxBC,EAAgB,CAAC,QAAS,kBAyBhC,SAASH,EAAoBtH,EAAOwB,GAIlC,IAAIE,EAAQ9C,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAC9BuE,EAAWzE,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQ,aACxC2C,EAAQ4B,EAAU7B,IACrBG,EAAagG,kBAAkB,CAAEjG,QAAOF,QAAQxB,K,mICgE7C,SAA0B4H,EAAKC,EAAOC,GAE3C,OAAOjG,EAAakG,uBAAuBH,EAAKC,EAAOC,GAAQJ,MAAM,KAC/D,aAAaM,KAAKJ,KACpBA,GAAOA,EAAIK,SAAS,KAAO,WAAa,WACxCL,GAAOhJ,IAAIC,MAAMC,IAAI,CAAC,YAAa,kBAG9BoJ,EAAU,CAAEN,QAAOR,KAAMhH,IAC9B4B,EAAW5B,EAAQyH,EAAOC,Q,yCA0BzB/E,eAAoCoF,GACzC,MAAMC,EAAKC,SAASC,cAAc,OAClCF,EAAGG,UAAYJ,EACf,MAAMK,EAAcC,MAAMC,KAAKN,EAAGO,qBAAqB,eACjDC,EAAUH,MAAMC,KAAKN,EAAGO,qBAAqB,WACnD,IAAIE,EAEJ,IAAK,IAAIC,KAAcN,EAErB,GAAIO,EAAwBd,SAASa,EAAWE,aAAa,UAAW,CACtE,MAAMC,EAAQR,MAAMC,KAAKI,EAAWH,qBAAqB,MACnDO,QAAejC,QAAQkC,IAAIF,EAAMG,IAAIrG,UAElC,CACLsG,OACAC,iBAHuBC,EAAc,CAAE3B,IAAKyB,EAAKG,WAWrD,GAJAX,EAAiBK,EAAOO,KAAKC,GACpBC,EAAiB1B,SAASyB,EAAMJ,aAGrCT,EACF,OAAOA,EAAeQ,KAAKL,aAAa,QAK9C,IAAK,IAAIY,KAAUhB,EAAS,CAE1B,MAAMiB,EAAYD,EAAOZ,aAAa,OAEtC,GADAH,QAAuBU,EAAc,CAAE3B,IAAKiC,IACxCF,EAAiB1B,SAASY,GAAiB,CAC7C,GAAuB,qBAAnBA,EAAuC,CAEzC,MAAQ,yCADWgB,EAAUC,MAAM,KAAK,GAEnC,MAAuB,eAAnBjB,EACFgB,EAAUC,MAAM,QAAQ,GAAGxE,QAAQ,OAAQ,KAE7CuE,K,eA7DN,WAA+CzJ,GAAQ,IAAjC,MAAEsB,EAAF,OAASqI,EAAT,KAAiBvI,GAAgB,EAC5D,GAAIA,EAAM,CAGR,GADwBA,EAAKyG,SAAS,qBAEpC+B,EAAmBC,kBAAkBzI,EAAM,SAAUpB,OAChD,CACL,IAAI8J,EAAYlL,EAASmL,aAAazI,GAAO5C,IAAI,CAAC,OAAQ,YAAYiF,OAAOvC,IAC7D,gBAAZA,EAAK,GACP4I,EAAeC,+BAA+BjD,KAAK,KACjDpI,EAAS2E,YAAYjC,EAAO,CAAC,CAAExC,EAAGsC,EAAMwC,GAAIkG,EAAWjG,GAAI7D,OAG7DpB,EAAS2E,YAAYjC,EAAO,CAAC,CAAExC,EAAGsC,EAAMwC,GAAIkG,EAAWjG,GAAI7D,WAI/DkK,EAAcC,aAAa,CAAE7I,QAAOqI,UAAU,CAAE3J,Y,eAvG7C,SAAsBwH,GAAkB,IAAbE,EAAa,uDAAJ,GACzCxG,EAAae,UAAU,CAAEmI,aAAc,CAAE5C,MAAKE,aApChD,MAAM,KAAE2C,GAAS3F,EAAQ,QACnB4F,EAAU5F,EAAQ,QAClB6F,EAAW7F,EAAQ,QACnBwF,EAAgBxF,EAAQ,QACxBjD,EAAeiD,EAAQ,QACvBxD,EAAewD,EAAQ,QACvBkF,EAAqBlF,EAAQ,QAC7BsF,EAAiBtF,EAAQ,QACzB9F,EAAW8F,EAAQ,QAEnB8F,EAAc,CAClB,OACA,MACA,OACA,QACA,cACA,aACA,gBACA,eACA,gBACA,kBACA,oBAGI7B,EAA0B,CAAC,gBAAiB,mBAC5CY,EAAmB,CACvB,iBACA,kBACA,UACA,mBACA,YACA,aACA,UAOK,SAAS3H,EAAWmG,EAAMN,GAAoB,IAAbC,EAAa,uDAAJ,GAC/C,MAAM+C,EAAa,CAAEA,WAAY,CAAE1C,OAAMN,QAAOzB,KAAM,SAAU0B,WAC5DxG,EAAawJ,SAAS,gBACxBxJ,EAAae,UAAUwI,GAGvBvJ,EAAae,UAAUwI,EAAY,CAAEL,aAAc,CAAE5C,IAAKO,EAAKP,IAAKE,UAAUiD,KAAMnM,IAAIC,MAAMC,IAAI,WAI/F,SAASoJ,EAAU8C,GAAsB,IAAdC,EAAc,uDAAJ,GAC1C,OAAOP,EAAQ,sBAAuB,CACpC/J,MAAOqK,EACPE,KAAM,CAAE/J,aAAa,KACpBiG,KAAM+D,IACP,IAAKA,EAAOC,KAAM,CAChB,IAAIC,EAAeV,EAASW,qBAM5B,MAL6B,YAAzBH,EAAOI,cACTF,EAAeV,EAASa,6BACsC,SAArDR,EAAOpD,IAAIkC,MAAM,KAAK,GAAGzE,OAAO,GAAGoG,gBAC5CJ,EAAeV,EAASe,0BAEnBzE,QAAQ0E,OAAO,IAAIC,MAAMP,IAIlC,MAAMjL,EAASqK,EAAKU,EAAQP,GAU5B,OANIiB,OAAOC,KAAKb,GAAS1K,OAAS,EAChCH,EAAO6K,QAAUA,EACRE,EAAOY,kBAChB3L,EAAO6K,QAAUE,EAAOY,iBAGnB3L,IACNsH,MAAM9E,IAILA,EAAIoJ,UAAYrB,EAASW,sBACzB1I,EAAIoJ,UAAYrB,EAASa,8BACzB5I,EAAIoJ,UAAYrB,EAASe,2BAEzB9I,EAAM,IAAIgJ,MAAMjB,EAASsB,uBAEpBhF,QAAQ0E,OAAO/I,EAAIoJ,WAIvB,SAASzC,EAAcpB,GAC5B,MAAMP,EAAMO,EAAKP,IACX2D,EAAgBpD,EAAKoD,cAE3B,OAAOb,EAAQ,2BAA4B,CACzC/J,MAAO,CAAEiH,MAAK2D,iBACdL,KAAM,CAAE/J,aAAa,KACpBiG,KAAK+D,GACCA,EAAO7B,YACb5B,MAAM9E,IAGPA,EAAM,IAAIgJ,MAAMjB,EAASsB,sBAClBhF,QAAQ0E,OAAO/I,O,kGCpFnB,WACL,IAAIsJ,EAAUtN,IAAIC,MAAMC,IAAI,WACxBoN,GAAWA,EAAQnB,KACrBnM,IAAIC,MAAM4B,IAAI,UAAWyL,EAAQnB,MAEjCnM,IAAIC,MAAM4B,IAAI,UAAW,O,aAItB,SAAoB0D,GACzB,OAAOvF,IAAIC,MAAMC,IAAI,UAAWqF,I,cA7B3B,SAAqBgE,GAC1BvJ,IAAIC,MAAM4B,IAAI,UAAW0H,GACpBvJ,IAAIC,MAAMC,IAAI,UACjBqN,WAAW,KACK9D,SAAS+D,cAAc,cAC7BC,UAAUC,IAAI,mBACrB,I,cAIA,SAAqBnE,GAC1B,IAAI+D,EAAUtN,IAAIC,MAAMC,IAAI,WAExBoN,GAAWL,OAAOC,KAAK3D,GAAM,KAAO0D,OAAOC,KAAKI,GAAS,KAC3D/D,EAAK4C,KAAOmB,EAAQnB,MAAQmB,GAE9BtN,IAAIC,MAAM4B,IAAI,UAAW0H,K,4HCEpB,SAAmBoE,GAAwC,IAA5BzE,EAA4B,uDAAnB,GAAI0E,EAAe,uDAAJ,GAC5DC,EAAWC,UAAUH,EAAYC,GAAUpF,KAAK,QAAC,GAAEP,GAAH,SAAYD,EAAQC,EAAI,SAAUiB,M,2BA4F7E,WACL,IAAIyE,EAAa3N,IAAIC,MAAMC,IAAI,CAAC,SAAU,gBACtCqF,EAAO,OAAMwI,EAAUJ,SACvBpE,EAAO,CAAE,CAAChE,IAAM,GAEf7C,EAAawJ,SAAS3G,IACzB7C,EAAae,UAAU8F,EAAM,K,aAnB1BpF,iBACL,IAAI6J,EAAShO,IAAIC,MAAMC,IAAI,CAAC,YACxB,KAAEqJ,SAAesE,EAAWI,eAAeD,EAAO/F,IAElDrF,EAAQ,4CAA2CoL,EAAOE,YAC9D,OAAOpC,EAAQlJ,EAAM,CACnBuL,OAAQ,OACRpM,MAAO,CAAEqM,aAAcpO,IAAIC,MAAMC,IAAI,CAAC,YAAa,QACnDwB,KAAM,CAAE6H,OAAM8E,QAAQ,GACtB/B,KAAM,CAAE/J,aAAa,KACpBiG,KAAK,QAAC,KAAEgE,GAAH,SAAcA,K,wBAvCjB,SAAmBtD,EAAQoF,EAAUX,GAC1C,IAAIK,EAAS,CAAExG,KAAMmG,EAAY1F,GAAIqG,GACrC,GAAIpF,EAAOtG,KAAM,CACf,IAAI2L,EAAYnO,EAASmL,aAAarC,EAAOpG,OAAO5C,IAAI,CAAC,OAAQ,YAAYiF,OAAO+D,EAAOtG,OACpE,iBAAnBsG,EAAOtG,KAAK,GACd4I,EAAeC,+BAA+BjD,KAAK,KACjDpI,EAAS2E,YAAYmE,EAAOpG,MAAO,CAAC,CAAExC,EAAG4I,EAAOtG,KAAMwC,GAAImJ,EAAWlJ,GAAI2I,OAG3E5N,EAAS2E,YAAYmE,EAAOpG,MAAO,CAAC,CAAExC,EAAG4I,EAAOtG,KAAMwC,GAAImJ,EAAWlJ,GAAI2I,UAI3EQ,EAAc7C,aAAa3L,IAAIC,MAAMC,IAAI,CAAC,MAAO,OAAQgJ,EAAOiC,OAAQ,CAAEsD,IAAKT,K,kCApE5E,SAAmBL,GAAyB,IAAbzE,EAAa,uDAAJ,GAC7CxG,EAAae,UAAU,CAAEiL,aAAc,CAAEf,aAAYzE,a,cAoChD/E,eAA2BmK,GAEhC,MAAMG,EAAMzO,IAAIC,MAAMC,IAAI,CAAC,cACrBE,EAASuF,eAAe8I,EAAIxG,IAI9B0G,EAAaF,EAAIG,KAAKnK,UAAU4E,SAASiF,SACrClO,EAASuF,eAAe2I,SAExBlO,EAASyO,YAAYP,GAI7BlO,EAAS0O,cAAc,CAAC,WACxBC,EAAkBT,IAlEpB,IAAI,UAAEP,GAAc7H,EAAQ,QACxB4F,EAAU5F,EAAQ,QAClB9F,EAAW8F,EAAQ,QACnB2H,EAAa3H,EAAQ,QACrByI,EAAezI,EAAQ,QACvBxD,EAAewD,EAAQ,QACvB7C,EAAiB6C,EAAQ,QACzBsI,EAAgBtI,EAAQ,QACxBsF,EAAiBtF,EAAQ,QAE7B,MAAM8I,EAAgB,CAAC,QAYhB,SAASC,EAAQX,GACtB,IAAIY,EAAgB9O,EAAS+O,WAAWb,GACxC,OAAIY,EAEK9O,EAASgP,OAAOF,EAAe,CAAC,WAElCrB,EAAWwB,OAAOf,GAAU9F,KAAKwF,GAC/B5N,EAASkP,cAActB,GAAQ,EAAO,CAAC,YAI3C,SAAShG,EAAQsG,EAAUrF,EAAOC,GACvC,OAAO+F,EAAQX,GAAU9F,KAAK,KAC5B,IAAImF,EAAa3N,IAAIC,MAAMC,IAAI,CAAC,SAAU,gBAC1C,OAAO8O,EAAc3F,SAASsE,GAMlC,SAAmBW,EAAUrF,EAAOC,GAClCxG,EAAae,UAAU,CAAE8L,WAAY,CAAEzM,MAAOwL,EAAUrF,QAAOC,YANzDsG,CAAUlB,EAAUrF,EAAOC,GASnC,SAAqBoF,EAAUrF,EAAOC,GACpCxG,EAAaC,aACbU,EAAeC,YAAY,CAAEiM,WAAY,CAAEzM,MAAOwL,EAAUrF,QAAOC,YAV7D5F,CAAYgL,EAAUrF,EAAOC,KAgD9B,SAAS6F,EAAkBT,GAEhC,IAAItE,EAAUH,MAAMC,KAAKL,SAASM,qBAAqB,WACvD,IAAK,IAAIiB,KAAUhB,EAAS,CAC1B,IAAIT,EAAOpH,KAAKsN,MAAMzE,EAAOZ,aAAa,gBACtCb,GAAQA,EAAKkF,KAAOlF,EAAKkF,IAAIxG,KAAOqG,IAEtCtD,EAAO0E,IAAM1E,EAAO0E,M,sBAjFS,K,0ICZL,0Q,cAkBF,oL,gGCfrB,SAAoBnG,EAAMN,GAAoB,IAAbC,EAAa,uDAAJ,GAC/C,IAAI1B,EAAOyF,OAAOC,KAAK3D,GAAM,GAC7B7G,EAAae,UAAU,CAAEwI,WAAY,CAAE1C,KAAMA,EAAK/B,GAAOyB,QAAOzB,OAAM0B,a,eAGjE,WAAyCK,GAAM,IAAzB,MAAEzG,EAAF,OAASqI,GAAgB,EACpDqD,EAAc7C,aAAa7I,EAAOqI,EAAQ5B,GAC1C7G,EAAaC,cAVf,IAAID,EAAewD,EAAQ,QACvBsI,EAAgBtI,EAAQ,S,mHC+BrB,SAAyByJ,GAA2C,IAA/B1G,EAA+B,uDAAvB,SAAUC,EAAa,uDAAJ,GACrE,OAAO4C,EAAS,sBAAqB6D,EAAW1H,IAAMO,KAAKe,IACzD,IAAIhI,EAAQqO,EAAcrG,GAC1B,OAAOsG,EAAU5C,OAAO6C,OAAO,GAAIvO,EAAOoO,GAAa1G,EAAOC,M,yBA4B3D,SAAgCF,EAAKC,EAAOC,GAEjD,IAAIjB,EAqGN,SAA6Be,GAC3B,GAAIA,EAAI+G,MAAM,aAAe/G,EAAIK,SAAS,YAIxC,OAAOL,EAAI+G,MAAM,kCAAkC,GAC9C,GAAI/G,EAAI+G,MAAM,YAGnB,OAAO/G,EAAI+G,MAAM,cAAc,GAGjC,OAAO,KAjHEC,CAAoBhH,GAC7B,IAAKf,EACH,OAAOI,QAAQ0E,SAGjB,OAAOjB,EAAQ,uCAAwC,CACrDqC,OAAQ,OACRpM,MAAO,CAAEkO,WAAYhI,GACrBqE,KAAM,CAAE/J,aAAa,KACpBiG,KAAKjH,IAEN,GAAI2H,EAAOtG,KAAM,CACf,IAAIzC,EAAQ+I,EAAOtG,KAAKsN,UAAW1L,GACV,iBAATA,GAAqBA,EAAK6E,SAAS,WAE/ClJ,GAAS,IACX+I,EAAOtG,KAAKzC,GAAS+I,EAAOtG,KAAKzC,GAAOuG,QAAQ,SAAU,UAG9D,OAAOmJ,EAAUD,EAAcrO,EAAO,WAAY0H,EAAOC,M,cAItD,WAA8CK,GAAM,IAA/B,MAAEzG,EAAF,OAASqI,EAAT,KAAiBvI,GAAc,EACzD2G,EAAKlI,QAAUkI,EAAKlI,QAAU8O,EAAU5G,EAAKlI,SAAW,GACxD,IAAIE,EAAQ,CACV0G,GAAIsB,EAAKtB,GACTnB,KAAMyC,EAAKzC,KACX7F,MAAOsI,EAAKtI,MACZmP,WAAY7G,EAAK6G,WACjBC,SAAU9G,EAAK8G,SACfhP,QAASkI,EAAKlI,QACdiP,UAAW/G,EAAK+G,WAGlB,GAAI1N,EAAM,CACR,IAAI2N,EAAWnQ,EAASmL,aAAazI,GAAO5C,IAAI,CAAC,OAAQ,YAAYiF,OAAOvC,IACxE4N,EAAe5N,EAAKA,EAAKjB,OAAS,GAEdiB,EAAKyG,SAAS,qBAGpC+B,EAAmBC,kBAAkBzI,EAAM,QAASrB,GACnB,iBAAjBiP,EAChBpQ,EAAS2E,YAAYjC,EAAO,CAAC,CAAExC,EAAGsC,EAAMoC,GAAIuL,EAAUhQ,GAAI,CAAEgB,MAAOA,MAC9C,eAAZqB,EAAK,GACd4I,EAAeC,+BAA+BjD,KAAK,KACjDpI,EAAS2E,YAAYjC,EAAO,CAAC,CAAExC,EAAGsC,EAAMwC,GAAImL,EAAUlL,GAAI9D,OAG5DnB,EAAS2E,YAAYjC,EAAO,CAAC,CAAExC,EAAGsC,EAAMwC,GAAImL,EAAUlL,GAAI9D,UAI5DiN,EAAc7C,aAAa7I,EAAOqI,EAAQ,CAAE5J,W,eAhFzC,SAAsBQ,GACtBA,EAAMkE,OACTlE,EAAMkE,KAAO,GAMf,OAJAlE,EAAM0O,iBAAmB,EACzB1O,EAAM2O,aAAe,SACrB3O,EAAM4O,YAAa,EAEZ7E,EAAQ,iCAAkC,CAC/C/J,QACAuK,KAAM,CAAEsE,aAAa,KACpBpI,KAAKqI,IACN,IAAItH,EAAOsH,EAAQtH,KAQnB,MAAO,CAPMA,EAAKuH,QAAQtG,IAAIjB,GAAQqG,EAAcrG,IACnCwH,EAAgB,CAC/B9K,KAAMlE,EAAMkE,KACZ+K,QAASjP,EAAM0O,iBACfQ,MAAOC,SAAS3H,EAAK4H,qB,cA5CpB,WAAkC,IAAbjI,EAAa,uDAAJ,GACnCxG,EAAae,UAAU,CAAE2N,YAAa,CAAElI,a,mBAGnC,SAA0B4H,GAC/B9Q,IAAIC,MAAM4B,IAAI,CAAC,QAAS,cAAe,WAAYiP,IAjBrD,IAAIhF,EAAU5F,EAAQ,QAClB6K,EAAkB7K,EAAQ,QAC1BiK,EAAYjK,EAAQ,QACpBxD,EAAewD,EAAQ,QACvBsI,EAAgBtI,EAAQ,QACxBkF,EAAqBlF,EAAQ,QAC7BsF,EAAiBtF,EAAQ,QACzB9F,EAAW8F,EAAQ,SACnB,UAAE6H,EAAW7N,IAAK2C,GAAYqD,EAAQ,QAE1C,MAAMmL,EAA2B,CAAC,UAAW,UAUtC,SAASxB,EAAUtG,EAAMN,GAAoB,IAAbC,EAAa,uDAAJ,GAC9C,IAAI2G,EAAY,CAAE5D,WAAY,CAAE1C,OAAMN,QAAOC,SAAQ1B,KAAM,UACvD9E,EAAawJ,SAAS,eACxBxJ,EAAae,UAAUoM,GAGvBnN,EAAae,UAAUoM,EAAW,CAAEuB,YAAa,CAAElI,UAAUiD,KAAMnM,IAAIC,MAAMC,IAAI,WAiGrF,SAAS0P,EAAcrO,EAAO6O,GAC5B,IAAIC,EAAW9O,EAAM8O,SAKrB,OAJgB,MAAZA,IACFA,EAAWrQ,IAAIC,MAAMC,IAAI,CAAC,YAAa,UAAW,qBAG7C,CACL+H,GAAI1G,EAAM0G,GACVnB,KAAMvF,EAAMuF,KACZ7F,MAAOM,EAAM+P,YACblB,WAAYA,GAAc,GAC1BmB,YAAaC,EAAejQ,EAAMkQ,QAAUlQ,EAAMmQ,aAAcnQ,EAAMoQ,iBACtEtB,SAAUA,EACVC,UAAW/O,EAAM+O,WAIrB,SAASkB,IAAiD,IAAlCC,EAAkC,uDAAzB,GAAIG,EAAqB,uDAAJ,GAEhDC,EAAgBC,EAAiBjP,EAAQ+O,EAAgB,CAAC,UAAW,QAAS,KAE9EL,EAAcE,EAAOM,OAAO,CAACxF,EAAQyF,KAEvC,IAAIC,EAASH,EAAiBE,EAAMxK,KAAK0D,MAAM,SAAS,IAIxD,OAHI+G,IAAWJ,GAAiBR,EAAyBhI,SAAS4I,KAAY1F,EAAOlD,SAAS4I,IAC5F1F,EAAOrH,KAAK+M,GAEP1F,GACN,IAOH,OAJIsF,GACFN,EAAYW,QAAS,YAAWL,MAG3BN,EAGT,SAASO,EAAiBG,GACxB,MAAgC,YAAzBA,EAAOpF,cAA8B,UAAYkB,EAAUkE","file":"0.e7c74798353553dd8b0c.0.js","sourcesContent":["export default function urlForEntry(entryId, https = false) {\n  const protocol = https ? 'https' : 'http';\n  return `${protocol}://${app.state.get(['community', 'network', 'schemaDomain'])}/e/${entryId}`;\n}\n","const { get: getPath, isEqual } = require('lodash');\nconst toPlaintext = require('convert-rich-text').toPlaintext;\nconst autosave = require('./autosave');\nconst toRichText = require('../../shared/to_rich_text');\nconst imageActions = require('./images');\nconst videoActions = require('./videos');\nconst oembedActions = require('./oembeds');\nconst modalActions = require('./modals');\nconst overlayActions = require('./overlays');\nconst sentryActions = require('./sentry');\nconst graphqlRequest = require('../lib/graphql_request');\nconst customstoryQueries = require('../graphql/queries/customstory');\n\nexport const BUILD_STATUS_MESSAGES = {\n  none: 'No build',\n  rebuild: 'Rebuild needed',\n  err: 'Build error',\n  queued: 'Build queued',\n  building: 'Building',\n  ok: 'Build OK'\n};\n\n// we return a promise for autosave so that the client can update when it's ready\nexport function addPage(index) {\n  return autosave.resolveOnLocalUpdate(app.state.get(['doc', 'id']), [{\n    p: ['draft', 'customstory_pages', index],\n    li: {\n      content_items: [],\n      hed: toRichText('Untitled'),\n      dek: toRichText(''),\n      slug: toRichText(''),\n      seo_title: toRichText(''),\n      seo_description: toRichText(''),\n      social_title: toRichText(''),\n      social_description: toRichText('')\n    }\n  }]);\n}\n\nexport function removePage(index, page) {\n  autosave.localUpdate(app.state.get(['doc', 'id']), [{\n    p: ['draft', 'customstory_pages', index],\n    ld: page\n  }]);\n}\n\nexport function editPage(path, imageType) {\n  modalActions.pushModal({ editCustomstoryPage: { path, imageType } });\n}\n\nexport function contentItemFallbackTitle(contentItem = {}) {\n  let title;\n  switch (contentItem.content_type) {\n  case 'image':\n    title = contentItem.image.caption || contentItem.image.credit || '';\n    break;\n  case 'video':\n    title = contentItem.video.title || '';\n    break;\n  case 'oembed':\n    title = contentItem.oembed.title || '';\n    break;\n  case 'text':\n    title = toPlaintext(contentItem.body) || '';\n    // Since this fallback can be long, truncate it\n    title = title.length > 40 ? title.substring(0, 40) + '...' : title;\n    break;\n  }\n  return title || 'Untitled';\n}\n\n// This function is used when adding any content item for the first time and\n// when editing the image, video, and oembed content item types\nexport function insertContentItem(path, contentType, item = {}) {\n  let contents = app.state.get(['doc', 'head', 'contents']);\n  // Start from the existing content item, if present, and then set the changed data\n  let contentItem = getPath(contents, path);\n  if (!contentItem) {\n    contentItem = {\n      content_id: getContentId(),\n      content_type: contentType\n    };\n  }\n\n  switch (contentType) {\n  case 'image':\n    contentItem.image = imageActions.imageFromData(item);\n    break;\n  case 'video':\n    contentItem.video = item;\n    break;\n  case 'oembed':\n    contentItem.oembed = item;\n    break;\n  case 'text':\n    // this field is saved inline, so don't overwrite it with `item`\n    contentItem.body = contentItem.body || toRichText('');\n    // since text metadata is edited in a separate modal, initialize it here for consistency\n    contentItem.metadata = { properties: [] };\n    break;\n  }\n  autosave.localUpdate(app.state.get(['doc', 'id']), [{\n    p: path,\n    ld: getPath(contents, path),\n    li: contentItem\n  }]);\n}\n\nfunction getContentId() {\n  // - Convert Math.random to base 36 (numbers + letters)\n  // - Remove starting zero and decimal\n  // - Remove any starting integers\n  // - Slice the first 8 characters after the decimal\n  // - Convert to uppercase\n  return Math.random().toString(36).slice(2).replace(/^[0-9]*([a-z0-9]*)/, '$1').slice(0, 8).toUpperCase();\n}\n\nexport async function insertContentItemMetadata(path, title, metadata) {\n  const docId = app.state.get(['doc', 'id']);\n  const contentItem = getPath(app.state.get(['doc', 'head', 'contents']), path) || {};\n\n  let delta = [];\n  if (title !== contentItem.title) {\n    delta.push({ p: path.concat('title'), od: contentItem.title, oi: title });\n  }\n  metadata = pruneMetadata(metadata);\n  if (!isEqual(metadata, contentItem.metadata)) {\n    delta.push({ p: path.concat('metadata'), od: contentItem.metadata, oi: metadata });\n  }\n\n  if (delta.length > 0) {\n    // wait for the previous autosave (which may have created the content item) to complete\n    await autosave.resolveOnClean(docId);\n    autosave.localUpdate(docId, delta);\n  }\n}\n\nfunction pruneMetadata(metadata) {\n  if (metadata.properties) {\n    metadata.properties = metadata.properties.filter(({ key, value }) => key || value);\n  }\n  return metadata;\n}\n\nexport function removeContentItem(pageIndex, contentItemIndex) {\n  const contentItem = app.state.get(['doc', 'head', 'contents', 'draft', 'customstory_pages', pageIndex, 'content_items', contentItemIndex]);\n  autosave.localUpdate(app.state.get(['doc', 'id']), [{\n    p: ['draft', 'customstory_pages', pageIndex, 'content_items', contentItemIndex],\n    ld: contentItem\n  }]);\n}\n\nexport function editContentItem(pageIndex, contentItemIndex) {\n  // HACK: Close any existing modals for a fresh modal \"stack\"\n  // We need to revist the content item editing process to account for rapid-fire editing of custom properties,\n  // which has exposed component lifecycle bugs around data getting saved in the wrong content item.\n  // For now, we'll attempt a fix by only rendering a single content item for rendering at a time.\n  modalActions.closeModal();\n\n  const path = ['draft', 'customstory_pages', pageIndex, 'content_items', contentItemIndex];\n  const contentItem = getPath(app.state.get(['doc', 'head', 'contents']), path);\n  const docId = app.state.get(['doc', 'id']);\n  switch (contentItem.content_type) {\n  case 'image':\n    imageActions.getAndEditImage(contentItem.image, 'image_customstory', { docId, path });\n    break;\n  case 'video':\n    videoActions.getAndEditVideo(contentItem.video, 'Update', { docId, path });\n    break;\n  case 'oembed':\n    oembedActions.editOembed(contentItem.oembed, 'Update', { docId, path });\n    break;\n  case 'text':\n    overlayActions.openOverlay({ editCustomstoryText: { docId, path } });\n    break;\n  }\n}\n\nexport function moveContentItem(oldPage, newPage, oldIndex, newIndex) {\n  // moving items within the same page\n  if (oldPage === newPage) {\n    autosave.localUpdate(app.state.get(['doc', 'id']), [{\n      p: ['draft', 'customstory_pages', newPage, 'content_items', oldIndex],\n      lm: newIndex\n    }]);\n  // moving item from one page to another\n  } else {\n    // first, grab the item\n    const item = app.state.get(['doc', 'head', 'contents', 'draft', 'customstory_pages', oldPage, 'content_items', oldIndex]);\n    autosave.localUpdate(app.state.get(['doc', 'id']), [\n      { p: ['draft', 'customstory_pages', oldPage, 'content_items', oldIndex], ld: item },\n      { p: ['draft', 'customstory_pages', newPage, 'content_items', newIndex], li: item }\n    ]);\n  }\n}\n\nexport function createBuild() {\n  app.state.set('customstoryBuildSent', true);\n  return graphqlRequest('/api/csk-service/graphql', {\n    query: customstoryQueries.createBuild,\n    variables: JSON.stringify({ projectUuid: app.state.get(['doc', 'uuid']) })\n  }, { cache: false, handleError: false });\n}\n\nexport async function getProject() {\n  let projectSource, customstoryStatus;\n  try {\n    app.state.set(['customstoryStatus', 'statusPending'], true);\n    const response = await graphqlRequest('/api/csk-service/graphql', {\n      query: customstoryQueries.projectSource,\n      variables: JSON.stringify({ uuid: app.state.get(['doc', 'uuid']) })\n    }, { cache: false, handleError: false });\n    app.state.set(['customstoryStatus', 'statusPending'], false);\n    projectSource = response.projectSource;\n    customstoryStatus = await determineCustomstoryStatus(projectSource);\n  } catch(e) {\n    sentryActions.reportError(e, false);\n    customstoryStatus = {\n      statusLabel: 'Unable to retrieve build status',\n      statusMessage: '',\n      statusPending: false\n    };\n  }\n\n  app.state.set(['customstoryStatus'], customstoryStatus);\n  if (projectSource) {\n    app.state.set(['customstoryBuilds'], projectSource.builds);\n  }\n\n  return { source: projectSource, customstoryStatus: customstoryStatus };\n}\n\nexport async function getProjectSource() {\n  const projectSource = await getProject();\n  return projectSource.source;\n}\n\nexport async function getCustomstoryStatus() {\n  const projectSource = await getProject();\n  return projectSource.customstoryStatus;\n}\n\nasync function determineCustomstoryStatus(projectSource) {\n  // Return early if there is no project source or no builds\n  if (!projectSource || projectSource.builds.length === 0) {\n    return { statusLabel: BUILD_STATUS_MESSAGES.none };\n  }\n\n  // Check the last build\n  const lastBuild = projectSource.builds[0];\n\n  // First check if it was successful\n  if (lastBuild.success) {\n    const builtAt = lastBuild.lastModified;\n    if (builtAt < app.state.get(['doc', 'updated_at'])) {\n      return { statusLabel: BUILD_STATUS_MESSAGES.rebuild };\n    }\n    return { statusLabel: BUILD_STATUS_MESSAGES.ok };\n  }\n  // Otherwise, return the status of the last build\n  switch (lastBuild.status) {\n  case 'failed':\n    return { statusLabel: BUILD_STATUS_MESSAGES.err, statusMessage: lastBuild.statusMessage };\n  case 'queued':\n    return { statusLabel: BUILD_STATUS_MESSAGES.queued };\n  default:\n    return { statusLabel: BUILD_STATUS_MESSAGES.building };\n  }\n}\n\nexport function getBuildStatusFromBuild(build) {\n  if (build.success) {\n    return BUILD_STATUS_MESSAGES.ok;\n  }\n  switch (build.status) {\n  case 'failed':\n    return BUILD_STATUS_MESSAGES.err;\n  case 'queued':\n    return BUILD_STATUS_MESSAGES.queued;\n  default:\n    return BUILD_STATUS_MESSAGES.building;\n  }\n}\n","var { get: getPath } = require('lodash');\nvar videoActions = require('./videos');\nvar imageActions = require('./images');\nvar subdocActions = require('./subdocs');\nvar oembedActions = require('./oembeds');\nvar sentryActions = require('./sentry');\nvar autosave = require('./autosave');\nvar isGif = require('../../shared/is_gif');\n\nconst SEO_PATH = ['draft', 'seo_image'];\nconst SOCIAL_PATH = ['draft', 'social_image'];\nconst INTERNAL_PATH = ['draft', 'internal_image'];\n\nexport function removeLeadArt(imagePath, videoPath, oembedPath, galleryPath) {\n  var docId = app.state.get(['doc', 'id']);\n  var contents = app.state.get(['doc', 'head', 'contents']);\n\n  var image = getPath(contents, imagePath);\n  var video = getPath(contents, videoPath);\n  var oembed = getPath(contents, oembedPath);\n  var gallery = getPath(contents, galleryPath);\n\n  if (image) {\n    autosave.localUpdate(docId, [{ p: imagePath, od: image }]);\n  }\n  if (video) {\n    autosave.localUpdate(docId, [{ p: videoPath, od: video }]);\n  }\n  if (oembed) {\n    autosave.localUpdate(docId, [{ p: oembedPath, od: oembed }]);\n  }\n  if (gallery) {\n    autosave.localUpdate(docId, [{ p: galleryPath, od: gallery }]);\n  }\n}\n\nfunction promoteInheritedArt(image, path) {\n  // Replace inherited additional art with the image\n  // they are inheriting -- so long as there is not already something\n  // in that slot\n  var docId = app.state.get(['doc', 'id']);\n  var contents = app.state.get(['doc', 'head', 'contents']);\n  if (!getPath(contents, path)) {\n    imageActions.insertImageAtPath({ docId, path }, image);\n  }\n}\n\nexport function replaceAdditionalArtWithMain() {\n  var docId = app.state.get(['doc', 'id']);\n  var contents = app.state.get(['doc', 'head', 'contents']);\n  var leadImagePath = ['draft', 'main_image'];\n  var leadImage = getPath(contents, leadImagePath);\n  var hasSearchAndSocial = app.state.get(['docLabel']) !== 'page';\n\n  // Only fire the rest of the logic if lead art is already an image\n  if (!leadImage) {\n    return Promise.resolve();\n  }\n\n  return imageActions.saveImage(leadImage).then(image => {\n    // Pages only have internal art; we can't send gifs to search/social\n    if (hasSearchAndSocial && !isGif(leadImage)) {\n      promoteInheritedArt(image, SEO_PATH);\n      promoteInheritedArt(image, SOCIAL_PATH);\n    }\n    promoteInheritedArt(image, INTERNAL_PATH);\n    // Delete lead art image (otherwise we'd have the lead embed/gallery/etc AND the lead image)\n    autosave.localUpdate(docId, [{ p: leadImagePath, od: leadImage }]);\n  }).catch(err => {\n    sentryActions.reportError(err);\n  });\n}\n\nexport function editLeadArt(type, imagePath, videoPath, oembedPath, galleryPath, fallbackImagePath) {\n  var docId = app.state.get(['doc', 'id']);\n  var contents = app.state.get(['doc', 'head', 'contents']);\n\n  var image = getPath(contents, imagePath) || getPath(contents, fallbackImagePath);\n  var video = getPath(contents, videoPath);\n  var oembed = getPath(contents, oembedPath);\n  var gallery = getPath(contents, galleryPath);\n\n  if (video) {\n    videoActions.getAndEditVideo(video, 'Update', { docId, path: videoPath });\n  } else if (oembed) {\n    oembedActions.editOembed(oembed, 'Update', { docId, path: oembedPath });\n  } else if (gallery) {\n    subdocActions.editDoc(gallery.id, 'Update', { docId, path: galleryPath });\n  } else if (image) {\n    // check for image last to prevent false positives from the fallback image\n    imageActions.getAndEditImage(image, `image_${type}art`, { docId, path: imagePath });\n  }\n}\n","const { pick } = require('lodash');\nconst request = require('../lib/request');\nconst messages = require('../config/messages');\nconst objectActions = require('./objects');\nconst videoActions = require('./videos');\nconst modalActions = require('./modals');\nconst customstoryActions = require('./customstory');\nconst leadArtActions = require('./lead_art');\nconst autosave = require('./autosave');\n\nconst OEMBED_DATA = [\n  'type',\n  'url',\n  'html',\n  'title',\n  'author_name',\n  'author_url',\n  'provider_name',\n  'provider_url',\n  'thumbnail_url',\n  'thumbnail_width',\n  'thumbnail_height'\n];\n\nconst SUPPORTED_EMBED_CLASSES = ['twitter-tweet', 'instagram-media'];\nconst SUPPORTED_EMBEDS = [\n  'twitter_status',\n  'twitter_profile',\n  'youtube',\n  'youtube_playlist',\n  'instagram',\n  'soundcloud',\n  'twitch'\n];\n\nexport function selectOembed(url, target = {}) {\n  modalActions.pushModal({ selectOembed: { url, target } });\n}\n\nexport function editOembed(data, label, target = {}) {\n  const editObject = { editObject: { data, label, type: 'oembed', target } };\n  if (modalActions.getModal('selectOembed')) {\n    modalActions.pushModal(editObject);\n  } else {\n    // insert the selectOembed modal in between the current modal and the editOembed modal\n    modalActions.pushModal(editObject, { selectOembed: { url: data.url, target }, tail: app.state.get('modal') });\n  }\n}\n\nexport function getOembed(params, options = {}) {\n  return request('/api/content/oembed', {\n    query: params,\n    opts: { handleError: false }\n  }).then((result) => {\n    if (!result.html) {\n      let errorMessage = messages.OEMBED_SUPPORT_ERROR;\n      if (result.provider_name === 'YouTube') {\n        errorMessage = messages.OEMBED_YOUTUBE_SUPPORT_ERROR;\n      } else if (params.url.split('?')[0].slice(-4).toLowerCase() === '.pdf') {\n        errorMessage = messages.OEMBED_PDF_SUPPORT_ERROR;\n      }\n      return Promise.reject(new Error(errorMessage));\n    }\n\n    // Pick out data we want\n    const oembed = pick(result, OEMBED_DATA);\n\n    // Pass the current options back with the new oembed result. If there are\n    // no current options and the server returns a default options set, use that.\n    if (Object.keys(options).length > 0) {\n      oembed.options = options;\n    } else if (result.default_options) {\n      oembed.options = result.default_options;\n    }\n\n    return oembed;\n  }).catch(err => {\n    // Take any unhandled error from the server and show the user our catch-all\n    // inline error message\n    if (\n      err.message !== messages.OEMBED_SUPPORT_ERROR &&\n      err.message !== messages.OEMBED_YOUTUBE_SUPPORT_ERROR &&\n      err.message !== messages.OEMBED_PDF_SUPPORT_ERROR\n    ) {\n      err = new Error(messages.OEMBED_GENERIC_ERROR);\n    }\n    return Promise.reject(err.message);\n  });\n}\n\nexport function getOembedType(data) {\n  const url = data.url;\n  const provider_name = data.provider_name; // eslint-disable-line camelcase\n\n  return request('/api/content/oembed/type', {\n    query: { url, provider_name },\n    opts: { handleError: false }\n  }).then(result => {\n    return result.oembedType;\n  }).catch(err => {\n    // Take any unhandled error from the server and show the user our catch-all\n    // inline error message\n    err = new Error(messages.OEMBED_GENERIC_ERROR);\n    return Promise.reject(err);\n  });\n}\n\nexport function getOembedOrVideo(url, label, target) {\n  // try to load the Volume video from a YouTube video, otherwise load from iframely\n  return videoActions.getYoutubeVideoFromUrl(url, label, target).catch(() => {\n    if (/twitch\\.tv/.test(url)) {\n      url += url.includes('?') ? '&parent=' : '?parent=';\n      url += app.state.get(['community', 'schemaDomain']);\n    }\n\n    return getOembed({ url }).then((oembed) => {\n      editOembed(oembed, label, target);\n    });\n  });\n}\n\nexport function insertOembed({ docId, lineId, path }, oembed) {\n  if (path) {\n    // HACK: we should break out different `edit-oembed` components similar to `edit-image`\n    var isCustomstoryPage = path.includes('customstory_pages');\n    if (isCustomstoryPage) {\n      customstoryActions.insertContentItem(path, 'oembed', oembed);\n    } else {\n      var oldOembed = autosave.getDocCursor(docId).get(['head', 'contents'].concat(path));\n      if (path[1] === 'main_oembed') {\n        leadArtActions.replaceAdditionalArtWithMain().then(() => {\n          autosave.localUpdate(docId, [{ p: path, od: oldOembed, oi: oembed }]);\n        });\n      } else {\n        autosave.localUpdate(docId, [{ p: path, od: oldOembed, oi: oembed }]);\n      }\n    }\n  } else {\n    objectActions.insertObject({ docId, lineId }, { oembed });\n  }\n}\n\nexport async function getOembedUrlFromHtml(data) {\n  const el = document.createElement('div');\n  el.innerHTML = data;\n  const blockquotes = Array.from(el.getElementsByTagName('blockquote'));\n  const iframes = Array.from(el.getElementsByTagName('iframe'));\n  let supportedEmbed;\n\n  for (let blockquote of blockquotes) {\n    // twitter or instagram\n    if (SUPPORTED_EMBED_CLASSES.includes(blockquote.getAttribute('class'))) {\n      const links = Array.from(blockquote.getElementsByTagName('a'));\n      const embeds = await Promise.all(links.map(async link => {\n        const oembedType = await getOembedType({ url: link.href });\n        return {\n          link,\n          oembedType\n        };\n      }));\n\n      supportedEmbed = embeds.find(embed => {\n        return SUPPORTED_EMBEDS.includes(embed.oembedType);\n      });\n\n      if (supportedEmbed) {\n        return supportedEmbed.link.getAttribute('href');\n      }\n    }\n  }\n\n  for (let iframe of iframes) {\n    // soundcloud or youtube\n    const embedLink = iframe.getAttribute('src');\n    supportedEmbed = await getOembedType({ url: embedLink });\n    if (SUPPORTED_EMBEDS.includes(supportedEmbed)) {\n      if (supportedEmbed === 'youtube_playlist') {\n        const playlistId = embedLink.split('=')[1];\n        return `https://www.youtube.com/playlist?list=${playlistId}`;\n      } else if (supportedEmbed === 'soundcloud') {\n        return embedLink.split('url=')[1].replace(/%3A/g, ':');\n      }\n      return embedLink;\n    }\n  }\n}\n","export function openOverlay(data) {\n  app.state.set('overlay', data);\n  if (!app.state.get('modal')) {\n    setTimeout(() => {\n      var overlay = document.querySelector('.m-overlay');\n      overlay.classList.add('is-full-screen');\n    }, 0);\n  }\n}\n\nexport function pushOverlay(data) {\n  var current = app.state.get('overlay');\n  // only store the new tail if the overlays are of different types\n  if (current && Object.keys(data)[0] !== Object.keys(current)[0]) {\n    data.tail = current.tail || current;\n  }\n  app.state.set('overlay', data);\n}\n\nexport function closeOverlay() {\n  var current = app.state.get('overlay');\n  if (current && current.tail) {\n    app.state.set('overlay', current.tail);\n  } else {\n    app.state.set('overlay', null);\n  }\n}\n\nexport function getOverlay(key) {\n  return app.state.get('overlay', key);\n}\n","var { startCase } = require('lodash');\nvar request = require('../lib/request');\nvar autosave = require('./autosave');\nvar docActions = require('./docs');\nvar getSubdocIds = require('../../shared/subdoc_ids');\nvar modalActions = require('./modals');\nvar overlayActions = require('./overlays');\nvar editorActions = require('./editor');\nvar leadArtActions = require('./lead_art');\n\nconst SUBDOC_MODALS = ['poll'];\n\nexport const MAX_POLL_CHAR_COUNT = 255;\n\nexport function selectDoc(schemaName, target = {}) {\n  modalActions.pushModal({ selectSubdoc: { schemaName, target } });\n}\n\nexport function createDoc(schemaName, target = {}, defaults = {}) {\n  docActions.createDoc(schemaName, defaults).then(({ id }) => editDoc(id, 'Insert', target));\n}\n\nexport function initDoc(subdocId) {\n  var subdocInState = autosave.docInState(subdocId);\n  if (subdocInState) {\n    // if the doc is already in state, just set its alias\n    return autosave.setDoc(subdocInState, ['subdoc']);\n  }\n  return docActions.getDoc(subdocId).then(subdoc => {\n    return autosave.setAndInitDoc(subdoc, false, ['subdoc']);\n  });\n}\n\nexport function editDoc(subdocId, label, target) {\n  return initDoc(subdocId).then(() => {\n    var schemaName = app.state.get(['subdoc', 'schema_name']);\n    return SUBDOC_MODALS.includes(schemaName)\n      ? openModal(subdocId, label, target)\n      : openOverlay(subdocId, label, target);\n  });\n}\n\nfunction openModal(subdocId, label, target) {\n  modalActions.pushModal({ editSubdoc: { docId: subdocId, label, target } });\n}\n\nfunction openOverlay(subdocId, label, target) {\n  modalActions.closeModal();\n  overlayActions.openOverlay({ editSubdoc: { docId: subdocId, label, target } });\n}\n\nexport async function teardownDoc(subdocId) {\n  // first, be sure main doc contents have been updated\n  const doc = app.state.get(['doc']);\n  await autosave.resolveOnClean(doc.id);\n\n  // only tear down the subdoc if it doesn't exist in the doc body\n  // otherwise, make sure the latest subdoc changes have been autosaved\n  if (getSubdocIds(doc.head.contents).includes(subdocId)) {\n    await autosave.resolveOnClean(subdocId);\n  } else {\n    await autosave.teardownDoc(subdocId);\n  }\n\n  // unset alias and refresh the subdoc iframe, if it exists\n  autosave.unsetDocAlias(['subdoc']);\n  refreshDocIframes(subdocId);\n}\n\nexport function insertDoc(target, subdocId, schemaName) {\n  var subdoc = { type: schemaName, id: subdocId };\n  if (target.path) {\n    var oldSubdoc = autosave.getDocCursor(target.docId).get(['head', 'contents'].concat(target.path));\n    if (target.path[1] === 'main_gallery') {\n      leadArtActions.replaceAdditionalArtWithMain().then(() => {\n        autosave.localUpdate(target.docId, [{ p: target.path, od: oldSubdoc, oi: subdoc }]);\n      });\n    } else {\n      autosave.localUpdate(target.docId, [{ p: target.path, od: oldSubdoc, oi: subdoc }]);\n    }\n  } else {\n    // if there's no path, insert it into the editor\n    editorActions.insertObject(app.state.get(['doc', 'id']), target.lineId, { doc: subdoc });\n  }\n}\n\nexport function refreshDocIframes(subdocId) {\n  // refresh any inline iframes matching the current doc to refresh the content\n  var iframes = Array.from(document.getElementsByTagName('iframe'));\n  for (let iframe of iframes) {\n    var data = JSON.parse(iframe.getAttribute('data-object'));\n    if (data && data.doc && data.doc.id === subdocId) {\n      // Forces a reload of the iframe source so the most recent data is rendered\n      iframe.src = iframe.src;\n    }\n  }\n}\n\nexport async function getDocHtml() {\n  var subdoc = app.state.get(['subdoc']);\n  var { data } = await docActions.getEntryParams(subdoc.id);\n\n  var path = `/api/chorus/cell/unison_anthem_component/${subdoc.schema_name}`;\n  return request(path, {\n    method: 'POST',\n    query: { community_id: app.state.get(['community', 'id']) },\n    body: { data, layout: true },\n    opts: { handleError: false }\n  }).then(({ html }) => html);\n}\n\nexport function editMetadata() {\n  var schemaName = app.state.get(['subdoc', 'schema_name']);\n  var key = `edit${startCase(schemaName)}Data`;\n  var data = { [key]: true };\n\n  if (!modalActions.getModal(key)) {\n    modalActions.pushModal(data, {});\n  }\n}\n","export const projectSource = `\n  query projectSource($uuid: String!) {\n    projectSource(uuid: $uuid) {\n      uuid\n      type\n      lastModified\n      builds {\n        uuid\n        status\n        statusMessage\n        success\n        lastModified\n        log\n      }\n    }\n  }\n`;\n\nexport const createBuild = `\n  mutation createBuild($projectUuid:String!) {\n    createBuild(input:{projectUuid: $projectUuid}){\n      uuid\n      status\n      success\n      lastModified\n    }\n  }\n`;\n","var modalActions = require('./modals');\nvar editorActions = require('./editor');\n\nexport function editObject(data, label, target = {}) {\n  var type = Object.keys(data)[0];\n  modalActions.pushModal({ editObject: { data: data[type], label, type, target } });\n}\n\nexport function insertObject({ docId, lineId }, data) {\n  editorActions.insertObject(docId, lineId, data);\n  modalActions.closeModal();\n}\n","var request = require('../lib/request');\nvar parsePagination = require('../lib/parse_pagination');\nvar cleanHTML = require('../lib/clean_html');\nvar modalActions = require('./modals');\nvar editorActions = require('./editor');\nvar customstoryActions = require('./customstory');\nvar leadArtActions = require('./lead_art');\nvar autosave = require('./autosave');\nvar { startCase, get: getPath } = require('lodash');\n\nconst ALLOWLISTED_PLAYER_TYPES = ['YouTube', 'Chorus'];\n\nexport function selectVideo(target = {}) {\n  modalActions.pushModal({ selectVideo: { target } });\n}\n\nexport function storeSelectVideo(results) {\n  app.state.set(['modal', 'selectVideo', 'results'], results);\n}\n\nexport function editVideo(data, label, target = {}) {\n  var editVideo = { editObject: { data, label, target, type: 'video' } };\n  if (modalActions.getModal('selectVideo')) {\n    modalActions.pushModal(editVideo);\n  } else {\n    // insert the selectVideo modal in between the current modal and the editVideo modal\n    modalActions.pushModal(editVideo, { selectVideo: { target }, tail: app.state.get('modal') });\n  }\n}\n\n// When loading a video from inline or from lead art, we need to requery for\n// the playerType data\nexport function getAndEditVideo(localVideo, label = 'Insert', target = {}) {\n  return request(`/api/volume/videos/${localVideo.id}`).then(data => {\n    var video = videoFromData(data);\n    return editVideo(Object.assign({}, video, localVideo), label, target);\n  });\n}\n\nexport function searchVideos(query) {\n  if (!query.page) {\n    query.page = 1;\n  }\n  query.results_per_page = 6;\n  query.results_type = 'simple';\n  query.has_assets = true;\n\n  return request('/api/volume/videos/search.json', {\n    query,\n    opts: { withHeaders: true }\n  }).then(payload => {\n    var data = payload.data;\n    var videos = data.results.map(data => videoFromData(data));\n    var pagination = parsePagination({\n      page: query.page,\n      perPage: query.results_per_page,\n      total: parseInt(data.results_count)\n    });\n\n    return [videos, pagination];\n  });\n}\n\nexport function getYoutubeVideoFromUrl(url, label, target) {\n  // Try to load a YouTube ID from the URL\n  var id = getYoutubeIdFromUrl(url);\n  if (!id) {\n    return Promise.reject();\n  }\n\n  return request('/api/volume/videos/from_youtube.json', {\n    method: 'POST',\n    query: { youtube_id: id },\n    opts: { handleError: false }\n  }).then(video => {\n    // if we're redirecting from an oembed to a video, update the path\n    if (target.path) {\n      var index = target.path.findIndex((item) => {\n        return typeof item === 'string' && item.includes('oembed');\n      });\n      if (index > -1) {\n        target.path[index] = target.path[index].replace('oembed', 'video');\n      }\n    }\n    return editVideo(videoFromData(video, 'youtube'), label, target);\n  });\n}\n\nexport function insertVideo({ docId, lineId, path }, data) {\n  data.caption = data.caption ? cleanHTML(data.caption) : '';\n  var video = {\n    id: data.id,\n    uuid: data.uuid,\n    title: data.title,\n    playerType: data.playerType,\n    autoplay: data.autoplay,\n    caption: data.caption,\n    mask_text: data.mask_text\n  };\n\n  if (path) {\n    var oldVideo = autosave.getDocCursor(docId).get(['head', 'contents'].concat(path));\n    var lastPathItem = path[path.length - 1];\n    // HACK: we should break out different `edit-oembed` components similar to `edit-image`\n    var isCustomstoryPage = path.includes('customstory_pages');\n\n    if (isCustomstoryPage) {\n      customstoryActions.insertContentItem(path, 'video', video);\n    } else if (typeof lastPathItem === 'number') {\n      autosave.localUpdate(docId, [{ p: path, ld: oldVideo, li: { video: video } }]);\n    } else if (path[1] === 'main_video') {\n      leadArtActions.replaceAdditionalArtWithMain().then(() => {\n        autosave.localUpdate(docId, [{ p: path, od: oldVideo, oi: video }]);\n      });\n    } else {\n      autosave.localUpdate(docId, [{ p: path, od: oldVideo, oi: video }]);\n    }\n  } else {\n    // if there's no path, insert it into the editor\n    editorActions.insertObject(docId, lineId, { video });\n  }\n}\n\nfunction videoFromData(video, playerType) {\n  var autoplay = video.autoplay;\n  if (autoplay == null) {\n    autoplay = app.state.get(['community', 'network', 'autoplayDefault']);\n  }\n\n  return {\n    id: video.id,\n    uuid: video.uuid,\n    title: video.title_short,\n    playerType: playerType || '',\n    playerTypes: getPlayerTypes(video.assets || video.video_assets, video.default_players),\n    autoplay: autoplay,\n    mask_text: video.mask_text\n  };\n}\n\nfunction getPlayerTypes(assets = [], defaultPlayers = {}) {\n  // We're looking up the desktop default player, but all three (desktop, mobile, tablet) are the same\n  let defaultPlayer = formatPlayerType(getPath(defaultPlayers, ['desktop', 'name'], ''));\n\n  let playerTypes = assets.reduce((result, asset) => {\n    // Check against allowlist and for duplicates\n    let player = formatPlayerType(asset.type.split('Asset')[0]);\n    if (player !== defaultPlayer && ALLOWLISTED_PLAYER_TYPES.includes(player) && !result.includes(player)) {\n      result.push(player);\n    }\n    return result;\n  }, []);\n\n  // Add the default player to the start of the array\n  if (defaultPlayer) {\n    playerTypes.unshift(`Default (${defaultPlayer})`);\n  }\n\n  return playerTypes;\n}\n\nfunction formatPlayerType(player) {\n  return player.toLowerCase() === 'youtube' ? 'YouTube' : startCase(player);\n}\n\n// Only support YouTube videos via URL\nfunction getYoutubeIdFromUrl(url) {\n  if (url.match(/youtube/) && !url.includes('playlist')) {\n    // Matches and returns \"videoidtext\" in non-playlist links:\n    // A) youtube.com/watch[?&]v=videoidtext(&key=value)\n    // B) youtube.com/embed/videoidtext(?key=value)\n    return url.match(/((\\/embed\\/)|([?&]v=))([^&?]+)/)[4];\n  } else if (url.match(/youtu.be/)) {\n    // Matches and returns \"videoidtext\" in:\n    // A) youtu.be/videoidtext\n    return url.match(/.be\\/(\\S+)/)[1];\n  }\n\n  return null;\n}\n"],"sourceRoot":""}